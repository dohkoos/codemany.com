<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Elasticsearch | 乐者为王]]></title>
  <link href="http://codemany.com/tags/elasticsearch/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2015-03-22T21:22:24+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elasticsearch的RESTful API]]></title>
    <link href="http://codemany.com/blog/elasticsearch-restful-api/"/>
    <updated>2015-02-14T09:31:14+08:00</updated>
    <id>http://codemany.com/blog/elasticsearch-restful-api</id>
    <content type="html"><![CDATA[<p>CURD的URL格式：</p>

<pre><code>http://localhost:9200/&lt;index&gt;/&lt;type&gt;/[&lt;id&gt;]
</code></pre>

<p>id是可选的，不提供的话Elasticsearch会自动生成。index和type将信息进行分层，便于管理。可以将index理解为数据库，type理解为数据表。</p>

<p>创建</p>

<pre><code># 使用自动生成ID的方式新建纪录
curl -XPOST localhost:9200/&lt;index&gt;/&lt;type&gt; -d '{ "tag" : "bad" }'

# 使用指定的ID新建记录
curl -XPOST localhost:9200/&lt;index&gt;/&lt;type&gt;/3 -d '{ "tag" : "bad" }'
</code></pre>

<p>查询</p>

<pre><code># 查询所有的index和type的记录
curl -XGET localhost:9200/_search?pretty

# 查询某个index下所有type的记录
curl -XGET localhost:9200/&lt;index&gt;/_search?pretty

# 查询某个index下某个type下所有的记录
curl -XGET localhost:9200/&lt;index&gt;/&lt;type&gt;/_search?pretty

# 使用参数查询所有的记录
curl -XGET localhost:9200/_search?q=tag:bad&amp;pretty

# 使用参数查询某个index下的所有记录
curl -XGET localhost:9200/&lt;index&gt;/_search?q=tag:bad&amp;pretty

# 使用参数查询某个index下某个type下所有的记录
curl -XGET localhost:9200/&lt;index&gt;/&lt;type&gt;/_search?q=tag:bad&amp;pretty

# 使用JSON参数查询所有的记录，-d代表一个JSON格式的对象
curl -XGET localhost:9200/_search?pretty -d '{ "query" : { "term" : { "tag" : "bad" } } }'

# 使用JSON参数查询某个index下的所有记录
curl -XGET localhost:9200/&lt;index&gt;/_search?pretty -d '{ "query" : { "term" : { "tag" : "bad" } } }'

# 使用JSON参数查询某个index下某个type下所有的记录
curl -XGET localhost:9200/&lt;index&gt;/&lt;type&gt;/_search?pretty -d '{ "query" : { "term" : { "tag" : "bad" } } }'
</code></pre>

<p>更新</p>

<pre><code>curl -XPUT localhost:9200/&lt;index&gt;/&lt;type&gt;/3 -d '{ "tag" : "good" }'
</code></pre>

<p>删除</p>

<pre><code>curl -XDELETE localhost:9200/&lt;index&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch安装]]></title>
    <link href="http://codemany.com/blog/elasticsearch-installation/"/>
    <updated>2015-02-10T23:50:34+08:00</updated>
    <id>http://codemany.com/blog/elasticsearch-installation</id>
    <content type="html"><![CDATA[<p><a href="http://www.elasticsearch.org/">Elasticsearch</a>是一款基于<a href="http://lucene.apache.org/">Lucene</a>构建的开源分布式全文检索服务器。提供RESTful API，采用多shard的方式保证数据安全，提供自动resharding的功能，能够很轻松地进行大规模的横向扩展，以支撑PB级的结构化和非结构化海量数据的处理。</p>

<p>安装Java 1.7</p>

<pre><code>mkdir /usr/java
cd /usr/java
wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/7u67-b01/jdk-7u67-linux-x64.rpm
rpm -ivh jdk-7u67-linux-x64.rpm
java -version
echo $JAVA_HOME
</code></pre>

<p>安装Elasticsearch 1.4.1</p>

<pre><code>mkdir /usr/elasticsearch
cd /usr/elasticsearch
wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.4.1.tar.gz
tar -xvf elasticsearch-1.4.1.tar.gz
cd elasticsearch-1.4.1
./bin/elasticsearch
</code></pre>

<p>然后访问<code>http://localhost:9200/?pretty</code>就可以看到类似下面的返回：</p>

<pre><code>{
  "status" : 200,
  "name" : "Powerpax",
  "cluster_name" : "elasticsearch",
  "version" : {
    "number" : "1.4.1",
    "lucene_version" : "4.10.2"
  },
  "tagline" : "You Know, for Search"
}
</code></pre>

<p>只是运行起来是不够的，通常我们需要将Elasticsearch安装成服务，设置成开机自启动什么的。这要用到<a href="https://github.com/elasticsearch/elasticsearch-servicewrapper">elasticsearch-servicewrapper</a>了。下载解压后把service文件夹拷贝到elasticsearch-1.4.1/bin目录下。</p>

<pre><code>./bin/service/elasticsearch install  # 安装服务
./bin/service/elasticsearch start  # 运行服务
</code></pre>

<p>其它参数：</p>

<pre><code>console 以前台方式运行Elasticsearch
stop 停止Elasticsearch
remove 移除系统启动中的Elasticsearch服务（init.d/service）
</code></pre>

<p>需要注意的是，在小内存机器上运行时，需要限制下内存大小，否则服务会无法启动，出现如下警告信息：</p>

<pre><code>Starting Elasticsearch...
Waiting for Elasticsearch......................
WARNING: Elasticsearch may have failed to start.
</code></pre>

<p>打开bin/service/elasticsearch.conf文件，设置Elasticsearch能够分配的JVM内存大小。一般情况下，设置成总内存的50%比较好。</p>

<pre><code>set.default.ES_HEAP_SIZE=512
</code></pre>

<p>如果要限制ES_MIN_MEM和ES_MAX_MEM，建议设置成一样大，避免出现频繁的内存分配。</p>
]]></content>
  </entry>
  
</feed>
