<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: MySQL | 乐者为王]]></title>
  <link href="http://codemany.com/tags/mysql/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-24T18:55:48+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[创建视图时的with check option选项]]></title>
    <link href="http://codemany.com/blog/2010/06/28/with-check-option-in-view/"/>
    <updated>2010-06-28T04:33:27+08:00</updated>
    <id>http://codemany.com/blog/2010/06/28/with-check-option-in-view</id>
    <content type="html"><![CDATA[<p>通过有with check option选项的视图操作基表，有以下结论：</p>

<ol>
<li>首先视图只操作它可以查询出来的数据，对于它查询不出的数据，即使基表有，也不可以通过视图来操作；</li>
<li>对于update，有with check option，要保证update后，数据能被视图查询出来；</li>
<li>对于delete，有无with check option都一样；</li>
<li>对于insert，有with check option，要保证insert后，数据要被视图查询出来。</li>
</ol>


<p>对于没有where子句的视图，使用with check option是多余的。</p>

<p>下面用一个例子来说明第4条：</p>

<p>```
CREATE TABLE students (</p>

<pre><code>id int NOT NULL AUTO_INCREMENT,
name varchar(50) NOT NULL,
age int,
sex char(1),
PRIMARY KEY(id)
</code></pre>

<p>);</p>

<p>CREATE VIEW male_students_view AS</p>

<pre><code>SELECT name, age FROM students
WHERE sex = 'M'
WITH CHECK OPTION;
</code></pre>

<p>```</p>

<p><code>
-- 报CHECK OPTION failed错误，原因如4，插入数据后要还能被视图查询出来。
INSERT INTO male_students_view values('WU', 18);
</code></p>

<p><code>
-- 报Column count doesn't match value count错误，因为视图中根本没有sex列。
INSERT INTO male_students_view values('WU', 18, 'M');
</code></p>

<p>将students.sex列改成默认值为M：</p>

<p><code>
ALTER TABLE students MODIFY sex char(1) NOT NULL DEFAULT 'M'
</code></p>

<p><code>
-- 执行成功，1 row affected。
INSERT INTO male_students_view values('WU', 18);
</code></p>

<p><code>
-- 还是同样的问题，Column count doesn't match value count。
INSERT INTO male_students_view values('WU', 18, 'M');
</code></p>

<p>或者不修改students.sex的属性，将视图改成：</p>

<p>```
CREATE VIEW male_students_view AS</p>

<pre><code>SELECT name, age, sex FROM students
WHERE sex = 'M'
WITH CHECK OPTION;
</code></pre>

<p>```</p>

<p><code>
-- 会报CHECK OPTION failed错误。
INSERT INTO male_students_view values('WU', 18);
</code></p>

<p><code>
-- 执行成功，1 row affected。
INSERT INTO male_students_view values('WU', 18, 'M');
</code></p>

<p>以上例子都在MySQL上实际执行过，绝对不会像<a href="http://blog.csdn.net/kowity/article/details/1657899">这篇文章</a>中讲的某本教科书那样胡言乱语。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL数据库备份脚本（JSP版本）]]></title>
    <link href="http://codemany.com/blog/2007/04/08/mysql-database-backup-script-jsp-version/"/>
    <updated>2007-04-08T08:16:55+08:00</updated>
    <id>http://codemany.com/blog/2007/04/08/mysql-database-backup-script-jsp-version</id>
    <content type="html"><![CDATA[<p>最近需要备份博客所在服务器上的MySQL数据库到本机，作为虚拟主机用户，不能使用MySQL自带的mysqldump和mysqlimport工具。因此一开始打算采用直接备份MySQL的data目录的办法，但由于编码不同的原因产生了一些问题。在网上找到的一些备份工具都是用PHP写的，因此用JSP写了一个的备份MySQL数据库的小工具。</p>

<p>该程序需要设置数据库连接参数和备份文件路径，运行后会自动生成一个指定的备份文件。</p>

<p><a href="/uploads/mysqltool.zip" title="mysqltool.zip">代码下载</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JPetStore 4.0.5配置MySQL数据库时遇到的问题]]></title>
    <link href="http://codemany.com/blog/2005/03/09/problem-configuring-jpetstore405-with-mysql/"/>
    <updated>2005-03-09T16:33:39+08:00</updated>
    <id>http://codemany.com/blog/2005/03/09/problem-configuring-jpetstore405-with-mysql</id>
    <content type="html"><![CDATA[<p>在配置JPetStore 4.0.5时出了一点问题，写此文章记录下解决方法，以便日后查找。</p>

<p>按照教程配置好后运行Tomcat，在点击“Enter the Store”时出现了HTTP 500错误。从日志中的异常记录来看是没有找到MySQL的驱动程序。</p>

<p><code>
SimpleDataSource: Error while loading properties. Cause: java.lang.ClassNotFoundException: driver
</code></p>

<p>可是我已经把驱动程序包放到WEB-INF/lib目录下了呀！</p>

<p>查看sql-xml-config.xml文件中dataSource的属性，发现它们的值如下：</p>

<p>```
<transactionManager type="JDBC"></p>

<pre><code>&lt;dataSource type="SIMPLE"&gt;
    &lt;property value="${driver}" name="JDBC.Driver" /&gt;
    &lt;property value="${url}" name="JDBC.ConnectionURL" /&gt;
    &lt;property value="${username}" name="JDBC.Username" /&gt;
    &lt;property value="${password}" name="JDBC.Password" /&gt;
    &lt;property value="15" name="Pool.MaximumActiveConnections" /&gt;
    &lt;property value="15" name="Pool.MaximumIdleConnections" /&gt;
    &lt;property value="1000" name="Pool.MaximumWait" /&gt;
  &lt;/dataSource&gt;
</code></pre>

<p></transactionManager>
```</p>

<p>而在database.properties中的值分别是：</p>

<p><code>
SimpleDriver=org.gjt.mm.mysql.Driver
SimpleUrl=jdbc:mysql://localhost:3306/jpetstore
SimpleUsername=jpetstore
SimplePassword=ibatis
</code></p>

<p>因为dataSource中的属性值是从database.properties文件中读入的，所以要将database.properties中的属性名改成和sql-xml-config.xml中的一致。这样就不会再出现找不到驱动的异常了。改写后的database.properties内容如下：</p>

<p><code>
driver=org.gjt.mm.mysql.Driver
url=jdbc:mysql://localhost:3306/jpetstore
username=jpetstore
password=ibatis
</code></p>
]]></content>
  </entry>
  
</feed>
