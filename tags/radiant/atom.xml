<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Radiant | 乐者为王]]></title>
  <link href="http://codemany.com/tags/radiant/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2016-09-22T09:43:46+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Lunarpages虚拟主机上安装Radiant]]></title>
    <link href="http://codemany.com/blog/install-radiant-on-lunarpages-shared-server/"/>
    <updated>2008-04-20T06:55:11+08:00</updated>
    <id>http://codemany.com/blog/install-radiant-on-lunarpages-shared-server</id>
    <content type="html"><![CDATA[<p>安裝Rails、Mongrel和Radiant</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">gem install rails --include-dependencies
gem install mongrel --include-dependencies
gem install radiant --include-dependencies
</code></pre></div>
<p>建立Radiant项目</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">radiant --database mysql rcms
</code></pre></div>
<p>登录Lunarpages cPanel面板，创建数据库rcms及访问该数据库的账号，设置该帐号的访问权限。然后进入MySQL的数据库管理工具phpMyAdmin，导入在本地建立好的创建数据表的SQL文件，执行之。然后修改config/database.yml文件，填入前面创建的访问数据库的用户名和密码。</p>

<p>将config/environment.rb中的</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">#ENV[&#39;RAILS_ENV&#39;] ||= &#39;production&#39;
</code></pre></div>
<p>去掉注释</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">ENV[&#39;RAILS_ENV&#39;] ||= &#39;production&#39;
</code></pre></div>
<p>再将public/dispatch.fcgi中的</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">#!/usr/bin/env ruby
</code></pre></div>
<p>修改为</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">#!/usr/local/bin/ruby
</code></pre></div>
<p>然后将rcms上传到Lunarpages虚拟主机的根目录下，上传后的目录结构如下：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">/public_html
/www
/rcms
</code></pre></div>
<p>在cPanel中点击“Cron Jobs” -&gt; “Advanced (Unix Style)”进入Cron管理页面。</p>

<p><img src="/uploads/lunarpages-cron-jobs.png" title="lunarpages-cron-jobs" ></p>

<p>创建如下Cron指令（使用默认时间设置，指令会每分钟被执行一次）。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">cd /home/&lt;username&gt;
mv public_html public_html.bak
ln -s /home/&lt;username&gt;/rcms/public public_html
mkdir public_html/cgi-bin
chown -R username:&lt;username&gt; /home/&lt;username&gt;/rcms
chmod 755 /home/&lt;username&gt;/rcms
chmod 755 /home/&lt;username&gt;/rcms/public
</code></pre></div>
<p>再填好接收执行结果的邮件地址，然后等个2-3分钟后查收邮件就可以了，在收到邮件后切记要删除上面创建的指令。</p>

<p>现在就可以通过浏览器访问部署在Lunarpages上的Radiant了。</p>

<p>如果你想让Radiant跑在类似<code>http://example.com/rcms</code>这样的域名下，那么可以将上面的指令替换成：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">cd /home/&lt;username&gt;/public_html
ln -s ../rcms/public rcms
chown -R username:&lt;username&gt; /home/&lt;username&gt;/rcms
chmod 755 /home/&lt;username&gt;/rcms
</code></pre></div>
<p>如果Radiant不工作的话可以在Cron Jobs中使用下列指令检查出了什么问题。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">cd /home/&lt;username&gt;/rcms/public
chmod 777 dispatch.fcgi
./dispatch.fcgi
chmod 644 dispatch.fcgi
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Windows上面跑Mongrel和Radiant]]></title>
    <link href="http://codemany.com/blog/running-mongrel-and-radiant-on-windows/"/>
    <updated>2008-04-16T16:16:41+08:00</updated>
    <id>http://codemany.com/blog/running-mongrel-and-radiant-on-windows</id>
    <content type="html"><![CDATA[<p>安裝Rails、Mongrel和Radiant</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">gem install rails --include-dependencies
gem install mongrel --include-dependencies
gem install radiant --include-dependencies
</code></pre></div>
<p>建立Radiant项目</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">radiant --database mysql rcms
</code></pre></div>
<p>编辑数据库配置文件config/database.yml，填写连接数据库时的用户名和密码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">development:
  adapter: mysql
  database: rcms_development
  username: root
  password: 123456
  host: localhost

test:
  adapter: mysql
  database: rcms_test
  username: root
  password: 123456
  host: localhost

production:
  adapter: mysql
  database: rcms_production
  username: root
  password: 123456
  host: localhost
</code></pre></div>
<p>在MySQL中创建数据库，因为是开发环境，所以创建的数据库名为rcms_development。</p>

<p>进入rcms目录，在命令行下敲入以下命令创建数据表：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">rake development db:bootstrap
</code></pre></div>
<p>一切都准备好后，就可以启动Mongrel服务器了：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">mongrel_rails start
</code></pre></div>
<p>不出意料的话，应该会看到如下图的信息。</p>

<p><img src="/uploads/mongrel-rails.png" title="mongrel-rails" ></p>

<p>如果在启动Mongrel时遇到下面的错误：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">!!! Path to log file not valid: log/mongrel.log
mongrel::start reported an error. Use mongrel_rails mongrel::start -h to get help.
</code></pre></div>
<p>可以通过指定应用目录来解决，因为Mongrel在创建log之前会先验证应用目录。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">mongrel_rails start -c rcms
</code></pre></div>
<p>如果想把Mongrel作为Windows服务的形式启动，需要安装mongrel_service插件：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">gem install mongrel_service
</code></pre></div>
<p>注意：某些文档会叫你用gem install win32-service安装win32-service，但实际上不是很必要。因为在安装mongrel_service时系统会问你是否要安装win32-service。</p>

<p>安装好后就可以创建Windows服务了：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">mongrel_rails service::install -N rcms -c rcms -e development
</code></pre></div>
<p>其中-N指明service名称，-c指明Rails应用的目录，-e指启动模式。</p>

<p>在“控制面版” -&gt; “管理工具” -&gt; “服务”中可以发现多了名为rcms的服务。如果要取消该服务，可以使用以下命令：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">mongrel_rails service::remove -N rcms
</code></pre></div>
<p>启动和关闭该服务的命令是：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">mongrel_rails service::start -N rcms
mongrel_rails service::stop -N rcms
</code></pre></div>]]></content>
  </entry>
  
</feed>
