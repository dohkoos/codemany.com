<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Radiant | 乐者为王]]></title>
  <link href="http://codemany.com/tags/radiant/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-21T22:32:52+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Lunarpages虚拟主机上安装Radiant]]></title>
    <link href="http://codemany.com/blog/2008/04/20/install-radiant-on-lunarpages-shared-server/"/>
    <updated>2008-04-20T06:55:11+08:00</updated>
    <id>http://codemany.com/blog/2008/04/20/install-radiant-on-lunarpages-shared-server</id>
    <content type="html"><![CDATA[<ol>
<li><p>使用gem unpack radiant解压Radiant CMS的gem包，在当前目录下生成一个名为radiant-x.x.x的目录，将之改名为rcms；</p></li>
<li><p>登录cPanel创建一个数据库dbname以及访问该数据库的账号（即用户名和密码），然后设置用户访问数据库的权限；</p></li>
<li><p>滚动到窗口底部，点击phpMyAdmin进入MySQL数据库管理工具，导入在本地建立好的创建数据库表的SQL文件，然后执行。这样rcms的数据库表就建好了；</p></li>
<li><p>到rcms/config下修改database.yml的文件，填写连接数据库时的用户名和密码（由第2步创建）。将rcms/config下environment.rb的<br />
```</p>

<h1>ENV['RAILS_ENV'] ||= 'production'<br /></h1>

<p>```</p></li>
</ol>


<p>改成<br />
<code>
ENV['RAILS_ENV'] ||= 'production'&lt;br /&gt;
</code></p>

<p>再将rcms/public下dispatch.fcgi中的<br />
```</p>

<h1>!/usr/bin/env ruby<br /></h1>

<p>```</p>

<p>修改为<br />
```</p>

<h1>!/usr/local/bin/ruby<br /></h1>

<p>```</p>

<ol>
<li><p>使用ftp客户端将rcms项目上传到Lunarpages虚拟主机的根目录下，上传后的目录结构如下：<br />
<code>
/public_html&lt;br /&gt;
/www&lt;br /&gt;
/rcms&lt;br /&gt;
</code></p></li>
<li><p>在cPanel中点击“Cron Jobs”，点击“Advanced (Unix Style)”按钮进入Cron管理页面，创建如下的Cron指令（这些指令每分钟就会被执行一次）
<img src="/uploads/lunarpages-cron-jobs.png" title="lunarpages-cron-jobs" ></p></li>
</ol>


<p>再填写好接收执行结果的邮件地址，然后等个两三分钟接收一下邮件就可以了。在接收到邮件后切记要删除上面创建的指令。</p>

<p>现在，在浏览器里打入<a href="http://yourdomain.com%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E4%BA%86%E3%80%82">http://yourdomain.com%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E4%BA%86%E3%80%82</a></p>

<p>如果你想radiant跑在<a href="http://yourdomain.com/app%E8%BF%99%E6%A0%B7%E7%9A%84%E5%9F%9F%E5%90%8D%E4%B8%8B%EF%BC%8C%E9%82%A3%E4%B9%88%E5%8F%AF%E4%BB%A5%E5%B0%86%E4%B8%8A%E9%9D%A2%E7%9A%84%E6%8C%87%E4%BB%A4%E6%9B%BF%E6%8D%A2%E6%88%90%EF%BC%9A">http://yourdomain.com/app%E8%BF%99%E6%A0%B7%E7%9A%84%E5%9F%9F%E5%90%8D%E4%B8%8B%EF%BC%8C%E9%82%A3%E4%B9%88%E5%8F%AF%E4%BB%A5%E5%B0%86%E4%B8%8A%E9%9D%A2%E7%9A%84%E6%8C%87%E4%BB%A4%E6%9B%BF%E6%8D%A2%E6%88%90%EF%BC%9A</a><br />
<code>
cd /home/username/public_html&lt;br /&gt;
ln -s ../rcms/public app&lt;br /&gt;
chown -R username:username /home/username/rcms&lt;br /&gt;
chmod 755 /home/username/rcms&lt;br /&gt;
</code></p>

<p>如果Radiant不工作的话可以在Cron Jobs中创建下列指令来检查Radiant应用出现了什么错误：</p>

<p><code>
cd /home/username/rcms/public
chmod 777 dispatch.fcgi
./dispatch.fcgi
chmod 644 dispatch.fcgi
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Windows上面跑Mongrel + Radiant]]></title>
    <link href="http://codemany.com/blog/2008/04/16/running-mongrel-and-radiant-on-windows/"/>
    <updated>2008-04-16T16:16:41+08:00</updated>
    <id>http://codemany.com/blog/2008/04/16/running-mongrel-and-radiant-on-windows</id>
    <content type="html"><![CDATA[<ol>
<li><p>安裝Ruby
到<a href="http://rubyforge.org/projects/rubyinstaller/"><a href="http://rubyforge.org/projects/rubyinstaller/">http://rubyforge.org/projects/rubyinstaller/</a></a>下载最新的One-Click Installer - Windows版本（已经自带了RubyGems，一个Ruby标准的包管理器），安裝好就可以了。</p></li>
<li><p>安裝Rails<br />
<code>
gem install rails --include-dependencies
</code></p></li>
<li><p>安裝Mongrel（注意要选择Windows版本）
<code>
gem install mongrel --include-dependencies
</code></p></li>
<li><p>安裝Radiant
<code>
gem install radiant --include-dependencies&lt;br /&gt;
</code></p></li>
<li><p>建立Radiant项目<br />
<code>
radiant --database mysql rcms&lt;br /&gt;
</code></p></li>
<li><p>搞定数据库<br />
到rcms/config下修改一个叫database.yml的文件，填写连接数据库时的用户名和密码。完整的database.yml是这样的:<br />
```
development:
adapter: mysql
database: rcms_development
username: root
password: 123456
host: localhost</p></li>
</ol>


<p>test:
  adapter: mysql
  database: rcms_test
  username: root
  password: 123456
  host: localhost</p>

<p>production:
  adapter: mysql
  database: rcms_production
  username: root
  password: 123456
  host: localhost
```</p>

<p>接着在mysql中创建数据库，这里使用development数据库，因此创建的数据库名为rcms_development。</p>

<p>进入rcms目录，在命令行下敲入<br />
<code>
rake development db:bootstrap&lt;br /&gt;
</code></p>

<p>创建数据库表（development代表的是development数据库，你要用其它test或production也可以）。期间会提示你输入管理员的用户名和密码。</p>

<ol>
<li>启动mongrel服务器<br />
在命令行下输入<br />
<code>
mongrel_rails start&lt;br /&gt;
</code></li>
</ol>


<p>启动mongrel服务器，如果启动成功的话就会看到如下的系统信息（默认的服务器将占用3000端口）
<img src="/uploads/mongrel-rails.png" title="mongrel-rails" ></p>

<p>如果在运行mongrel服务器时遇到如下信息<br />
<code>
!!! Path to log file not valid: log/mongrel.log  &lt;br /&gt;
mongrel::start reported an error. Use mongrel_rails mongrel::start -h to get help.&lt;br /&gt;
</code></p>

<p>那么可以通过指定应用目录来解决（因为mongrel在创建log之前会先验证应用目录）<br />
<code>
mongrel_rails start -c C:\rcms&lt;br /&gt;
</code></p>

<ol>
<li><p>测试<br />
在浏览器中输入<a href="http://127.0.0.1:3000%E6%88%96%E8%80%85http://localhost:3000/%E5%B0%B1%E4%BC%9A%E7%9C%8B%E5%88%B0Radiant%E7%9A%84%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E4%BA%86%EF%BC%8C%E7%94%A8%E5%88%9A%E5%88%9A%E8%AE%BE%E5%AE%9A%E7%9A%84%E7%AE%A1%E7%90%86%E5%91%98%E5%B8%90%E5%8F%B7%E5%92%8C%E5%AF%86%E7%A0%81%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%99%BB%E5%BD%95%E8%BF%9B%E5%8E%BB%E8%BF%9B%E8%A1%8C%E7%BC%96%E8%BE%91%E4%BA%86%E3%80%82">http://127.0.0.1:3000%E6%88%96%E8%80%85http://localhost:3000/%E5%B0%B1%E4%BC%9A%E7%9C%8B%E5%88%B0Radiant%E7%9A%84%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E4%BA%86%EF%BC%8C%E7%94%A8%E5%88%9A%E5%88%9A%E8%AE%BE%E5%AE%9A%E7%9A%84%E7%AE%A1%E7%90%86%E5%91%98%E5%B8%90%E5%8F%B7%E5%92%8C%E5%AF%86%E7%A0%81%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%99%BB%E5%BD%95%E8%BF%9B%E5%8E%BB%E8%BF%9B%E8%A1%8C%E7%BC%96%E8%BE%91%E4%BA%86%E3%80%82</a></p></li>
<li><p>把mongrel作为windows services启动<br />
使用下面的命令安装mongrel_service（注意要选择for Windows版本）<br />
<code>
gem install mongrel_service&lt;br /&gt;
</code></p></li>
</ol>


<p>注意：一些文档中会叫你用gem install win32-service命令安装win32-service，但实际上这一步是不必要的。因为在安装mongrel_service时系统会问你是否要安装完win32-service。</p>

<p>创建一个service<br />
<code>
mongrel_rails service::install -N rcms -c C:\rcms -e development&lt;br /&gt;
</code></p>

<p>其中-N指明service名称，-c指明rails应用的目录，-e是启动模式为开发模式。</p>

<p>上面的步骤就把mongrel加入到windows服务中。这时打开控制面版 -> 管理工具 -> 服务，就可以发现增加了一项名为rcms的服务，就可以通过控制面版来管理服务了。如果要从服务中取消该项服务，那么：<br />
<code>
mongrel_rails service::remove -N rcms&lt;br /&gt;
</code></p>

<p>在命令行下启动和关闭该服务就是：</p>

<p><code>
mongrel_rails service::start -N rcms
mongrel_rails service::stop -N rcms
</code></p>
]]></content>
  </entry>
  
</feed>
