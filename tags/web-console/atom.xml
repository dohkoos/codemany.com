<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Web Console | 乐者为王]]></title>
  <link href="http://codemany.com/tags/web-console/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2016-05-12T14:56:56+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby调试工具概览]]></title>
    <link href="http://codemany.com/blog/ruby-debugger-overview/"/>
    <updated>2015-10-19T10:50:09+08:00</updated>
    <id>http://codemany.com/blog/ruby-debugger-overview</id>
    <content type="html"><![CDATA[<p>调试Ruby代码最简单的方式就是使用puts或p方法。当有很多变量需要查看时，到处添加puts或p方法就可能变的不那么实际。幸好，Ruby社区提供了许多强大的调试工具。</p>

<h3 id="ruby-1-8-时代">Ruby 1.8+时代</h3>

<p>调试Ruby代码使用<a href="https://github.com/ruby-debug/ruby-debug">ruby-debug</a>。调试Rails代码则是<a href="https://github.com/nixme/pry-nav">pry-nav</a>。不过在Ruby 1.9出来后ruby-debug就有问题了，于是就有了<a href="https://github.com/mark-moseley/ruby-debug">ruby-debug19</a>，一个针对Ruby 1.9的ruby-debug移植版本。</p>

<h3 id="ruby-1-9-2-时代">Ruby 1.9.2+时代</h3>

<p>等到Ruby 1.9.2发布，ruby-debug彻底歇菜，然后<a href="https://github.com/cldwalker/debugger">debugger</a>就出现了。pry-nav也不好使了，还好有<a href="https://github.com/nixme/pry-debugger">pry-debugger</a>。</p>

<h3 id="ruby-2-时代">Ruby 2+时代</h3>

<p>新的Ruby调试工具<a href="https://github.com/deivid-rodriguez/byebug">byebug</a>来了。虽然byebug也能调试Rails应用，但它不提供语法高亮，所以使用<a href="https://github.com/deivid-rodriguez/pry-byebug">pry-byebug</a>是个更好的选择。</p>

<table><thead>
<tr>
<th></th>
<th>Ruby 1.8+</th>
<th>Ruby 1.9</th>
<th>Ruby 1.9.2+</th>
<th>Ruby 2+</th>
</tr>
</thead><tbody>
<tr>
<td>Ruby</td>
<td>ruby-debug</td>
<td>ruby-debug19</td>
<td>debugger</td>
<td>byebug</td>
</tr>
<tr>
<td>Rails</td>
<td>pry-nav</td>
<td>pry-nav</td>
<td>pry-debugger</td>
<td>pry-byebug</td>
</tr>
</tbody></table>

<h3 id="其它">其它</h3>

<p><a href="https://github.com/pry/pry">Pry</a>其实不是纯粹的调试工具，它只是IRB的替代品，所以缺乏必要的调试指令。pry-nav、pry-debugger和pry-byebug做的只是分别把ruby-debug、debugger和byebug中的step、next、continue等指令添加到Pry中。</p>

<ul>
<li>pry-nav = Pry + ruby-debug</li>
<li>pry-debugger = Pry + debugger</li>
<li>pry-byebug = Pry + byebug</li>
</ul>

<p>如果要调试view怎么办？可以使用<a href="https://github.com/rails/web-console">Web Console</a>。在view里面加上&lt;%= console %&gt;，当view出现异常时，就会在异常界面下方，出现一个网页版的IRB，方便调试。Web Console默认只接受localhost的请求，假如需要让别的IP也能访问的话，可以这样做：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">class Application &lt; Rails::Application
  config.web_console.whitelisted_ips = &#39;192.168.0.100&#39;
end
</code></pre></div>]]></content>
  </entry>
  
</feed>
