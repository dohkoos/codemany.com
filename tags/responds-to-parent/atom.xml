<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: responds_to_parent | 乐者为王]]></title>
  <link href="http://codemany.com/tags/responds-to-parent/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2017-12-05T13:35:27+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails 2.3和Paperclip实现无刷新异步上传文件]]></title>
    <link href="http://codemany.com/blog/upload-file-asynchronously-without-refresh-with-paperclip-rails-23/"/>
    <updated>2011-03-08T16:09:31+08:00</updated>
    <id>http://codemany.com/blog/upload-file-asynchronously-without-refresh-with-paperclip-rails-23</id>
    <content type="html"><![CDATA[<div class="highlight"><pre><code class="language-text" data-lang="text">rails upload
cd upload
script/plugin install git://github.com/thoughtbot/paperclip.git
script/plugin install git://github.com/markcatley/responds_to_parent.git
script/generate scaffold user name:string
script/generate paperclip user avatar
rake db:migrate
</code></pre></div>
<p>在user.rb中增加：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">  has_attached_file :avatar, :url =&gt; &quot;/uploads/:basename.:extension&quot;
  validates_attachment_presence :avatar
  validates_attachment_content_type :avatar,
    :content_type =&gt; [&#39;image/jpeg&#39;, &#39;image/jpg&#39;, &#39;image/png&#39;]
  validates_attachment_size :avatar, :less_than =&gt; 1.megabytes
</code></pre></div>
<p>修改views/users/new.html.erb文件：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;% form_for(@user, :url =&gt; users_path(:format =&gt; &#39;js&#39;),
      :html =&gt; { :id =&gt; &#39;upload_form&#39;, :multipart =&gt; true, :target =&gt; &#39;uframe&#39; }) do |f| %&gt;
  &lt;%= f.error_messages %&gt;

  &lt;p&gt;
    &lt;%= f.label :name %&gt;&lt;br /&gt;
    &lt;%= f.text_field :name %&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;%= f.label :avatar %&gt;&lt;br /&gt;
    &lt;%= f.file_field :avatar %&gt;
    &lt;div id=&quot;avatar&quot;&gt;
    &lt;% if @user.avatar.exists? %&gt;
      &lt;%= image_tag @user.avatar.url(:medium) %&gt;
    &lt;% end %&gt;
    &lt;/div&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;%= f.submit &#39;Create&#39; %&gt;
  &lt;/p&gt;
&lt;% end %&gt;
&lt;iframe id=&quot;uframe&quot; name=&quot;uframe&quot; style=&quot;display: none;&quot;&gt;&lt;/iframe&gt;
</code></pre></div>
<p>当点击submit按钮后，表单被提交到隐藏的iframe，相应的action被执行，执行结果会被返回给隐藏的iframe，我们需要上传后结果能返回到母窗口，这就是responds_to_parent插件提供的功能。</p>

<p>在views/layouts/user.html.erb中增加：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;%= javascript_include_tag :defaults %&gt;
</code></pre></div>
<p>修改users_controller.rb中的create方法，增加：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">format.js do
  flash[:notice] = &#39;avatar created&#39;
  responds_to_parent do
    render :update do |page|
      page.replace_html :avatar, image_tag(@user.avatar.url(:medium))
      page[&#39;upload_form&#39;].reset
    end
  end
end
</code></pre></div>]]></content>
  </entry>
  
</feed>
