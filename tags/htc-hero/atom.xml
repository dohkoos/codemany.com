<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: HTC Hero | 乐者为王]]></title>
  <link href="http://codemany.com/tags/htc-hero/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2015-12-17T15:14:59+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[将Nokia 6670的短信导入HTC Hero G3]]></title>
    <link href="http://codemany.com/blog/transfer-sms-from-nokia-6670-to-htc-hero-g3/"/>
    <updated>2011-06-21T08:43:10+08:00</updated>
    <id>http://codemany.com/blog/transfer-sms-from-nokia-6670-to-htc-hero-g3</id>
    <content type="html"><![CDATA[<p>这事本该N久前就该干了（09年末把手机从Nokia 6670换到HTC Hero G3），却一直拖着没有做，今天终于把这事作了一个了结。</p>

<p>Nokia下导出的短信是如Messages_Nokia 6670_20091215.xml这样的一个XML文件，文件内容的编码是unicode，格式就像下面这样：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;?xml version=&quot;1.0&quot; encoding=&quot;unicode&quot;?&gt;
&lt;SMS PhoneModel=&quot;Nokia 6670&quot;&gt;
  &lt;Message DateTime=&quot;2011-06-21 10:10:10&quot;&gt;
    &lt;Sender&gt;路人甲&lt;/Sender&gt;
    &lt;PhoneNumber&gt;+8613988888888&lt;/PhoneNumber&gt;
    &lt;Location&gt;Inbox&lt;/Location&gt;
    &lt;Text&gt;我是路人甲&lt;/Text&gt;
  &lt;/Message&gt;

  &lt;Message DateTime=&quot;2011-06-21 11:11:11&quot;&gt;
    &lt;Sender&gt;路人乙&lt;/Sender&gt;
    &lt;PhoneNumber&gt;+8613966666666&lt;/PhoneNumber&gt;
    &lt;Location&gt;Outbox&lt;/Location&gt;
    &lt;Text&gt;我是路人乙&lt;/Text&gt;
  &lt;/Message&gt;
&lt;/SMS&gt;
</code></pre></div>
<p>本来是想写个Android应用来直接导入这些备份短信的，不过在实现的过程中发现了SMS Backup&amp;Restore应用导出的备份文件和Nokia的备份文件类似，产生了做个将Nokia备份文件转换成SMS Backup&amp;Restore备份文件的念头，又在网上发现了nicholashan的<a href="http://bbs.hiapk.com/thread-140564-1-1.html">将Nokia的短信导入Hero（可能适用所有Android机型）</a>，坚定了我的这个想法。</p>

<p>分析了一下SMS Backup&amp;Restore备份文件的格式，文件内容的编码是utf-8的：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;?xml version=&#39;1.0&#39; encoding=&#39;utf-8&#39; standalone=&#39;yes&#39; ?&gt;
&lt;smses count=&quot;3&quot;&gt;
  &lt;sms protocol=&quot;0&quot; address=&quot;10658658&quot; date=&quot;1308629532000&quot;
    type=&quot;1&quot; subject=&quot;null&quot; body=&quot;我是内容&quot; toa=&quot;null&quot;
    sc_toa=&quot;null&quot; service_center=&quot;null&quot; read=&quot;1&quot;
    status=&quot;-1&quot; locked=&quot;0&quot; /&gt;
  &lt;sms protocol=&quot;0&quot; address=&quot;13566666666&quot; date=&quot;1308633733000&quot;
    type=&quot;2&quot; subject=&quot;null&quot; body=&quot;我也是内容&quot; toa=&quot;null&quot;
    sc_toa=&quot;null&quot; service_center=&quot;null&quot; read=&quot;1&quot;
    status=&quot;-1&quot; locked=&quot;0&quot; /&gt;
  &lt;sms protocol=&quot;0&quot; address=&quot;+8613588888888&quot; date=&quot;1308641377000&quot;
    type=&quot;1&quot; subject=&quot;null&quot; body=&quot;我还是内容&quot; toa=&quot;null&quot;
    sc_toa=&quot;null&quot; service_center=&quot;null&quot; read=&quot;1&quot;
    status=&quot;-1&quot; locked=&quot;0&quot; /&gt;
&lt;/smses&gt;
</code></pre></div>
<p>与转换相关的就address、date、type和body四个属性。address是发信人的号码；date是短信发送日期的timestamp。这点nicholashan的确说错了，后面不需要加什么0的（实际上nicholashan自己也怀疑自己的说法）；type等于1表示别人发给你的短信，如果是2的话就是你发给其他人的短信；body就是短信内容了。</p>

<p>将Nokia中的时间转换到SMS Backup&amp;Restore的时间可以使用下面的代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">DateFormat dt = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
long value = 1355296332000L;    // 2012-12-12 12:12:12
Element e = (Element)iter.next();
Attribute attr = e.attribute(&quot;DateTime&quot;);
try {
    value = dt.parse(attr.getValue()).getTime();
} catch (ParseException ex) {
}
</code></pre></div>
<p>完整的代码如下（使用dom4j实现XML解析）：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Iterator;
import java.util.List;

import org.dom4j.Attribute;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;
import org.dom4j.io.XMLWriter;

public class Main {

    public static void main(String[] args) {
        try {
            SAXReader sr = new SAXReader();
            Document doc = sr.read(new File(args[0]));

            generateDocument(doc);
        } catch (DocumentException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void generateDocument(Document doc) {
        List list = doc.selectNodes(&quot;//Message&quot;);

        Document document = DocumentHelper.createDocument();
        Element smses = document.addElement(&quot;smses&quot;);
        smses.addAttribute(&quot;count&quot;, String.valueOf(list.size()));

        DateFormat dt = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
        long value = 1355296332000L;    // 2012-12-12 12:12:12
        Iterator iter = list.iterator();
        while (iter.hasNext()) {
            Element e = (Element)iter.next();
            Attribute attr = e.attribute(&quot;DateTime&quot;);
            try {
                value = dt.parse(attr.getValue()).getTime();
            } catch (ParseException e) {
                System.out.println(e.getMessage());
            }
            Node phone = e.selectSingleNode(&quot;PhoneNumber&quot;);
            Node location = e.selectSingleNode(&quot;Location&quot;);
            Node text = e.selectSingleNode(&quot;Text&quot;);

            Element sms = smses.addElement(&quot;sms&quot;);
            sms.addAttribute(&quot;protocol&quot;, &quot;0&quot;);
            sms.addAttribute(&quot;address&quot;, phone.getText());
            sms.addAttribute(&quot;date&quot;, String.valueOf(value));
            if (&quot;Inbox&quot;.equals(location.getText())) {
                sms.addAttribute(&quot;type&quot;, &quot;1&quot;);
            } else if (&quot;Outbox&quot;.equals(location.getText())) {
                sms.addAttribute(&quot;type&quot;, &quot;2&quot;);
            }
            sms.addAttribute(&quot;subject&quot;, &quot;null&quot;);
            sms.addAttribute(&quot;body&quot;, text.getText());
            sms.addAttribute(&quot;toa&quot;, &quot;null&quot;);
            sms.addAttribute(&quot;sc_toa&quot;, &quot;null&quot;);
            sms.addAttribute(&quot;service_center&quot;, &quot;null&quot;);
            sms.addAttribute(&quot;read&quot;, &quot;1&quot;);
            sms.addAttribute(&quot;status&quot;, &quot;-1&quot;);
            sms.addAttribute(&quot;locked&quot;, &quot;0&quot;);
        }

        File f = new File(&quot;output.xml&quot;);
        XMLWriter output = new XMLWriter(new FileWriter(f));
        output.write(document);
        output.close();
    }
}
</code></pre></div>
<p>代码下载：<a href="https://github.com/dohkoos/N6670Conv">https://github.com/dohkoos/N6670Conv</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给HTC Hero G3刷Android 2.2版本ROM（本人的白色Hero刷机成功）]]></title>
    <link href="http://codemany.com/blog/flash-android-22-rom-to-htc-hero-g3/"/>
    <updated>2010-11-26T06:17:46+08:00</updated>
    <id>http://codemany.com/blog/flash-android-22-rom-to-htc-hero-g3</id>
    <content type="html"><![CDATA[<p>刷机前系统情况：</p>

<ul>
<li>型号：HTC Hero</li>
<li>固件：1.5</li>
<li>Baseband：53.18.55.06EU_6.35.06.18</li>
<li>Kernel：2.6.27-8dd6deee htc-kernel@and18-2</li>
<li>内部版本：1.79.482.3 146733 CL#49365 release-keys</li>
<li>软件版本：www.HiAPK.com 1.1_g3_sense</li>
</ul>

<p>G3的ROM目前分为两大类：官方原版RUU版ROM和国内外高手DIY版ROM。</p>

<ul>
<li>官方版ROM：必须要用HTC特定的RUU方式刷机，而且刷好后系统不带有ROOT权限，默认是英文（需手动设置中文语言）。</li>
<li>高手DIY版ROM：都是在官方原版ROM基础上进行原生编译的、而且刷机方式简单，基本都是ZIP方式的ROM直接放在SD卡上进行刷机的，而且刷好后系统自带中文语言以及ROOT权限，而且还都优化并配置好一些相应的基础设置。</li>
</ul>

<p>刷机步骤：</p>

<ol>
<li>刷机前请备份好所有重要信息和数据；</li>
<li>下载刷机镜像（根据个人喜欢下载，我使用的是“Hero ROM 春哥2.2 for G3 美化版”），将下载的ROM包重命名为update.zip（这里要注意系统隐藏扩展名的问题），复制到SD卡根目录下；</li>
<li>把recovery-RA-hero-v1.7.0.1.img放到SD卡根目录下；</li>
<li>将刷机更新程序flashrec-1.1.3.apk安装到G3手机中，安装成功后可以在程序列表中看到Recovery Flasher，点击运行Recovery Flasher（里面有个备份原来的recovery按钮，可以先备份），在文本框里输入/sdcard/recovery-RA-hero-v1.7.0.1.img，输入的文件名正确后，Flash Recovery Image这个按钮从灰色变成可选按，点击后，便会把这个recovery装入，运行完毕后程序会自动退出。</li>
<li>这时候再关机，长按HOME键（小房子）+ 电源键，直到进入刷机模式；</li>
<li>选择Wipe项清空数据，恢复初始状态（注：此操作会清除全部数据，请提前做好备份）；</li>
<li>选择flash项开始刷机；</li>
<li>等刷机过程全部结束，选reboot项，重新启动系统，至此刷机就大功告成了。</li>
</ol>

<p>如果在刷机过程中出现Can&#39;t find update script，那是因为recovery镜像要用1.6.2或以上版本的flashrec才行。</p>

<p>还有就是经常说的getroot.apk实际上就是flashrec.apk，flashrec才是真正的项目名。</p>

<p>2011/5/9更新</p>

<p>今天又刷了个“Hero CM6.2官方原版2.2 ROM”，感觉非常不错，正在赏玩中……</p>

<p>刷机工具下载：<a href="https://github.com/dohkoos/htc-hero-flash-tools">https://github.com/dohkoos/htc-hero-flash-tools</a></p>
]]></content>
  </entry>
  
</feed>
