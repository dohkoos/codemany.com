<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Startup | 乐者为王]]></title>
  <link href="http://codemany.com/tags/startup/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2016-02-08T23:43:37+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一夜成名：这需要好几年时间]]></title>
    <link href="http://codemany.com/blog/overnight-success-it-takes-years/"/>
    <updated>2016-01-23T09:36:05+08:00</updated>
    <id>http://codemany.com/blog/overnight-success-it-takes-years</id>
    <content type="html"><![CDATA[<p>英文原文：<a href="http://blog.codinghorror.com/overnight-success-it-takes-years/">http://blog.codinghorror.com/overnight-success-it-takes-years/</a></p>

<p>Gmail的原首席开发者Paul Buchheit说过<a href="http://paulbuchheit.blogspot.com/2009/01/overnight-success-takes-long-time.html">Gmail的成功花了很长时间</a>：</p>

<blockquote>
<p>我们在2001年8月开始开发Gmail。很长一段时间里，几乎每个人都不喜欢它。有些人使用它因为搜索，但他们有着无尽地抱怨。很多人认为我们应该杀死这个项目，又或者重启它作为一个有本地客户端软件的企业产品，而不是这个疯狂的JavaScript东西。甚至在2004年4月1日当我们到达发布它的那个点时——在开始开发它两年半之后——Google内部的很多人都在预测它的死亡。他们觉得这个产品太怪异了，并且没有人想去更换电子邮件服务。我被告知我们永远不会得到100万用户。</p>

<p>但在我们发布后，除了因为各种原因讨厌它的人，反响出人意外地好。尽管如此，它还是经常被描述为“小众产品（niche）”和“不会被硅谷之外的人使用”。</p>

<p>现在，在我们开始开发Gmail差不多七年半后，我看到一篇<a href="http://www.ft.com/cms/s/0/18cdabec-d8fb-11dd-ab5f-000077b07658.html">文章</a>叙述Gmail如何在去年增长40%，相比Yahoo的2%和Hotmail的-7%。</p>
</blockquote>

<p>Paul已经离开Google，现在在从事他自己的创业公司FriendFeed（译者注：FriendFeed已于2015年4月9日关闭）。许多业内人士对待FriendFeed不太友善。Stowe Boyd甚至竟然称FriendFeed就是个失败（译者注：Stowe Boyd评论FriendFeed的文章已经被删除了）。Paul从容应对批评：</p>

<blockquote>
<p>创建一个重要的新产品通常需要时间。FriendFeed需要继续追求创新，就像Gmail六年以前做的那样。FriendFeed显示了很好的前景，但它仍然是一个“在制品”。</p>

<p>我的预期是很大的成功需要好几年时间，没有许多反例（除了YouTube，但现在它其实还没有到达挣成堆钱的那个点）。Facebook成长非常快，但它此时已经五岁了。Larry和Sergey 开始开发Google在1996年——当我开始在那里是1999年，几乎没人听说过它。</p>

<p>一夜成名的观念非常具有误导性，而且相当有害。如果你开始新的东西，那会是一次长途旅行。没有借口去行动缓慢。相反，你必须行动的非常快，否则你将不会到达，因为它是一次长途旅行！这也是为什么节俭是重要的——你不想<a href="http://paulbuchheit.blogspot.com/2008/03/ideas-vs-judgment-and-execution_9197.html">饿死在半山腰上</a>。</p>
</blockquote>

<p>Stowe Boyd用一张Twitter和FriendFeed的流量对比图说明他关于FriendFeed的观点。这里请允许我把我自己的数据也加到Boyd先生的图上：</p>

<p><img src="/uploads/three-traffic-comparison.png" title="three-traffic-comparison" ></p>

<p>我觉得Paul的态度令人耳目一新，因为对于我们的创业公司<a href="http://stackoverflow.com/">Stack Overflow</a>我也采用同样的态度。我没有期望或甚至渴望一夜成名。我计划的是花上几年的时间去打磨，持续地、稳步地提升。</p>

<p>这项商业计划和我的职业生涯发展计划没有太多区别：成功需要好几年时间。当我说年的时候，我是认真的！不是在说像“更聪明地工作，而不是更努力地工作”那样的陈词滥调。我是在说真正的日历年。你知道的，12个月的，365天的那种。你必须花上你生命的多年时间孜孜不倦地钻研这些东西，每天醒来后一遍又一遍地做它。每天练习和收集反馈去不断变得更好。有时它可能是不愉快的，甚至偶尔是很无趣的，但它是必需的。</p>

<p>这几乎不是唯一的或有趣的建议。Peter Norvig的经典<a href="http://www.norvig.com/21-days.html">花10年时间自学编程</a>也谈到过这个话题，而且讲得比我更好。</p>

<blockquote>
<p>研究人员发现在任何领域都需要大约10年时间才能培养出专业技能，包括国际象棋、音乐作曲、电报操作、绘画、钢琴演奏、游泳、网球、以及神经心理学和拓扑学的研究。关键是刻意（deliberative）练习：不仅仅是一次又一次地做它，而是用略微超出你当前能力的任务来挑战自己，尝试它，在做时和做后分析你的表现，并且纠正所有错误。然后重复。再重复。</p>

<p>似乎没有真正的捷径：即使是莫扎特，4岁的音乐天才，在他开始创作世界级音乐前也花了超过13年。甲壳虫乐队似乎横空出世以一连串的冠军歌曲（a string of #1 hits），并且在1964年出现在《埃德·沙利文秀》。但其实自1957年以来他们就已经在利物浦和汉堡的小俱乐部里演出了，虽然他们在早期有广泛的吸引力，但他们最最成功的《Sgt. Pepper&#39;s Lonely Hearts Club Band》发布在1967年。</p>
</blockquote>

<p>老实说，我期待着有一天醒来，从现在起的2年或3年之后，做着和今天我在做的完全相同的事：为Stack Overflow编写代码，增加另一个微小的改进或有用的功能。很明显我们想要成功。但在某种程度上，成功是无关紧要的，因为这个过程本身是令人满意的。每天醒来做你喜欢的事情——甚至更好的是，周围社区的人也喜欢它——这本身就是一种奖赏。尽管有着成吨的工作要做。</p>

<p>博客也不例外。我经常给有抱负的博客作者<a href="http://blog.codinghorror.com/how-to-achieve-ultimate-blog-success-in-one-easy-step/">这个很重要的建议</a>：如果你开始你的博客，在六个月内别指望有人来读它。如果你这样做，我可以保证你将会非常失望。 可是，如果你能坚持发布计划并且每周写1篇或2篇高质量的博文一整年……然后，也只有到那个时候，你才可以看到稀稀落落的读者。我开始这个博客于2004年，花了整整3年的时间，每周写3到5篇博文，才使得它在软件开发社区内流行开来。</p>

<p>我非常期望在这个博客上一直写，以一种形式或另一种，用我的余生。它是我是谁的一部分。至于那种戏剧性的成名方式，我不抱有任何幻想：归根结底，<a href="http://www.gocomics.com/pearlsbeforeswine/2008/11/16">我只是在网上写博客的那个人</a>。</p>

<p><img src="/uploads/pearls-before-swine.png" title="pearls-before-swine" ></p>

<p>那样挺好的对我来说。我从来没有说过我是聪明的。</p>

<p>不管你最终获得多少读者，或页面浏览量，或任何我们这周正在度量的<a href="http://blog.codinghorror.com/the-high-score-table/">高分排行榜</a> ，请记住，你正在做的事情是值得去做的，因为——嗯——你正在做的事情是值得去做的。</p>

<p>如果你一直这样坚持下去，谁知道会发生什么？很有可能某一天你醒来，发现自己一夜成名了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何命名你的项目的10个技巧]]></title>
    <link href="http://codemany.com/blog/10-tips-for-how-to-name-your-project/"/>
    <updated>2008-05-14T14:45:32+08:00</updated>
    <id>http://codemany.com/blog/10-tips-for-how-to-name-your-project</id>
    <content type="html"><![CDATA[<p>英文原文：<a href="http://www.wynia.org/wordpress/2006/06/22/10-tips-for-how-to-name-your-project/">http://www.wynia.org/wordpress/2006/06/22/10-tips-for-how-to-name-your-project/</a></p>

<p>这是我在几年前写的一系列东西中的另一篇，但是我想再分享一下。给那些开始产品和服务的人们，他们需要一些说明以便于理解，发音或正确拼写产品和服务的名字，我想该文章的价值就如同我第一次写它的时候一样。</p>

<p>如何（和避免那样）命名你的项目</p>

<ol>
<li>如果你考虑的名字是直接取自科幻或奇幻作品，不必费心了。这些名字在软件中作为命名源的比例非常大。不仅是你想出有独创性名字的机会相当小，而且大部分作品中的角色和地方的名字都被商标化了，你要冒着被起诉的危险。</li>
<li>如果你考虑的名字来自于希腊，罗马或北欧神话，再试一次。我们已经有了足够多的被称为“Mercury”变体的邮件相关软件。</li>
<li>在Google上搜索被提议的名字。你得到的结果越少越好。如果没有结果，那么就是它。</li>
<li>不要试图通过轻微拼错某事得到一个唯一名字。叫你的新窗口文件系统程序为Phat32只会以用户沮丧的看着“fat32”在搜索引擎中的结果而告终。</li>
<li>如果你的产品名称不能在电视上用50s或60s说完，你或许走在了错误的道路上。这是尤其适用的如果你希望任何人在工作环境使用你的产品。没有人会去推荐一个产品给他们的工友，如果他们会遭到性骚扰起诉只是为了说出产品的名称。</li>
<li>如果你的产品名称根本不能被发音，你就完全得不到口碑的好处。同样，如果没人知道如何去发音它，他们就非常有可能不会试着大声的说着它去询问关于它的问题，等等。你怎么说MySQL? PostgreSQL? GNU? 在地球上的几乎所有口语都是基于某类辅音/元音音节。在辅音和元音之间交替是一个相当好的方式保证别人能够发音它。</li>
<li>越短越好。</li>
<li>查看.com域名是否有效。如果不是，那就证明有人比你先想到了这个名称，并且正在使用它或接近使用它。即使你不打算使用域名也要做这一步。</li>
<li>不要让你产品中固有的局限性成为名称的一部分。把你的产品名称叫做LinProduct或WinProduct预先的就永远阻止你发布任一类的跨平台版本。</li>
<li>不要使用你自己的名字来命名开源产品。如果项目在你不再参与开发后仍然活着，项目要么是重命名，要么就是你的名字可能会被使用在你意想不到的地方。</li>
</ol>
]]></content>
  </entry>
  
</feed>
