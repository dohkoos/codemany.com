<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: P6Spy | 乐者为王]]></title>
  <link href="http://codemany.com/tags/p6spy/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-09-16T22:22:27+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[集成P6Spy到Spring后没有产生log文件的问题]]></title>
    <link href="http://codemany.com/blog/2007/01/22/problem-does-not-generate-log-file-when-integrate-p6spy-into-spring/"/>
    <updated>2007-01-22T17:41:32+08:00</updated>
    <id>http://codemany.com/blog/2007/01/22/problem-does-not-generate-log-file-when-integrate-p6spy-into-spring</id>
    <content type="html"><![CDATA[<p>网上关于集成P6Spy到Spring的帖子说：在Spring的配置文件中添加：</p>

<p>```
<bean id="dataSource" class="com.p6spy.engine.spy.P6DataSource" destroy-method="close"></p>

<pre><code>&lt;constructor-arg ref="dataSourceTarget" /&gt;
</code></pre>

<p></bean>
```</p>

<p>然后将原来dataSource定义的id值改为dataSourceTarget：</p>

<p>```
<bean id="dataSourceTarget" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"></p>

<pre><code>&lt;property name="driverClassName" value="${driver}" /&gt;
&lt;property name="url" value="${url}" /&gt;
&lt;property name="username" value="${username}" /&gt;
&lt;property name="password" value="${password}" /&gt;
</code></pre>

<p></bean>
```</p>

<p>但是照着这样做了以后却发现没有生成log文件。</p>

<p>下载P6Spy的源代码进行阅读后找到了问题所在。打开P6Util.java文件，在classPathFile()方法中有这样一条语句：</p>

<p><code>
fp = classLoadPropertyFile(Thread.currentThread().getContextClassLoader().getResource(file))
</code></p>

<p>getResource(file)用来读取spy.properties配置文件，file的值就是spy.properties的文件路径。我的syp.properties放在了C:\Tomcat 5.5\webapps\netlink\WEB-INF\classes目录下，所以它返回的值是C:/Tomcat%205.5/webapps/netlink/WEB-INF/classes/spy.properties，Tomcat 5.5中的空格被编码成了%20。然后在classLoadPropertyFile()方法中就直接使用该值来创建File对象。可想而知，肯定创建失败。</p>

<p>```
public static File classLoadPropertyFile(java.net.URL purl) {</p>

<pre><code>try {
    if (purl != null) {
        // modified by jayakumar for JDK 1.2 support
        //return new File(purl.getPath());
        return new File(getPath(purl));
        // end of modification
    }
} catch (Exception e) {
    // we ignore this, since JDK 1.2 does not suppport this method
}
return null;
</code></pre>

<p>}
```</p>

<p>在classPathFile()方法中通过判断fp.exists()来决定是否返回log文件的路径，既然上面创建File对象失败了，那fp.exists()肯定不可能为true了，log文件也就不可能被创建了。</p>

<p>解决问题的方法超简单，把Tomcat 5.5中的空格去掉就行了。</p>
]]></content>
  </entry>
  
</feed>
