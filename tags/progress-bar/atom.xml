<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Progress Bar | 乐者为王]]></title>
  <link href="http://codemany.com/tags/progress-bar/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2016-08-27T18:57:46+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[进度栏的再思考]]></title>
    <link href="http://codemany.com/blog/rethinking-the-progress-bar/"/>
    <updated>2007-11-08T20:26:41+08:00</updated>
    <id>http://codemany.com/blog/rethinking-the-progress-bar</id>
    <content type="html"><![CDATA[<p>英文原文：<a href="http://chrisharrison.net/projects/progressbars/ProgBarHarrison.pdf">http://chrisharrison.net/projects/progressbars/ProgBarHarrison.pdf</a></p>

<p>摘要</p>

<p>进度栏普遍存在于现代的用户界面。
通常，一个线性函数被采用，因此（such that）栏的进度和已经完成多少工作成正比。
然而，许多因素导致进度栏以非线性速率行进。
此外，人类以一种非线性方法感知时间。
这篇论文探讨在过程持续时间的用户感知上各种进度栏行为的影响。
结果被用来建议若干设计注意事项——可以使进度栏显示地更快，并且最终改善用户的计算体验。</p>

<p>关键词：Duration Neglect, Human-Centric, Peak-and-End, Progress Bar, Time Perception, User Interface</p>

<h3 id="introduction-导论；引言；简介；前言">INTRODUCTION 导论；引言；简介；前言</h3>

<p>大多数软件包使用进度栏显示一个持续过程的状态。
用户依靠进度栏来检验操作顺利并估计完成时间。
通常，一个线性函数被应用，因此（such that）进度栏的前进和已完成工作的数量成正比。
此外，为复杂或多阶段过程估计进展可能会很困难。
不同磁盘，内存，处理器，带宽和其它因素使进一步复杂化。
于是，进度栏经常表现出非线性行为，例如加速，减速，和停顿。</p>

<p>此外，人类以一种非线性方法感知时间的流逝。
再加上进度栏的不规则行为，导致过程持续时间的人类感知改变。
了解哪些行为感知缩短或延长过程持续时间可以被用来改变进度栏——显示地更快，尽管实际的持续时间保持不变。
这篇论文描述一个实验，它试图在进度栏行为的用户感知中识别模式。
然后分析结果去分类感知加速或减速过程执行的行为。
我们得出若干设计注意事项，它们可被应用于使用进度栏的应用，并且有助于一种总体上反应更灵敏、令人愉悦的和以人为中心的计算体验。</p>

<h3 id="related-work-相关工作；相关研究；相关文献">RELATED WORK 相关工作；相关研究；相关文献</h3>
]]></content>
  </entry>
  
</feed>
