<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: hosts | 乐者为王]]></title>
  <link href="http://codemany.com/tags/hosts/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2018-03-01T12:15:04+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何修改Android的hosts文件]]></title>
    <link href="http://codemany.com/blog/how-to-modify-hosts-in-android/"/>
    <updated>2017-02-16T11:52:56+08:00</updated>
    <id>http://codemany.com/blog/how-to-modify-hosts-in-android</id>
    <content type="html"><![CDATA[<p>由于「你懂的」的原因，某些时候我们需要修改Android的hosts文件。Android的hosts文件路径是/system/etc/hosts，在修改该文件前首先需要Android手机获取root权限。至于如何root你的手机，这里就不加详述，可以自行在网络上查找，很多也很简单。</p>

<p>本文将要阐述的是如何在命令行下通过adb程序访问root过的手机，把hosts拖到电脑上修改，然后再复制回手机来实现修改hosts的方法。</p>

<p>下面就开始具体的步骤：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">C:\tools&gt;adb pull /system/etc/hosts hosts.mod
[100%] /system/etc/hosts
</code></pre></div>
<p>上面的命令是把手机上的hosts文件拖到电脑上，[100%]表明文件已经传输完成，可以修改hosts文件了。在修改完成后就使用以下命令上传到手机：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">C:\tools&gt;adb push hosts.mod /system/etc/hosts
adb: error: failed to copy &#39;hosts.mod&#39; to &#39;/system/etc/hosts&#39;: Read-only file system
</code></pre></div>
<p>从回显的消息可以看到，文件系统是只读的，所以不能直接上传。</p>

<p>试试以下的命令看能不能成功？！</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">C:\tools&gt;adb root  # 帮助文档说该命令可以让adbd守护进程获得root权限
C:\tools&gt;adb push hosts.mod /system/etc/hosts
adb: error: failed to copy &#39;hosts.mod&#39; to &#39;/system/etc/hosts&#39;: Read-only file system
</code></pre></div>
<p>还是不行，看来要重新挂载/system目录才可以。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">C:\tools&gt;adb remount
remount failed: Operation not permitted
</code></pre></div>
<p>没有权限？这是必须祭起shell大法的节奏啊！</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">C:\tools&gt;adb shell
* daemon not running. starting it now on port 5037 *
* daemon started successfully *
shell@maguro:/ $ ls -al /system/etc/hosts
-rw-r--r-- root     root           25 2013-08-14 07:00 hosts
</code></pre></div>
<p>从上面最后一行可以看出hosts这个文件只有它的拥有者能写入，对于其他人来说都是只读的。要想让其他人也能做修改，必须使用以下命令进行提权，再改变hosts文件的属性才行。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">shell@maguro:/ $ su
</code></pre></div>
<p>如果是第一次执行这个命令，手机会亮起，SuperSU应用会提示你是否同意权限的分配。这里当然是要同意的！接着你就可以看到终端下的提示符从$变成了#，@前的字符也由shell变成了root。然后我们就可以修改hosts文件的权限属性了。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # chmod +666 /system/etc/hosts
Bad mode
root@maguro:/ # chmod 666 /system/etc/hosts
Unable to chmod /system/etc/hosts: Read-only file system
</code></pre></div>
<p>又是Read-only file system！输入以下命令看看/system目录的文件系统详情呢。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # mount | grep system
/dev/block/platform/omap/omap_hsmmc.0/by-name/system /system ext4 ro,seclabel,relatime...
</code></pre></div>
<p>看到ext4后面的ro了吗？它是read only的缩写，即只读的意思。这说明/system目录是只读的。接下来我们要把它改成可以读写。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # mount -o rw,remount /system
</code></pre></div>
<p>上面的-o用于指定加载文件系统时的选项。这些选项包括：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">remount 重新加载设备。通常用于改变设备的设置状态。
ro 以只读模式加载。
rw 以可读写模式加载。
</code></pre></div>
<p>再次查看，可以看到原来ro的位置已经变成rw了。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # mount | grep system
/dev/block/platform/omap/omap_hsmmc.0/by-name/system /system ext4 rw,seclabel,relatime...
</code></pre></div>
<p>不过到这里我们还不能向手机拷贝hosts文件，因为hosts文件的权限属性还没被改过，如果强行上传的话，会得到如下的错误消息：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">C:\tools&gt;adb push hosts.mod /system/etc/hosts
adb: error: failed to copy &#39;hosts.mod&#39; to &#39;/system/etc/hosts&#39;: Permission denied
</code></pre></div>
<p>运行以下命令：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # chmod 666 /system/etc/hosts
</code></pre></div>
<p>然后查看hosts文件的属性。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # ls -al /system/etc/hosts
-rw-rw-rw- root     root           25 2013-08-14 07:00 hosts
</code></pre></div>
<p>可以看到所有人都可以读写hosts文件了。</p>

<p>既然一切都准备就绪，那就再来试试上传修改后的hosts文件吧。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">C:\tools&gt;adb push hosts.mod /system/etc/hosts
adb: error: failed to copy &#39;hosts.mod&#39; to &#39;/system/etc/hosts&#39;: Read-only file system
</code></pre></div>
<p>怎么回事，为什么还是拷贝失败呢？不是已经把文件系统改为可读写了吗？</p>

<p>并且在查找原因的过程中还发现一个奇怪的事情。在root模式下/system目录是可读写的，但在shell模式下/system却是只读的。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # mount | grep system
/dev/block/platform/omap/omap_hsmmc.0/by-name/system /system ext4 rw,seclabel,relatime...
root@maguro:/ # exit
shell@maguro:/ # mount | grep system
/dev/block/platform/omap/omap_hsmmc.0/by-name/system /system ext4 ro,seclabel,relatime...
</code></pre></div>
<p>而且在手机上的Terminal Emulator中把/system目录mount成可读写之后，在adb shell的root模式下查看/system的状态仍然显示为只读。</p>

<p>在网上找啊找啊找啊，都快要绝望了，终于找到可能之问题所在。就是这个帖子：<a href="http://android.stackexchange.com/questions/142271/mount-in-shell-as-user-or-root-with-different-output">mount in shell as user or root with different output</a>。有个回答提到mount namespace这样东西。然后才知道：</p>

<blockquote>
<p>A mount namespace is the set of filesystem mounts that are visible to a process.</p>
</blockquote>

<p>每个进程的挂载点对其它进程是不可见的。Terminal Emulator中mount后的挂载点属于该进程，而adb shell中shell模式和root模式的挂载点分别属于各自的进程。这就是前面root模式下修改/system目录为可读写后在shell模式下仍显示为只读的原因。</p>

<p>知道问题的原因了，那如何解决呢？</p>

<p>在SuperSu应用的设置中有个mount namespace separation的选项，如下图所示：</p>

<p><img src="/uploads/mount-namespace-separation.png" alt="mount-namespace-separation"></p>

<p>把勾选取消，然后mount的挂载点就是全局性的了，不再为mount它们的进程所独有。不过要记住的是，只有在重启手机后该修改才有效。</p>

<p>下面是取消mount namespace separation后在上传的结果：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">C:\tools&gt;adb push hosts.mod /system/etc/hosts
[100%] /system/etc/hosts
</code></pre></div>
<p>可以看到[100%]的回显，说明文件已经上传完成。</p>

<p>查看hosts文件的属性：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # ls -al /system/etc/hosts
-rw-rw-rw- root     root       137679 2017-02-16 00:20 hosts
</code></pre></div>
<p>文件的大小已经由25变成137679，说明文件已经替换完成。</p>

<p>下面就是恢复手机到原先的状态：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">root@maguro:/ # chmod 644 /system/etc/hosts
root@maguro:/ # ls -al /system/etc/hosts
-rw-r--r-- root     root       137679 2017-02-16 00:20 hosts
root@maguro:/ # mount -o ro,remount /system
</code></pre></div>
<p>至此，修改hosts文件的工作就算大功告成。</p>
]]></content>
  </entry>
  
</feed>
