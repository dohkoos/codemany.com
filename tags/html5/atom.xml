<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: HTML5 | 乐者为王]]></title>
  <link href="http://codemany.com/tags/html5/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-09-15T15:50:49+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用HTML5创建小说网站]]></title>
    <link href="http://codemany.com/blog/2013/05/24/create-novel-website-with-html5/"/>
    <updated>2013-05-24T15:04:32+08:00</updated>
    <id>http://codemany.com/blog/2013/05/24/create-novel-website-with-html5</id>
    <content type="html"><![CDATA[<p>在项目开始前，先要了解下HTML5规范包含的一些有用的新的语义标签，用于提供HTML页面的各个区域或部分的意义，例如页眉、页脚、导航栏、边栏等等。在以前的HTML版本中，这些部分通常使用div标签来创建，通过id或class属性来区分。</p>

<p>HTML5引入的主要标签包括：</p>

<table>
<thead>
<tr>
<th>标签    </th>
<th> 说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>header  </td>
<td> 此标签用于定义页面某些部分的页眉，可以是整个页面、article标签或section标签</td>
</tr>
<tr>
<td>nav     </td>
<td> 这是页面上主要导航链接的容器。此标签不应用于所有链接组，而是应仅用于主要导航块。如果您有一个footer标签包含导航链接，不需要将这些链接封装在nav标签中，因为footer标签将可以独自包括这些链接</td>
</tr>
<tr>
<td>footer  </td>
<td> 此标签定义页面的某些部分的页脚。页脚不一定是在页面、文章或区域的结尾，但是它通常是在那个位置</td>
</tr>
<tr>
<td>article </td>
<td> 定义文档或页面上的独立区块，例如新闻、杂志、博文或评论</td>
</tr>
<tr>
<td>section </td>
<td> 此标签表示文档的一部分，例如，文章或教程的一章或一节。该标签通常具有一个页眉，虽然严格来说是不需要的</td>
</tr>
<tr>
<td>aside   </td>
<td> 用于标记边栏或一些将认为与其周围内容有点无关的内容。此项的一个例子就是广告块</td>
</tr>
<tr>
<td>hgroup  </td>
<td> 在某些情况下，页面、文章或区域可能需要多个标题，例如，您有一个标题和一个副标题。您可以在hgroup标签中封装这些标题，使用h1标签表示主标题，h2标签表示副标题</td>
</tr>
</tbody>
</table>


<p>这些标签的基础结构遵循以下大纲：</p>

<p>```
header
  hgroup
nav
article
  header
  section</p>

<pre><code>header
</code></pre>

<p>footer
```</p>

<p><img src="/uploads/html5-novel-layout.png" title="html5-novel-layout" ></p>

<p>上面是网站的布局设计，主要有header、navigation、footer和main四个区块，实现代码如下：</p>

<p>```</p>

<!-- HTML5的DOCTYPE声明模式，它可以向后兼容，
     再也不用记忆XHTML中复杂的DOCTYPE了！-->


<p>&lt;!DOCTYPE html>
<html>
<head>
  <!-- 指定文档字符编码的写法，该写法在所有浏览器上都有效。-->
  <meta charset="utf-8" />
  <title>HTML5 + CSS3 Demo</title>
  &lt;!-- link和script标签也无需提供type属性（No More Types for Scripts and Links），</p>

<pre><code>   因为CSS和JavaScript是目前惟一受支持的样式表和脚本类型 --&gt;
</code></pre>

<p>  <link href="style.css" rel="stylesheet" />
  &lt;!-- 因为IE浏览器（甚至版本8）不支持新的HTML5标签，处理此问题的一个已知方法是使用</p>

<pre><code>   JavaScript函数document.createElement()为每个标记创建虚拟标签。html5.js文件将
   为每个新的HTML标签进行此操作 --&gt;
</code></pre>

<p>  <!--[if lt IE 9]></p>

<pre><code>&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
</code></pre>

<p>  &lt;![endif]-->
</head></p>

<p><body>
  <header></p>

<pre><code>&lt;hgroup&gt;
  &lt;h1&gt;logo&lt;/h1&gt;
  &lt;h2&gt;tagline&lt;/h2&gt;
&lt;/hgroup&gt;
</code></pre>

<p>  </header></p>

<p>  <nav></p>

<pre><code>&lt;ul&gt;
  &lt;li&gt;&lt;a href="#"&gt;Catalog 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#"&gt;Catalog 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#"&gt;Catalog 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#"&gt;Catalog 4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>  </nav></p>

<p>  <!-- main block begin -->
  <!-- main block end --></p>

<p>  <footer></p>

<pre><code>&amp;copy; 2013 Unnamed
</code></pre>

<p>  </footer>
</body>
</html>
```</p>

<p>对应的CSS文件内容：</p>

<p>```
* {
  font-family: Lucida Sans, Arial, Helvetica, sans-serif;
}</p>

<p>body {
  width: 768px;
  margin: 0px auto;
}</p>

<p>header h1 {
  font-size: 36px;
  margin: 0px;
}</p>

<p>header h2 {
  font-size: 18px;
  margin: 0px;
  color: #888;
  font-style: italic;
}</p>

<p>nav ul {
  list-style: none;
  padding: 0px;
  display: block;
  background-color: #666;
  padding-left: 4px;
  height: 24px;
}</p>

<p>nav ul li {
  display: inline;
  padding: 0px 20px 5px 10px;
  height: 24px;
  border-right: 1px solid #ccc;
}</p>

<p>nav ul li a {
  color: #efd3d3;
  text-decoration: none;
  font-size: 13px;
  font-weight: bold;
}</p>

<p>nav ul li a:hover {
  color: #fff;
}</p>

<p>footer {
  border-top: 1px solid #ccc;
  text-align: center;
  font-size: 12px;
  color: #888;
  margin-top: 24px;
}
```</p>

<p>整个网站主要有这么几个页面：首页、分类页、书目页、内容页，这些页面共用一个布局，主要区别在于main区块的不同。首页、分类页和书目页相似，都是由列表组成。</p>

<p>首页是多个无序列表：</p>

<p>```</p>

<h3>Latest</h3>


<ul>
  <li>Book's title</li>
  <li>Book's title</li>
</ul>




<h3>Most Viewed</h3>


<ul>
  <li>Book's title</li>
  <li>Book's title</li>
</ul>




<h3>Most Shared</h3>


<ul>
  <li>Book's title</li>
  <li>Book's title</li>
</ul>


<p>```</p>

<p>分类页是单个无序列表：</p>

<p>```</p>

<h3>Catalog 1</h3>


<ul>
  <li>Book's title</li>
  <li>Book's title</li>
</ul>


<p>```</p>

<p>书目页是单个有序列表：</p>

<p>```</p>

<h3>Book's title</h3>


<ol>
  <li>Chapter 1</li>
  <li>Chapter 2</li>
  <li>Chapter 3</li>
</ol>


<p>```</p>

<p><img src="/uploads/html5-novel-article.png" title="html5-novel-article" ></p>

<p>内容页，顾名思义就是显示小说具体内容的页面。文章内容用article标签表示，其中的标题、作者、发表时间等信息被包含在header标签中。主要代码如下：</p>

<p>```
<article>
  <header></p>

<pre><code>&lt;h1&gt;&lt;a href="#"&gt;Title&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;By &lt;a href="#"&gt;Peter&lt;/a&gt; on &lt;time&gt;2011-11-12 14:54&lt;/time&gt;&lt;/p&gt;
</code></pre>

<p>  </header>
  <p>Lorem ipsum...</p>
  <section></p>

<pre><code>&lt;header&gt;
  &lt;h1&gt;This is a section heading&lt;/h1&gt;
&lt;/header&gt;
&lt;p&gt;Lorem ipsum...&lt;/p&gt;
</code></pre>

<p>  </section>
  <footer></p>

<pre><code>&lt;a href="#"&gt;Back&lt;/a&gt;
&lt;a href="#"&gt;List&lt;/a&gt;
&lt;a href="#"&gt;Forward&lt;/a&gt;
</code></pre>

<p>  </footer>
</article>
```</p>

<p>在上面的代码里，header标签中我们仅使用了h1标签，这是因为HTML5会根据上下文计算出heading元素的层级，因此会有：</p>

<p><code>
&lt;body&gt;&lt;h1&gt;  &lt;!-- 相当于heading 1 --&gt;
&lt;body&gt;...&lt;section&gt;&lt;h1&gt;  &lt;!-- 相当于heading 2 --&gt;
&lt;body&gt;...&lt;section&gt;&lt;section&gt;&lt;h1&gt;  &lt;!-- 相当于heading 3 --&gt;
</code></p>

<p>最后顺便说一句，HTML5支持已存在的各种写法：xhtml1.0、xhtml1.1和html4.0，但建议使用xhtml1.1规范，即：</p>

<ol>
<li>所有标签/属性都使用小写字母;</li>
<li>所有属性值都必须加引号;</li>
<li>使用闭合标签。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用ichartjs画2D条形图]]></title>
    <link href="http://codemany.com/blog/2013/03/27/draw-2d-bar-graph-using-ichartjs/"/>
    <updated>2013-03-27T06:45:37+08:00</updated>
    <id>http://codemany.com/blog/2013/03/27/draw-2d-bar-graph-using-ichartjs</id>
    <content type="html"><![CDATA[<p><a href="http://codemany.com/blog/2011/09/23/using-open-flash-chart-ii-in-rails/">在Rails中使用Open Flash Chart II</a>中使用了OFC2来画2D条形图。现在Flash快要不行了，因为有了更好的HTML5。好的程序猿也要紧随潮流，使用新的技术来改进和增强他们的代码。这次就尝试使用HTML5图形库来替换OFC2。比较已有的一些图形库，最后选定国产的<a href="http://www.ichartjs.com/">ichartjs</a>。</p>

<p>实现2D条形图真的很简单：</p>

<p>```</p>

<script type="text/javascript" src="ichart.1.1.min.js"></script>


<script type="text/javascript">
$(function() {
  var data = [
    {name: 'IE', value: 35.75, color: '#a5c2d5'},
    {name: 'Chrome', value: 29.84, color: '#cbab4f'},
    {name: 'Firefox', value: 24.88, color: '#76a871'},
    {name: 'Safari',value: 6.77, color: '#9f7961'},
    {name: 'Opera',value：2.02, color: '#a56f8f'},
    {name: 'Other',value: 0.73, color: '#6f83a5'}
  ];

  new iChart.Bar2D({
    render: 'canvasDiv',
    data: data,
    title: 'Top 5 Browsers from 1 to 29 Feb 2012',
    showpercent: true,
    decimalsnum: 2,
    width: 800,
    height: 400,
    coordinate: {
      scale: [{
        position: 'bottom',
        start_scale: 0,
        end_scale: 40,
        scale_space: 8,
        listeners: {
          parseText: function(t, x, y) {
            return {text: t + "%"}
          }
        }
      }]
    }
  }).draw();
}); 
</script>




<div id="canvasDiv"></div>


<p>```</p>
]]></content>
  </entry>
  
</feed>
