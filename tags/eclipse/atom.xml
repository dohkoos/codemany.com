<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Eclipse | 乐者为王]]></title>
  <link href="http://codemany.com/tags/eclipse/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2017-11-27T17:41:44+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在EGit-0.3.1中使用Compare With Git Revision]]></title>
    <link href="http://codemany.com/blog/using-compare-with-git-revision-in-egit-031/"/>
    <updated>2008-08-28T17:51:20+08:00</updated>
    <id>http://codemany.com/blog/using-compare-with-git-revision-in-egit-031</id>
    <content type="html"><![CDATA[<p>EGit是一个Eclipse环境下的Git客户端插件，EGit的0.3.1版本已经提供了Compare With Revision功能，只是还没有注册到plugin.xml中。所以要使用该功能的话，必须自己动手在ui包中的plugin.xml中添加一些代码，即下面的action部分：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;objectContribution
        adaptable=&quot;true&quot;
        id=&quot;org.spearce.egit.ui.fileFolderContributions&quot;
        objectClass=&quot;org.eclipse.core.resources.IResource&quot;&gt;
    &lt;filter name=&quot;projectPersistentProperty&quot;
        value=&quot;org.eclipse.team.core.repository=org.spearce.egit.core.GitProvider&quot;&gt;
    &lt;/filter&gt;
    &lt;action
        class=&quot;org.spearce.egit.ui.internal.actions.CompareWithRevisionAction&quot;
        id=&quot;org.spearce.egit.ui.internal.actions.CompareWithRevisionAction&quot;
        label=&quot;%CompareWithRevisionAction_label&quot;
        menubarPath=&quot;compareWithMenu/compareWithGroup&quot;
        overrideActionId=&quot;org.eclipse.team.ui.compareLocalHistory&quot;
        tooltip=&quot;%CompareWithRevisionAction_tooltip&quot; /&gt;
&lt;/objectContribution&gt;
</code></pre></div>
<p>另外，还要将CompareWithRevisionAction.java中run方法里的super.action(action)注释掉，否则会报StackOverflowException。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">public void run(IAction action) {
    // super.action(action);
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[SetPropertiesRule]{Server/Service/Engine/Host/Context} Setting property]]></title>
    <link href="http://codemany.com/blog/setpropertiesrule-server-service-engine-host-context-setting-property/"/>
    <updated>2008-06-04T15:24:18+08:00</updated>
    <id>http://codemany.com/blog/setpropertiesrule-server-service-engine-host-context-setting-property</id>
    <content type="html"><![CDATA[<p>使用Tomcat 6.0.16搭配Eclipse创建Dynamic Web Project后，在项目上按右键，选择Run As -&gt; Run on Server方式启动Tomcat服务器。在Console工作台中就会出现如下的红色警告信息，让人不爽。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">2008-6-4 21:49:00 org.apache.tomcat.util.digester.SetPropertiesRule begin
WARNING: [SetPropertiesRule]{Server/Service/Engine/Host/Context} Setting property &#39;source&#39; to &#39;org.eclipse.jst.j2ee.server:cont&#39; did not find a matching property.
2008-6-4 21:49:00 org.apache.catalina.core.AprLifecycleListener init
2008-6-4 21:49:00 org.apache.coyote.http11.Http11Protocol init
INFO: Initializing Coyote HTTP/1.1 on http-8080
</code></pre></div>
<p>在网上查找答案，有的说将Tomcat的版本换成6.0.14就可以了；还有的说在建立Dynamic Web Project时把“Dynamic Web Module”选项后面的版本号由2.5改成2.4也行。不过这些回答好像都不能真正地解决问题。只能自己想办法了。</p>

<p>实际上出现SetPropertiesRule警告的原因是因为Tomcat在server.xml的Context节点中不支持source属性：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;Context docBase=&quot;xxx&quot; path=&quot;/cont&quot; source=&quot;org.eclipse.jst.j2ee.server:cont&quot; /&gt;
</code></pre></div>
<p>解决方法是在Server的配置界面中选中“Publish module contexts to separate XML files”选项。</p>

<p><img src="/uploads/eclipse-server-options.png" alt="eclipse-server-options"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Eclipse 3中使用SSH2访问gro.clinux.org的CVS服务器]]></title>
    <link href="http://codemany.com/blog/using-ssh2-to-access-gro-clinux-org-cvs-server-in-eclipse3/"/>
    <updated>2005-07-07T19:48:08+08:00</updated>
    <id>http://codemany.com/blog/using-ssh2-to-access-gro-clinux-org-cvs-server-in-eclipse3</id>
    <content type="html"><![CDATA[<p>在Eclipse中生成公钥和私钥</p>

<p>打开Eclipse，进入Window -&gt; Preferences -&gt; Team -&gt; CVS -&gt; SSH2 Connection Method -&gt; Key Management，点击“Generate RSA Key...”，然后填写Passphrase和Confirm Passphrase，接着点击“Save Private Key...”保存公钥和私钥（公钥和私钥文件保存在~/.ssh/目录下，id_rsa是私钥文件，id_rsa.pub 是公钥文件）。</p>

<p>将公钥上传至gro.clinux.org服务器</p>

<p>登陆gro服务器，进入[帐号维护]，在页面底部你可以看到如下信息：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">Shell帐号信息

Shell box：
CVS/SSH 共享认证Key：0 [编辑Keys]
</code></pre></div>
<p>点击[编辑Keys]，然后把刚才生成的文件id_rsa.pub中的内容粘贴到文本框中（看看是不是符合它上面的要求，千万要仔细看看），如果没有问题的话，就更新吧。大约6个小时后Cron会自动更新，在服务器上你的目录下会自动添加文件夹/.ssh/，里面包含了名为authorized_keys2的文件，你的公钥就保存在这里。</p>

<p>在Eclipse中建立CVS连接</p>

<p>打开CVS Repository Exploring Perspective，进入New -&gt; Repository Location，填入以下内容：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">Host：cvs.unixname.gro.clinux.org
Repository Path：/cvsroot/unixname
User：你在gro.clinux.org上注册的帐户
Password：先前保存公钥和私钥时输入的Passphrase
Connection Type：extssh
</code></pre></div>
<p>点击Finish。如果你是第一次登录的话，将会弹出一个对话框，不用看那么仔细，直接点击OK就好了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse中Ant执行JUnit测试的问题（2）]]></title>
    <link href="http://codemany.com/blog/problem-running-junit-tests-with-ant-in-eclipse-part2/"/>
    <updated>2005-02-22T22:02:00+08:00</updated>
    <id>http://codemany.com/blog/problem-running-junit-tests-with-ant-in-eclipse-part2</id>
    <content type="html"><![CDATA[<p>Eclipse 3.0.3 + Ant 1.6.2 + JUnit 3.8.1</p>

<p>构建配置文件build.xml：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;target name=&quot;junit&quot;&gt;
    &lt;junit&gt;
        &lt;formatter type=&quot;xml&quot; /&gt;
        &lt;batchtest todir=&quot;${report.dir}&quot;&gt;
            &lt;fileset dir=&quot;${classes.dir}&quot; includes=&quot;**/*Test.class&quot; /&gt;
        &lt;/batchtest&gt;
    &lt;/junit&gt;
&lt;/target&gt;
</code></pre></div>
<p>执行任务的时候出现了异常：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">java.lang.ClassNotFoundException: com.example.learning.HelloTest
    at java.net.URLClassLoader$1.run(Unknown Source)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(Unknown Source)
    at java.lang.ClassLoader.loadClass(Unknown Source)
    at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
    at java.lang.ClassLoader.loadClass(Unknown Source)
    at java.lang.ClassLoader.loadClassInternal(Unknown Source)
    at java.lang.Class.forName0(Native Method)
    at java.lang.Class.forName(Unknown Source)
</code></pre></div>
<p>网上搜索没有找到答案，到Ant官网上发现 <a href="http://ant.apache.org/faq.html#delegating-classloader">http://ant.apache.org/faq.html#delegating-classloader</a> 这篇文章讲了该问题。只要在junit任务里加入classpath指出要加载类的路径就可以了。修改后的build.xml文件如下：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;target name=&quot;junit&quot;&gt;
    &lt;junit&gt;
        &lt;classpath&gt;
            &lt;pathelement location=&quot;${classes.dir}&quot; /&gt;
        &lt;/classpath&gt;
        &lt;formatter type=&quot;xml&quot; /&gt;
        &lt;batchtest todir=&quot;${report.dir}&quot;&gt;
            &lt;fileset dir=&quot;${classes.dir}&quot; includes=&quot;**/*Test.class&quot; /&gt;
        &lt;/batchtest&gt;
    &lt;/junit&gt;
&lt;/target&gt;
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse中Ant执行JUnit测试的问题（1）]]></title>
    <link href="http://codemany.com/blog/problem-running-junit-tests-with-ant-in-eclipse-part1/"/>
    <updated>2005-02-05T18:33:00+08:00</updated>
    <id>http://codemany.com/blog/problem-running-junit-tests-with-ant-in-eclipse-part1</id>
    <content type="html"><![CDATA[<p>Eclipse 3.0.3 + Ant 1.6.2 + JUnit 3.8.1</p>

<p>构建配置文件build.xml：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;target name=&quot;junit&quot;&gt;
    &lt;junit&gt;
        &lt;formatter type=&quot;xml&quot; /&gt;
        &lt;batchtest todir=&quot;${report.dir}&quot;&gt;
            &lt;fileset dir=&quot;${classes.dir}&quot; includes=&quot;**/*Test.class&quot; /&gt;
        &lt;/batchtest&gt;
    &lt;/junit&gt;
&lt;/target&gt;
</code></pre></div>
<p>在执行时出现了以下问题：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">BUILD FAILED: build.xml:44: Could not create task or type of type: junit.

Ant could not find the task or a class this task relies upon.

This is common and has a number of causes; the usual
solutions are to read the manual pages then download and
install needed JAR files, or fix the build file:
 - You have misspelt &#39;junit&#39;.
   Fix: check your spelling.
 - The task needs an external JAR file to execute
     and this is not found at the right place in the classpath.
   Fix: check the documentation for dependencies.
   Fix: declare the task.
 - The task is an Ant optional task and the JAR file and/or libraries
     implementing the functionality were not found at the time you
     yourself built your installation of Ant from the Ant sources.
   Fix: Look in the ANT_HOME/lib for the &#39;ant-&#39; JAR corresponding to the
     task and make sure it contains more than merely a META-INF/MANIFEST.MF.
     If all it contains is the manifest, then rebuild Ant with the needed
     libraries present in ${ant.home}/lib/optional/, or alternatively,
     download a pre-built release version from apache.org
 - The build file was written for a later version of Ant
   Fix: upgrade to at least the latest release version of Ant
 - The task is not an Ant core or optional task
     and needs to be declared using &lt;taskdef&gt;.
 - You are attempting to use a task defined using
    &lt;presetdef&gt; or &lt;macrodef&gt; but have spelt wrong or not
   defined it at the point of use

Remember that for JAR files to be visible to Ant tasks implemented
in ANT_HOME/lib, the files must be in the same directory or on the
classpath

Please neither file bug reports on this problem, nor email the
Ant mailing lists, until all of these causes have been explored,
as this is not an Ant bug.
</code></pre></div>
<p>产生上面错误的原因是Ant在执行junit任务时没有找到junit.jar这个文件。将junit.jar放到ANT_HOME/lib目录下，再次执行，这下该OK了吧！</p>

<p>有没有搞错，还产生同样的错误！到命令行下试试。打入命令ant junit，然后出现：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">Buildfile: build.xml

junit:

BUILD SUCCESSFUL
Total time: 1 second
</code></pre></div>
<p>怎么会这样？命令行下可以，Eclipse中就不行了？</p>

<p>到Preferences -&gt; Ant -&gt; Runtime -&gt; Classpath下设置一下junit.jar的路径，再次执行junit任务，终于在Console视图中看到了成功的消息。</p>
]]></content>
  </entry>
  
</feed>
