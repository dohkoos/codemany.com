<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Apache | 乐者为王]]></title>
  <link href="http://codemany.com/tags/apache/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-21T22:32:52+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[.htaccess实例详解]]></title>
    <link href="http://codemany.com/blog/2013/03/10/htaccess-explanation-by-example/"/>
    <updated>2013-03-10T12:01:35+08:00</updated>
    <id>http://codemany.com/blog/2013/03/10/htaccess-explanation-by-example</id>
    <content type="html"><![CDATA[<p>又一次迁移博客服务器。因为是迁移，就没有采取安装新的Wordpress，而是把以前的程序拷贝到服务器上。</p>

<p>打开首页的时候还好，访问具体文章时就出现问题了：
<code>
Not Found
The requested URL /sample-article.html was not found on this server.
</code></p>

<p>百思不得其解。后来试着去后台重新做设置，然后就发现在根目录下多了.htaccess文件，内容如下：
```</p>

<h1>BEGIN WordPress</h1>

<p><IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /
RewriteRule ^index.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule></p>

<h1>END WordPress</h1>

<p>```</p>

<p>以前也看过这个文件，总是模模糊糊不太明白。今天研究的时候发现一下子就清清楚楚了（这大概就是说的顿悟吧^_^不过它的发生应该还是建立在渐修的基础上）。</p>

<p>下面来说说这些内容的理解：</p>

<p>第1行就是打开重写引擎</p>

<p>第2行是设置URL前缀。</p>

<blockquote><p>Syntax:   RewriteRule Pattern Substitution [flags]</p>

<ul>
<li>(dash)
A dash indicates that no substitution should be performed (the existing path is passed through untouched). This is used when a flag (see below) needs to be applied without changing the path.</li>
</ul>


<p>last|L
 Stop the rewriting process immediately and don't apply any more rules. Especially note caveats for per-directory and .htaccess context.</p></blockquote>

<p>第3行是完全匹配index.php的URI，但不做替换，并且匹配成功后就停止执行重写过程。</p>

<p>第6行就是把所有的访问请求重写，指给index.php，然后停止执行重写过程。</p>

<blockquote><p>Syntax: RewriteCond TestString CondPattern</p>

<p>REQUEST_FILENAME
 The full local filesystem path to the file or script matching the request, if this has already been determined by the server at the time REQUEST_FILENAME is referenced. Otherwise, such as when used in virtual host context, the same value as REQUEST_URI.</p>

<p>You can prefix the pattern string with a '!' character (exclamation mark) to specify a non-matching pattern.</p>

<p>'-d' (is directory)
 Treats the TestString as a pathname and tests whether or not it exists, and is a directory.</p>

<p>'-f' (is regular file)
 Treats the TestString as a pathname and tests whether or not it exists, and is a regular file.</p></blockquote>

<p>第4和第5行是不去测试访问URI是否是目录或文件。其实有了第6行这两行基本就是摆设了。</p>

<p>最后再唠叨一句，有问题直接查官方文档应该是最好的选择。官方文档链接：<a href="http://httpd.apache.org/docs/current/mod/mod_rewrite.html">Apache Module mod_rewrite</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache本地虚拟主机配置]]></title>
    <link href="http://codemany.com/blog/2009/07/29/local-apache-virtual-host-configuration/"/>
    <updated>2009-07-29T09:54:07+08:00</updated>
    <id>http://codemany.com/blog/2009/07/29/local-apache-virtual-host-configuration</id>
    <content type="html"><![CDATA[<p>一般我们开发一个网站，都是先在本地部署和调试，再上传到网上。假如Root目录是C:\www，当有两个或多个网站需要部署时，那么就会有<br />
C:\www\site1<br />
C:\www\site2<br />
...</p>

<p>它们可以通过如下方式来访问。<br />
<a href="http://localhost/site1">http://localhost/site1</a><br />
<a href="http://localhost/site2">http://localhost/site2</a><br />
...</p>

<p>这样当然没有问题，不过如果能在本地实现用域名访问，不是更方便，像这样：<br />
<a href="http://www.site1.com">http://www.site1.com</a><br />
<a href="http://www.site2.com">http://www.site2.com</a></p>

<p>首先在C:\Windows\System32\drivers\etc\hosts文件中加上一下内容：<br />
127.0.0.1   site1.com<br />
127.0.0.1   www.site1.com<br />
127.0.0.1   site2.com<br />
127.0.0.1   www.site2.com</p>

<p>然后打开Apache的配置文件httpd.conf，找到<br /></p>

<h1>Virtual hosts<br /></h1>

<h1>Include conf/extra/httpd-vhosts.conf</h1>

<p>把第二行前面的注释去掉，这样就可以通过修改httpd-vhosts.conf文件来达到配置虚拟主机的目的。当然也可以直接在httpd.conf文件下配置。</p>

<p>httpd-vhosts.conf文件内容：<br />
NameVirtualHost *:80</p>

<p><Directory "C:/www/site1">
Options FollowSymLinks<br />
AllowOverride None<br />
Order allow,deny<br />
Allow from all
</Directory></p>

<p><VirtualHost *:80>
ServerName site1.com<br />
Serveralias www.site1.com<br />
ServerAdmin <a href="&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#119;&#101;&#98;&#x6d;&#x61;&#115;&#x74;&#101;&#x72;&#x40;&#115;&#105;&#116;&#101;&#49;&#46;&#x63;&#x6f;&#x6d;">&#x77;&#101;&#x62;&#109;&#97;&#x73;&#x74;&#x65;&#114;&#x40;&#115;&#105;&#116;&#101;&#49;&#46;&#99;&#x6f;&#x6d;</a><br />
DocumentRoot "C:/www/site1"<br />
ErrorLog "logs/site1.com-error.log"<br />
CustomLog "logs/site1.com-access.log" common
</VirtualHost></p>

<p><Directory "C:/www/site2">
Options FollowSymLinks<br />
AllowOverride None<br />
Order allow,deny<br />
Allow from all
</Directory></p>

<p><VirtualHost *:80>
ServerName site2.com<br />
Serveralias www.site2.com<br />
ServerAdmin <a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#58;&#x77;&#101;&#x62;&#109;&#x61;&#x73;&#x74;&#x65;&#x72;&#x40;&#115;&#x69;&#116;&#101;&#50;&#x2e;&#99;&#111;&#x6d;">&#x77;&#x65;&#x62;&#109;&#97;&#x73;&#116;&#x65;&#114;&#64;&#115;&#105;&#x74;&#x65;&#50;&#x2e;&#x63;&#x6f;&#x6d;</a><br />
DocumentRoot "C:/www/site2"<br />
ErrorLog "logs/site2.com-error.log"<br />
CustomLog "logs/site2.com-access.log" common
</VirtualHost></p>

<p>这是最基本的配置，*号代表任何ip，也可以指定为本地ip：127.0.0.1。最好配置两个或两个以上，如果只有一个的话，那么其中的DocumentRoot就会覆盖httpd.conf文件里的DocumentRoot。</p>

<p>重启Apache就大功告成了，以后访问www.site1.com或site1.com就会访问本地的C:\www\site1文件夹。</p></p>
]]></content>
  </entry>
  
</feed>
