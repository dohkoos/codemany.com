<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: OAuth | 乐者为王]]></title>
  <link href="http://codemany.com/tags/oauth/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2017-11-30T19:09:04+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[构建支持OAuth的新浪微博桌面客户端]]></title>
    <link href="http://codemany.com/blog/build-oauth-enabled-sina-weibo-desktop-client/"/>
    <updated>2011-05-08T15:22:11+08:00</updated>
    <id>http://codemany.com/blog/build-oauth-enabled-sina-weibo-desktop-client</id>
    <content type="html"><![CDATA[<p>要使用OAuth，首先要去新浪微博注册一个自己的微博应用。注册之后，会得到微博应用的Consumer key和Consumer secret，都是一个字符串。之后就可以进行OAuth的认证过程了。</p>

<p>从 <a href="https://code.google.com/p/sina-weibo4j/">https://code.google.com/p/sina-weibo4j/</a> 下载新浪微博的Java SDK包，当然也可以在 <a href="http://open.weibo.com/wiki/index.php/SDK">http://open.weibo.com/wiki/index.php/SDK</a> 下载。推荐使用前者，已经打好包了。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.Properties;
import java.util.PropertyResourceBundle;

import weibo4j.Weibo;
import weibo4j.WeiboException;
import weibo4j.http.AccessToken;
import weibo4j.http.RequestToken;

public class UpdateStatus {
    private static final String ACCESS_SECRET = &quot;access_secret&quot;;
    private static final String ACCESS_TOKEN = &quot;access_token&quot;;
    private static final String FILE_NAME = &quot;sina_token.properties&quot;;

    public static void main(String[] args) {
        // 在这里填写在应用申请中得到的App Key和App Secret
        System.setProperty(&quot;weibo4j.oauth.consumerKey&quot;, YOUR_CONSUMER_KEY);
        System.setProperty(&quot;weibo4j.oauth.consumerSecret&quot;, YOUR_CONSUMER_SECRET);

        Weibo weibo = new Weibo();

        try {
            // 读取存储起来的Access Token
            AccessToken accessToken = loadAccessToken();
            if (accessToken == null) {
                String backUrl = &quot;http://zhubabo.appspot.com&quot;;

                // 请求Request Token（未授权令牌）
                RequestToken requestToken = weibo.getOAuthRequestToken(backUrl);
                System.out.println(&quot;Got request token...&quot;);
                System.out.println(&quot;Request token: &quot; + requestToken.getToken());
                System.out.println(&quot;Request token secret: &quot; + requestToken.getTokenSecret());

                // 将以下打印出的授权链接在浏览器中打开，完成应用授权，会自动跳转到
                // 指定的callback url，并将oauth_verifier一起返回
                System.out.println(&quot;Open the following url in a browser&quot;);
                System.out.println(&quot; http://api.t.sina.com.cn/oauth/authorize?oauth_token=&quot; + requestToken.getToken());

                // 输入上面得到的oauth_verifier的值，取得Access Token，这个Token是长期有效的
                System.out.println(&quot;please input verifier:&quot;);
                String verifier = readLine();
                accessToken = weibo.getOAuthAccessToken(
                    requestToken.getToken(),
                    requestToken.getTokenSecret(),
                    verifier);

                // 将Access Token保存下来，以后就可以直接通过此Token向新浪围脖发消息了
                storeAccessToken(accessToken.getToken(), accessToken.getTokenSecret());
            }

            weibo.setToken(accessToken.getToken(), accessToken.getTokenSecret());

            System.out.println(&quot;Input message to sina:&quot;);
            String message = readLine();
            while (!&quot;exit&quot;.equals(message.trim())) {
                weibo.updateStatus(message);
                System.out.println(&quot;Input message to sina:&quot;);
                message = readLine();
            }
        } catch (WeiboException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void storeAccessToken(String token, String tokenSecret) throws IOException {
        OutputStream out = new FileOutputStream(new File(FILE_NAME));
        Properties p = new Properties();
        p.setProperty(ACCESS_TOKEN, token);
        p.setProperty(ACCESS_SECRET, tokenSecret);
        p.store(out, &quot;sina access token&quot;);
        out.flush();
        out.close();
    }

    private static AccessToken loadAccessToken() throws IOException {
        File f = new File(FILE_NAME);
        if (!f.exists()) {
            return null;
        }
        InputStream in = new FileInputStream(f);
        PropertyResourceBundle bundle = new PropertyResourceBundle(in);
        in.close();
        return new AccessToken(bundle.getString(ACCESS_TOKEN), bundle.getString(ACCESS_SECRET));
    }

    private static String readLine() throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        byte[] bs = reader.readLine().getBytes(&quot;gbk&quot;);
        return new String(bs);
    }
}
</code></pre></div>]]></content>
  </entry>
  
</feed>
