<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: CSS | 乐者为王]]></title>
  <link href="http://codemany.com/tags/css/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2017-01-08T20:52:29+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何使用Flexbox构建新闻站点布局]]></title>
    <link href="http://codemany.com/blog/how-to-build-a-news-website-layout-with-flexbox/"/>
    <updated>2016-06-11T23:31:14+08:00</updated>
    <id>http://codemany.com/blog/how-to-build-a-news-website-layout-with-flexbox</id>
    <content type="html"><![CDATA[<p>英文原文：<a href="http://webdesign.tutsplus.com/tutorials/how-to-build-a-news-website-layout-with-flexbox--cms-26611">http://webdesign.tutsplus.com/tutorials/how-to-build-a-news-website-layout-with-flexbox--cms-26611</a></p>

<p><img src="/uploads/flexbox-preview.png" title="flexbox-preview" ></p>

<p>在投入并开始之前你没有必要理解Flexbox的<em>每个</em>方面。在这篇教程中，我们将介绍一些Flexbox的特性，同时设计一个类似<a href="http://www.theguardian.com/">The Guardian</a>的“新闻布局”。</p>

<p>我们正在使用Flexbox的原因是它提供了非常强大的特性：</p>

<ul>
<li>我们可以很容易制作响应式列</li>
<li>我们可以使列等高</li>
<li>我们可以把内容推到容器的<em>底部</em></li>
</ul>

<p>那么让我们开始吧！</p>

<h3 id="1-从两个列开始">1. 从两个列开始</h3>

<p>在CSS中创建列一直是个挑战。长期以来，唯一的选项是使用float或者table，但它们都有它们自己的问题。</p>

<p>Flexbox使这个过程更简单，给予我们：</p>

<ul>
<li><strong>更简洁的代码</strong>：我们只需要一个带有display: flex的容器</li>
<li>不需要<strong>清除</strong>float，以防止意外的布局行为</li>
<li><strong>语义化的标记</strong></li>
<li><strong>灵活性</strong>：我们可以用几行CSS代码来调整列的大小、拉伸或者对齐列</li>
</ul>

<p>让我们从创建两个列开始：一个是容器宽度的2/3，一个是1/3。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;div class=&quot;columns&quot;&gt;
  &lt;div class=&quot;column main-column&quot;&gt;
    2/3 column
  &lt;/div&gt;
  &lt;div class=&quot;column&quot;&gt;
    1/3 column
  &lt;/div&gt;
&lt;/div&gt;
</code></pre></div>
<p>这里有两个元素：</p>

<ul>
<li>columns容器</li>
<li>两个column子容器，其中一个带有附加的名为main-column的class，我们将用它来让该子容器更宽</li>
</ul>
<div class="highlight"><pre><code class="language-text" data-lang="text">.columns {
  display: flex;
}

.column {
  flex: 1;
}

.main-column {
  flex: 2;
}
</code></pre></div>
<p>作为有一个flex值为2的主列，它将占用其它列的两倍空间。</p>

<p>通过添加一些附加的视觉样式，这里是我们得到的：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">html {
  font-family: sans-serif;
}

.columns {
  display: flex;
}

.column {
  background: #eee;
  border: 5px solid #ccc;
  flex: 1;
  padding: 20px;
}

.main-column {
  flex: 2;
}
</code></pre></div>
<h3 id="2-让每一列都成为flexbox容器">2. 让每一列都成为Flexbox容器</h3>

<p>这两列中的每一个都将包含若干垂直堆叠的文章，因此我们打算把column元素也转变成Flexbox容器。我们想要：</p>

<ul>
<li>文章被垂直堆叠</li>
<li>文章<em>拉伸</em>并填充可用空间</li>
</ul>
<div class="highlight"><pre><code class="language-text" data-lang="text">.column {
  display: flex;
  flex-direction: column;  /* 使文章垂直堆叠 */
}

.article {
  flex: 1;  /* 拉伸文章以填补剩余的空间 */
}
</code></pre></div>
<p>在<em>容器</em>上的flex-direction: column规则结合在<em>子容器</em>上的flex: 1规则确保文章将填补整个垂直空间，保持最初两列具有相同的高度。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;div class=&quot;columns&quot;&gt;
  &lt;div class=&quot;column main-column&quot;&gt;
    &lt;article class=&quot;article&quot;&gt;
      Hello World
    &lt;/article&gt;
    &lt;article class=&quot;article&quot;&gt;
      Hello World
    &lt;/article&gt;
  &lt;/div&gt;
  &lt;div class=&quot;column&quot;&gt;
    &lt;article class=&quot;article&quot;&gt;
      Hello World
    &lt;/article&gt;
    &lt;article class=&quot;article&quot;&gt;
      Hello World&lt;br&gt;
      Foo Bar
    &lt;/article&gt;
    &lt;article class=&quot;article&quot;&gt;
      Hello World
    &lt;/article&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre></div><div class="highlight"><pre><code class="language-text" data-lang="text">html {
  font-family: sans-serif;
}

.columns {
  display: flex;
}

.column {
  background: #eee;
  border: 5px solid #ccc;
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: 10px;
}

.main-column {
  flex: 2;
}

.article {
  background: mediumseagreen;
  border: 5px solid seagreen;
  color: white;
  flex: 1;
  margin: 10px;
  padding: 20px;
}
</code></pre></div>
<h3 id="3-让每篇文章都成为flexbox容器">3. 让每篇文章都成为Flexbox容器</h3>

<p>现在，为了给我们额外的控制，让我们把每篇文章也转变成一个Flexbox容器。每篇文章将包含：</p>

<ul>
<li>一个标题</li>
<li>一个段落</li>
<li>一个带有作者和评论数量的信息栏</li>
<li>一张可选的响应式图片</li>
</ul>

<p>我们在这里使用Flexbox是为了把信息栏推到底部。我们的目标文章布局如下图所示：</p>

<p><img src="/uploads/flexbox-card.png" title="flexbox-card" ></p>

<p>这里是代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;a class=&quot;article first-article&quot;&gt;
  &lt;figure class=&quot;article-image&quot;&gt;
    &lt;img src=&quot;&quot;&gt;
  &lt;/figure&gt;
  &lt;div class=&quot;article-body&quot;&gt;
    &lt;h2 class=&quot;article-title&quot;&gt;
      &lt;!-- 标题 --&gt;
    &lt;/h2&gt;
    &lt;p class=&quot;article-content&quot;&gt;
      &lt;!-- 内容 --&gt;
    &lt;/p&gt;
    &lt;footer class=&quot;article-info&quot;&gt;
      &lt;!-- 信息 --&gt;
    &lt;/footer&gt;
  &lt;/div&gt;
&lt;/a&gt;
</code></pre></div><div class="highlight"><pre><code class="language-text" data-lang="text">.article {
  display: flex;
  flex-direction: column;
  flex-basis: auto;  /* 基于其内容设置初始元素大小 */
}

.article-body {
  display: flex;
  flex: 1;
  flex-direction: column;
}

.article-content {
  flex: 1;  /* 这将使内容填补剩余的空间，并因此在底部压入信息栏 */
}
</code></pre></div>
<p>文章元素被垂直放置归功于flex-direction: column规则。</p>

<p>我们把flex: 1应用到article-content元素以便它填补空白空间，并且把article-info推到底部，无论列的高度如何。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;main class=&quot;main columns&quot;&gt;
  &lt;section class=&quot;column main-column&quot;&gt;
    &lt;a class=&quot;article first-article&quot; href=&quot;#&quot;&gt;
      &lt;figure class=&quot;article-image is-4by3&quot;&gt;
        &lt;img src=&quot;https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/1366/posts/26611/attachment/image-01.png&quot; alt=&quot;&quot;&gt;
      &lt;/figure&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
          Maecenas non massa sem.
          Etiam finibus odio quis feugiat facilisis.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Proin ornare magna eros.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;

    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;figure class=&quot;article-image is-16by9&quot;&gt;
        &lt;img src=&quot;https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/1366/posts/26611/attachment/image-02.png&quot; alt=&quot;&quot;&gt;
      &lt;/figure&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
          Maecenas non massa sem.
          Etiam finibus odio quis feugiat facilisis.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
          Maecenas non massa sem.
          Etiam finibus odio quis feugiat facilisis.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;/section&gt;

  &lt;section class=&quot;column&quot;&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;figure class=&quot;article-image is-3by2&quot;&gt;
        &lt;img src=&quot;https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/1366/posts/26611/attachment/image-03.png&quot; alt=&quot;&quot;&gt;
      &lt;/figure&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;/section&gt;
&lt;/main&gt;
</code></pre></div><div class="highlight"><pre><code class="language-text" data-lang="text">html {
  background: mediumseagreen;
  font-family: sans-serif;
  font-size: 14px;
}

a {
  text-decoration: none;
}

div, h2, p, figure {
  margin: 0;
  padding: 0;
}

.main {
  margin: 0 auto;
  max-width: 1040px;
  padding: 20px;
}

.columns {
  display: flex;
}

.column {
  display: flex;
  flex: 1;
  flex-direction: column;
}

.main-column {
  flex: 2;
}

.article {
  background: white;
  color: #666;
  display: flex;
  flex: 1;
  flex-direction: column;
  flex-basis: auto;
  margin: 10px;
}

.article-image {
  background: #eee;
  display: block;
  padding-top: 75%;
  position: relative;
  width: 100%;
}

.article-image img {
  display: block;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.article-image.is-3by2 {
  padding-top: 66.6666%;
}

.article-image.is-16by9 {
  padding-top: 56.25%;
}

.article-body {
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: 20px;
}

.article-title {
  color: #333;
  flex-shrink: 0;
  font-size: 1.4em;
  font-weight: bold;
  font-weight: 700;
  line-height: 1.2;
}

.article-content {
  flex: 1;
  margin-top: 5px;
}

.article-info {
  display: flex;
  font-size: 0.85em;
  justify-content: space-between;
  margin-top: 10px;
}
</code></pre></div>
<h3 id="4-添加一些嵌套列">4. 添加一些嵌套列</h3>

<p>在左边的列中，我们真正想要的是<em>另一组</em>列。因此我们将以我们已经用过的同样的columns容器代替第二篇文章。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;div class=&quot;columns&quot;&gt;
  &lt;div class=&quot;column nested-column&quot;&gt;
    &lt;a class=&quot;article&quot;&gt;
      &lt;!-- 文章内容 --&gt;
    &lt;/a&gt;
  &lt;/div&gt;

  &lt;div class=&quot;column&quot;&gt;
    &lt;a class=&quot;article&quot;&gt;
      &lt;!-- 文章内容 --&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot;&gt;
      &lt;!-- 文章内容 --&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot;&gt;
      &lt;!-- 文章内容 --&gt;
    &lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre></div>
<p>因为我们想要第一个嵌套列更宽，我们添加一个带有附加样式的名为nested-column的class：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">.nested-column {
  flex: 2;
}
</code></pre></div>
<p>这将使新列的宽度是其它列的两倍。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;main class=&quot;main columns&quot;&gt;
  &lt;section class=&quot;column main-column&quot;&gt;
    &lt;a class=&quot;article first-article&quot; href=&quot;#&quot;&gt;
      &lt;figure class=&quot;article-image is-4by3&quot;&gt;
        &lt;img src=&quot;https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/1366/posts/26611/attachment/image-01.png&quot; alt=&quot;&quot;&gt;
      &lt;/figure&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
          Maecenas non massa sem.
          Etiam finibus odio quis feugiat facilisis.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Proin ornare magna eros.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;

    &lt;div class=&quot;columns&quot;&gt;
      &lt;div class=&quot;column nested-column&quot;&gt;
        &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
          &lt;figure class=&quot;article-image is-16by9&quot;&gt;
            &lt;img src=&quot;https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/1366/posts/26611/attachment/image-02.png&quot; alt=&quot;&quot;&gt;
          &lt;/figure&gt;
          &lt;div class=&quot;article-body&quot;&gt;
            &lt;h2 class=&quot;article-title&quot;&gt;
              Hello World
            &lt;/h2&gt;
            &lt;p class=&quot;article-content&quot;&gt;
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
              Maecenas non massa sem.
              Etiam finibus odio quis feugiat facilisis.
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
              Maecenas non massa sem.
              Etiam finibus odio quis feugiat facilisis.
            &lt;/p&gt;
            &lt;footer class=&quot;article-info&quot;&gt;
              &lt;span&gt;By Joe Smith&lt;/span&gt;
              &lt;span&gt;42 comments&lt;/span&gt;
            &lt;/footer&gt;
          &lt;/div&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class=&quot;column&quot;&gt;
        &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
          &lt;figure class=&quot;article-image is-16by9&quot;&gt;
            &lt;img src=&quot;https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/1366/posts/26611/attachment/image-03.png&quot; alt=&quot;&quot;&gt;
          &lt;/figure&gt;
          &lt;div class=&quot;article-body&quot;&gt;
            &lt;h2 class=&quot;article-title&quot;&gt;
              Hello World
            &lt;/h2&gt;
            &lt;p class=&quot;article-content&quot;&gt;
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
            &lt;/p&gt;
            &lt;footer class=&quot;article-info&quot;&gt;
              &lt;span&gt;By Joe Smith&lt;/span&gt;
              &lt;span&gt;42 comments&lt;/span&gt;
            &lt;/footer&gt;
          &lt;/div&gt;
        &lt;/a&gt;
        &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
          &lt;div class=&quot;article-body&quot;&gt;
            &lt;h2 class=&quot;article-title&quot;&gt;
              Hello World
            &lt;/h2&gt;
            &lt;p class=&quot;article-content&quot;&gt;
              Lorem ipsum dolor sit amet.
            &lt;/p&gt;
            &lt;footer class=&quot;article-info&quot;&gt;
              &lt;span&gt;By Joe Smith&lt;/span&gt;
              &lt;span&gt;42 comments&lt;/span&gt;
            &lt;/footer&gt;
          &lt;/div&gt;
        &lt;/a&gt;
        &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
          &lt;div class=&quot;article-body&quot;&gt;
            &lt;h2 class=&quot;article-title&quot;&gt;
              Hello World
            &lt;/h2&gt;
            &lt;p class=&quot;article-content&quot;&gt;
              Lorem ipsum dolor sit amet feugiat facilisis.
            &lt;/p&gt;
            &lt;footer class=&quot;article-info&quot;&gt;
              &lt;span&gt;By Joe Smith&lt;/span&gt;
              &lt;span&gt;42 comments&lt;/span&gt;
            &lt;/footer&gt;
          &lt;/div&gt;
        &lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;

  &lt;section class=&quot;column&quot;&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;figure class=&quot;article-image is-3by2&quot;&gt;
        &lt;img src=&quot;https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/1366/posts/26611/attachment/image-04.png&quot; alt=&quot;&quot;&gt;
      &lt;/figure&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;/section&gt;
&lt;/main&gt;
</code></pre></div><div class="highlight"><pre><code class="language-text" data-lang="text">html {
  background: mediumseagreen;
  font-family: sans-serif;
  font-size: 14px;
}

a {
  text-decoration: none;
}

div, h2, p, figure {
  margin: 0;
  padding: 0;
}

.main {
  margin: 0 auto;
  max-width: 1040px;
  padding: 20px;
}

.columns {
  display: flex;
}

.column {
  display: flex;
  flex: 1;
  flex-direction: column;
}

.main-column {
  flex: 3;
}

.nested-column {
  flex: 2;
}

.article {
  background: white;
  color: #666;
  display: flex;
  flex: 1;
  flex-direction: column;
  flex-basis: auto;
  margin: 10px;
}

.article-image {
  background: #eee;
  display: block;
  padding-top: 75%;
  position: relative;
  width: 100%;
}

.article-image img {
  display: block;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.article-image.is-3by2 {
  padding-top: 66.6666%;
}

.article-image.is-16by9 {
  padding-top: 56.25%;
}

.article-body {
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: 20px;
}

.article-title {
  color: #333;
  flex-shrink: 0;
  font-size: 1.4em;
  font-weight: bold;
  font-weight: 700;
  line-height: 1.2;
}

.article-content {
  flex: 1;
  margin-top: 5px;
}

.article-info {
  display: flex;
  font-size: 0.85em;
  justify-content: space-between;
  margin-top: 10px;
}
</code></pre></div>
<h3 id="5-给第一篇文章一个水平布局">5. 给第一篇文章一个水平布局</h3>

<p>第一篇文章真的很大。为了优化空间的使用，让我们把它的布局切换成水平的。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">.first-article {
  flex-direction: row;
}

.first-article .article-body {
  flex: 1;
}

.first-article .article-image {
  height: 300px;
  order: 2;
  padding-top: 0;
  width: 400px;
}
</code></pre></div>
<p>这里的order属性是非常有用的，因为它允许我们改变HTML元素的顺序而不影响HTML标记。在标记中article-image实际上出现在article-body的<em>前面</em>，但它表现的好像出现在<em>后面</em>。</p>

<h3 id="6-使布局可响应">6. 使布局可响应</h3>

<p>这些就是我们想看到的，虽然它有点儿扁平。让我们通过响应式来修复它。</p>

<p>Flexbox一个极好的特性是你只需要移除容器上的display: flex规则就可以完全禁用Flexbox，同时保持所有其它的Flexbox属性（例如align-items或者flex）有效。</p>

<p>结果是，你可以通过仅在某个断点上启用Flexbox来触发一个响应式布局。</p>

<p>我们将从.columns和.column选择器中移除display: flex，而不是用一个Media Query包装它们：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">@media screen and (min-width: 800px) {
  .columns,
  .column {
    display: flex;
  }
}
</code></pre></div>
<p>就是这样！在更小的屏幕上，所有的文章都在彼此的上面。超过800px时，它们将会被放置在两列中。</p>

<h3 id="7-添加最后的润色">7. 添加最后的润色</h3>

<p>为使布局在大屏幕上更具吸引力，让我们添加一些CSS微调：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">@media screen and (min-width: 1000px) {
  .first-article {
    flex-direction: row;
  }

  .first-article .article-body {
    flex: 1;
  }

  .first-article .article-image {
    height: 300px;
    order: 2;
    padding-top: 0;
    width: 400px;
  }

  .main-column {
    flex: 3;
  }

  .nested-column {
    flex: 2;
  }
}
</code></pre></div>
<p>第一篇文章的内容是水平放置的，文本在左边，图片在右边。而且，主列现在更宽（75%），嵌套列也是（66%）。这里是最终结果！</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;header class=&quot;header&quot;&gt;
  &lt;h1&gt;The Envato Tuts+ Report&lt;/h1&gt;
  &lt;h2&gt;&lt;a href=&quot;http://webdesign.tutsplus.com/tutorials/how-to-build-a-news-website-layout-with-flexbox--cms-26611&quot;&gt;Read tutorial&lt;/a&gt;&lt;/h2&gt;
&lt;/header&gt;

&lt;main class=&quot;main columns&quot;&gt;
  &lt;section class=&quot;column main-column&quot;&gt;
    &lt;a class=&quot;article first-article&quot; href=&quot;#&quot;&gt;
      &lt;figure class=&quot;article-image is-4by3&quot;&gt;
        &lt;img src=&quot;https://s3-us-west-2.amazonaws.com/s.cdpn.io/210284/image-01-lo.jpg&quot; alt=&quot;&quot;&gt;
      &lt;/figure&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
          Maecenas non massa sem.
          Etiam finibus odio quis feugiat facilisis.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Proin ornare magna eros.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;

    &lt;div class=&quot;columns&quot;&gt;
      &lt;div class=&quot;column nested-column&quot;&gt;
        &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
          &lt;figure class=&quot;article-image is-16by9&quot;&gt;
            &lt;img src=&quot;https://s3-us-west-2.amazonaws.com/s.cdpn.io/210284/image-02-lo.jpg&quot; alt=&quot;&quot;&gt;
          &lt;/figure&gt;
          &lt;div class=&quot;article-body&quot;&gt;
            &lt;h2 class=&quot;article-title&quot;&gt;
              Hello World
            &lt;/h2&gt;
            &lt;p class=&quot;article-content&quot;&gt;
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
              Maecenas non massa sem.
              Etiam finibus odio quis feugiat facilisis.
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              Proin ornare magna eros, eu pellentesque tortor vestibulum ut.
              Maecenas non massa sem.
              Etiam finibus odio quis feugiat facilisis.
            &lt;/p&gt;
            &lt;footer class=&quot;article-info&quot;&gt;
              &lt;span&gt;By Joe Smith&lt;/span&gt;
              &lt;span&gt;42 comments&lt;/span&gt;
            &lt;/footer&gt;
          &lt;/div&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class=&quot;column&quot;&gt;
        &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
          &lt;figure class=&quot;article-image is-16by9&quot;&gt;
            &lt;img src=&quot;https://s3-us-west-2.amazonaws.com/s.cdpn.io/210284/image-03-lo.jpg&quot; alt=&quot;&quot;&gt;
          &lt;/figure&gt;
          &lt;div class=&quot;article-body&quot;&gt;
            &lt;h2 class=&quot;article-title&quot;&gt;
              Hello World
            &lt;/h2&gt;
            &lt;p class=&quot;article-content&quot;&gt;
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
            &lt;/p&gt;
            &lt;footer class=&quot;article-info&quot;&gt;
              &lt;span&gt;By Joe Smith&lt;/span&gt;
              &lt;span&gt;42 comments&lt;/span&gt;
            &lt;/footer&gt;
          &lt;/div&gt;
        &lt;/a&gt;
        &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
          &lt;div class=&quot;article-body&quot;&gt;
            &lt;h2 class=&quot;article-title&quot;&gt;
              Hello World
            &lt;/h2&gt;
            &lt;p class=&quot;article-content&quot;&gt;
              Lorem ipsum dolor sit amet.
            &lt;/p&gt;
            &lt;footer class=&quot;article-info&quot;&gt;
              &lt;span&gt;By Joe Smith&lt;/span&gt;
              &lt;span&gt;42 comments&lt;/span&gt;
            &lt;/footer&gt;
          &lt;/div&gt;
        &lt;/a&gt;
        &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
          &lt;div class=&quot;article-body&quot;&gt;
            &lt;h2 class=&quot;article-title&quot;&gt;
              Hello World
            &lt;/h2&gt;
            &lt;p class=&quot;article-content&quot;&gt;
              Lorem ipsum dolor sit amet feugiat facilisis.
            &lt;/p&gt;
            &lt;footer class=&quot;article-info&quot;&gt;
              &lt;span&gt;By Joe Smith&lt;/span&gt;
              &lt;span&gt;42 comments&lt;/span&gt;
            &lt;/footer&gt;
          &lt;/div&gt;
        &lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;

  &lt;section class=&quot;column&quot;&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;figure class=&quot;article-image is-3by2&quot;&gt;
        &lt;img src=&quot;https://s3-us-west-2.amazonaws.com/s.cdpn.io/210284/image-04-lo.jpg&quot; alt=&quot;&quot;&gt;
      &lt;/figure&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
    &lt;a class=&quot;article&quot; href=&quot;#&quot;&gt;
      &lt;div class=&quot;article-body&quot;&gt;
        &lt;h2 class=&quot;article-title&quot;&gt;
          Hello World
        &lt;/h2&gt;
        &lt;p class=&quot;article-content&quot;&gt;
          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        &lt;/p&gt;
        &lt;footer class=&quot;article-info&quot;&gt;
          &lt;span&gt;By Joe Smith&lt;/span&gt;
          &lt;span&gt;42 comments&lt;/span&gt;
        &lt;/footer&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;/section&gt;
&lt;/main&gt;
</code></pre></div><div class="highlight"><pre><code class="language-text" data-lang="text">@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700);
@import url(https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css);

html {
  background: mediumseagreen;
  font-size: 14px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  min-width: 300px;
  overflow-x: hidden;
  overflow-y: scroll;
  text-rendering: optimizeLegibility;
}

body {
  color: #666;
  font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica&quot;, &quot;Arial&quot;, sans-serif;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.4;
}

a {
  text-decoration: none;
  transition: all 0.3s cubic-bezier(.25, .8, .25, 1);
}

div, h2, p, figure {
  margin: 0;
  padding: 0;
}

.header {
  color: white;
  padding: 40px 0 20px;
  text-align: center;
}

.header h1 {
  font-size: 40px;
  font-weight: bold;
}

.header h2 a {
  border-bottom: 1px solid rgba(255, 255, 255, 0.5);
  color: white;
  font-size: 20px;
  opacity: 0.5;
}

.header h2 a:hover {
  border-bottom-color: white;
  opacity: 1;
}

.main {
  margin: 0 auto;
  max-width: 1040px;
  padding: 10px;
}

.column {
  flex: 1;
  flex-direction: column;
}

.article {
  background: white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  color: #666;
  display: flex;
  flex: 1;
  flex-direction: column;
  flex-basis: auto;
  margin: 10px;
}

.article:hover,
.article:focus {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  color: #444;
}

.article-image {
  background: #eee;
  display: block;
  padding-top: 75%;
  position: relative;
  width: 100%;
}

.article-image img {
  display: block;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.article-image.is-3by2 {
  padding-top: 66.6666%;
}

.article-image.is-16by9 {
  padding-top: 56.25%;
}

.article-body {
  display: flex;
  flex: 1;
  flex-direction: column;
  padding: 20px;
}

.article-title {
  color: #333;
  flex-shrink: 0;
  font-size: 1.4em;
  font-weight: 700;
  line-height: 1.2;
}

.article-content {
  flex: 1;
  margin-top: 5px;
}

.article-info {
  display: flex;
  font-size: 0.85em;
  justify-content: space-between;
  margin-top: 10px;
}

@media screen and (min-width: 800px) {
  .columns,
  .column {
    display: flex;
  }
}

@media screen and (min-width: 1000px) {
  .first-article {
    flex-direction: row;
  }

  .first-article .article-body {
    flex: 1;
  }

  .first-article .article-image {
    height: 300px;
    order: 2;
    padding-top: 0;
    width: 400px;
  }

  .main-column {
    flex: 3;
  }

  .nested-column {
    flex: 2;
  }
}
</code></pre></div>
<h3 id="总结">总结</h3>

<p>我希望我已经向你展示在投入和开始使用Flexbox前你不需要理解它的每个方面！响应式新闻布局是一个真正有用的模式。拆解它，把玩它，让我们知道你是如何进展的！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用响应式设计改造电子书网站]]></title>
    <link href="http://codemany.com/blog/rebuild-ebook-website-with-responsive-design/"/>
    <updated>2014-06-19T11:55:16+08:00</updated>
    <id>http://codemany.com/blog/rebuild-ebook-website-with-responsive-design</id>
    <content type="html"><![CDATA[<p>因为要在其它设备上测试响应式设计的效果，需要先对开发环境做些简单的配置。</p>

<p>启动服务器时需加上本机的IP地址和访问端口（通常是80）：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">rails s -b 192.168.0.100 -p 80
</code></pre></div>
<p>配置Windows系统的内置防火墙，开启80端口以供其它设备访问：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">netsh advfirewall firewall add rule name=&quot;Open Port 80&quot; dir=in action=allow protocol=TCP localport=80
</code></pre></div>
<p>查看和删除防火墙规则的命令：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">netsh advfirewall firewall delete rule name=&quot;Open Port 80&quot; protocol=TCP localport=80
netsh advfirewall firewall show rule name=&quot;Open Port 80&quot;
</code></pre></div>
<p>响应式设计的优缺点就不多说了，已经有太多的文章讲过这些。这里主要讲如何使用响应式设计改造现有的电子书网站。</p>

<p>首先，需要使用viewport标签设置屏幕宽度为设备宽度，使网站内容可以适应响应式变化。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;
</code></pre></div>
<p>因为这是一个非常简陋，并且以内容为主的网站。在上述设置后几乎不用再修改就能适应不同屏幕分辨率下的信息呈现，除了导航栏因为导航选项较多，在手机等设备上打开会出现后面部分选项被挤下去。抽屉样式的导航是解决这个问题的好方法。在网上找到一个横向导航栏切换成抽屉式导航栏的库<a href="http://srobbin.github.io/jquery-pageslide/">jQuery PageSlide</a>，它使用图片实现三明治图标，所以对它做了些修改，用标签来实现：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;ul class=&quot;burger&quot;&gt;
  &lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre></div>
<p>对应的CSS代码如下：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">.burger {
  li {
    height: 4px;
    width: 30px;
    background: #000;
    border-radius: 3px;
    margin: 5px 0;
  }
}
</code></pre></div>
<p>要实现响应式的话，只要让它在正常情况下隐藏，屏幕变小时显现即可：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">.burger {
  display: none;
}

@media screen and (max-width: 480px) {
  .burger {
    display: block;
  }
}
</code></pre></div>
<p>还需要在application.html.erb的底部开启点击三明治图标时的响应事件：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;%= javascript_include_tag &quot;jquery.pageslide&quot;, &quot;data-turbolinks-track&quot; =&gt; true %&gt;
&lt;script&gt;
  $(&quot;.burger&quot;).pageslide();
&lt;/script&gt;
</code></pre></div>
<p>导航条的CSS也需要做些修改，使之能在屏幕变小时转换成抽屉式导航条：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">@media screen and (max-width: 480px) {
  nav ul {
    display: none;
  }
}
</code></pre></div>
<p>至此，网站的响应式改造就基本完成了。如果你觉得对你有所帮助，请将此文发送给你的朋友，如果你还有更好的建议也可以在下面的评论中分享你的经验。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用HTML5创建电子书网站]]></title>
    <link href="http://codemany.com/blog/create-ebook-website-with-html5/"/>
    <updated>2013-05-24T15:04:32+08:00</updated>
    <id>http://codemany.com/blog/create-ebook-website-with-html5</id>
    <content type="html"><![CDATA[<p>在项目开始前，先要了解下HTML5规范包含的一些有用的新的语义标签，用于提供HTML页面的各个区域或部分的意义，例如页眉、页脚、导航栏、边栏等等。在以前的HTML版本中，这些部分通常使用<code>&lt;div&gt;</code>标签来创建，通过id或class属性来区分。</p>

<p>HTML5引入的主要标签包括：</p>

<table><thead>
<tr>
<th>标签</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>header</td>
<td>此标签用于定义页面某些部分的页眉，可以是整个页面、article标签或section标签</td>
</tr>
<tr>
<td>nav</td>
<td>这是页面上主要导航链接的容器。此标签不应用于所有链接组，而是应仅用于主要导航块。如果你有一个footer标签包含导航链接，不需要将这些链接封装在nav标签中，因为footer标签将可以独自包括这些链接</td>
</tr>
<tr>
<td>footer</td>
<td>此标签定义页面的某些部分的页脚。页脚不一定是在页面、文章或区域的结尾，但是它通常是在那个位置</td>
</tr>
<tr>
<td>article</td>
<td>定义文档或页面上的独立区块，例如新闻、杂志、博文或评论</td>
</tr>
<tr>
<td>section</td>
<td>此标签表示文档的一部分，例如，文章或教程的一章或一节。该标签通常具有一个页眉，虽然严格来说是不需要的</td>
</tr>
<tr>
<td>aside</td>
<td>用于标记边栏或一些将认为与其周围内容有点无关的内容。此项的一个例子就是广告块</td>
</tr>
<tr>
<td>hgroup</td>
<td>在某些情况下，页面、文章或区域可能需要多个标题，例如，你有一个标题和一个副标题。你可以在hgroup标签中封装这些标题，使用h1标签表示主标题，h2标签表示副标题</td>
</tr>
</tbody></table>

<p>这些标签的基础结构遵循以下大纲：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">header
  hgroup
nav
article
  header
  section
    header
footer
</code></pre></div>
<p><img src="/uploads/html5-ebook-layout.png" title="html5-ebook-layout" ></p>

<p>上面是网站的布局设计，主要有header、navigation、footer和main四个区块，实现代码如下：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;!-- HTML5的DOCTYPE声明模式，它可以向后兼容，
     再也不用记忆XHTML中复杂的DOCTYPE了！--&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;!-- 指定文档字符编码的写法，该写法在所有浏览器上都有效。--&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;title&gt;HTML5 Demo&lt;/title&gt;
  &lt;!-- link和script标签也无需提供type属性（No More Types for Scripts and Links），
       因为CSS和JavaScript是目前惟一受支持的样式表和脚本类型 --&gt;
  &lt;link href=&quot;style.css&quot; rel=&quot;stylesheet&quot; /&gt;
  &lt;!-- 因为IE浏览器（甚至版本8）不支持新的HTML5标签，处理此问题的一个已知方法是使用
       JavaScript函数document.createElement()为每个标记创建虚拟标签。html5.js文件将
       为每个新的HTML标签进行此操作 --&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;http://html5shiv.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;header&gt;
    &lt;hgroup&gt;
      &lt;h1&gt;Logo&lt;/h1&gt;
      &lt;h2&gt;Here is the slogan&lt;/h2&gt;
    &lt;/hgroup&gt;
  &lt;/header&gt;

  &lt;nav&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Business&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;History&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Religion&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Health&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Science&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/nav&gt;

  &lt;!-- main block begin --&gt;
  &lt;!-- main block end --&gt;

  &lt;footer&gt;&amp;copy; 2013&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre></div>
<p>对应的CSS文件内容：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">* {
  font-family: Lucida Sans, Arial, Helvetica, sans-serif;
}

body {
  width: 768px;
  margin: 0px auto;
}

header h1 {
  font-size: 36px;
  margin: 0px;
}

header h2 {
  font-size: 18px;
  margin: 0px;
  color: #888;
  font-style: italic;
}

nav ul {
  list-style: none;
  margin: 0;
  padding: 0;
  width: 100%;
}

nav ul:after {
  content: &quot;\0020&quot;;
  display: block;
  height: 0;
  clear: both;
  visibility: hidden;
}

nav ul  li {
  float: left;
  width: 16.66%;
  text-align: center;
}

nav ul li a {
  display: block;
  background: #000;
  color: #fff;
  font-weight: bold;
  padding: 10px;
  border-right: 1px solid #fff;
  text-decoration: none;
}

nav ul li a:hover {
  background: #333;
}

footer {
  border-top: 1px solid #ccc;
  text-align: center;
  font-size: 12px;
  color: #888;
  margin-top: 24px;
}
</code></pre></div>
<p>整个网站主要有这么几个页面：首页、分类页、书目页、内容页，这些页面共用一个布局，主要区别在于main区块的不同。首页、分类页和书目页相似，都是由列表组成。</p>

<p>首页中有多个无序列表，列出网站中最新、最多被访问、最多被分享等的图书：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;h3&gt;Latest&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Most Viewed&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Most Shared&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
&lt;/ul&gt;
</code></pre></div>
<p>分类页是单个无序列表，列出当前被访问分类下所有的图书：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;h3&gt;Business&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
  &lt;li&gt;Book&#39;s title&lt;/li&gt;
&lt;/ul&gt;
</code></pre></div>
<p>书目页是单个有序列表，列出某本书所有的章节：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;h3&gt;Book&#39;s title&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Chapter 1&lt;/li&gt;
  &lt;li&gt;Chapter 2&lt;/li&gt;
  &lt;li&gt;Chapter 3&lt;/li&gt;
&lt;/ol&gt;
</code></pre></div>
<p>内容页，顾名思义就是显示具体内容的页面。文章内容用<code>&lt;article&gt;</code>标签表示，其中的标题、作者、发表时间等信息被包含在<code>&lt;header&gt;</code>标签中。主要代码如下：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;article&gt;
  &lt;header&gt;
    &lt;h1&gt;&lt;a href=&quot;#&quot;&gt;Chapter 1&lt;/a&gt;&lt;/h1&gt;
    &lt;p&gt;By &lt;a href=&quot;#&quot;&gt;author&lt;/a&gt; on &lt;time&gt;2013-05-24 14:54&lt;/time&gt;&lt;/p&gt;
  &lt;/header&gt;
  &lt;p&gt;
  Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed
  diam nonummy nibh euismod tincidunt ut laoreet dolore magna
  aliquam erat volutpat. Ut wisi enim ad minim veniam, quis
  nostrud exerci tation ullamcorper suscipit lobortis nisl ut
  aliquip ex ea commodo consequat.
  &lt;/p&gt;
  &lt;section&gt;
    &lt;header&gt;
      &lt;h1&gt;Section heading&lt;/h1&gt;
    &lt;/header&gt;
    &lt;p&gt;
    Duis autem vel eum iriure dolor in hendrerit in vulputate velit
    esse molestie consequat, vel illum dolore eu feugiat nulla
    facilisis at vero eros et accumsan et iusto odio dignissim qui
    blandit praesent luptatum zzril delenit augue duis dolore te
    feugait nulla facilisi.
    &lt;/p&gt;
  &lt;/section&gt;
  &lt;footer&gt;
    &lt;a href=&quot;#&quot;&gt;Back&lt;/a&gt;
    &lt;a href=&quot;#&quot;&gt;TOC&lt;/a&gt;
    &lt;a href=&quot;#&quot;&gt;Forward&lt;/a&gt;
  &lt;/footer&gt;
&lt;/article&gt;
</code></pre></div>
<p>在上面的代码里，<code>&lt;header&gt;</code>标签中我们仅使用了<code>&lt;h1&gt;</code>标签，这是因为HTML5会根据上下文计算出heading元素的层级，因此会有：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;body&gt;&lt;h1&gt;  &lt;!-- 相当于heading 1 --&gt;
&lt;body&gt;&lt;section&gt;&lt;h1&gt;  &lt;!-- 相当于heading 2 --&gt;
&lt;body&gt;&lt;section&gt;&lt;section&gt;&lt;h1&gt;  &lt;!-- 相当于heading 3 --&gt;
</code></pre></div>
<p>最后顺便说一句，HTML5支持已存在的各种写法：xhtml1.0、xhtml1.1和html4.0，但建议使用xhtml1.1规范，即：</p>

<ol>
<li>所有标签/属性都使用小写字母;</li>
<li>所有属性值都必须加引号;</li>
<li>使用闭合标签。</li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS命名规范]]></title>
    <link href="http://codemany.com/blog/css-naming-conventions/"/>
    <updated>2012-07-28T18:27:06+08:00</updated>
    <id>http://codemany.com/blog/css-naming-conventions</id>
    <content type="html"><![CDATA[<p>收集了网上的一些CSS命名规范，根据自己的理解和需求整理了一遍。</p>

<h3 id="布局（layout）">布局（layout）</h3>

<ul>
<li>container 就是将页面中的所有元素包在一起的部分</li>
<li>header 页面的头部区域，包含站点的logo和一些其他元素</li>
<li>navbar 横向导航栏，最典型的网页元素</li>
<li>breadcrumbs 即页面所处位置的导航提示</li>
<li>content 是站点的主要区域</li>
<li>sidebar</li>
<li>footer</li>
</ul>

<h3 id="头部（header）">头部（header）</h3>

<ul>
<li>logo</li>
<li>slogan</li>
</ul>

<h3 id="导航栏（navbar）">导航栏（navbar）</h3>

<ul>
<li>mainnav</li>
<li>subnav</li>
<li>topnav</li>
</ul>

<h3 id="侧边栏（sidebar）">侧边栏（sidebar）</h3>

<ul>
<li>menu 包含一般的链接。sidebar中可以包含多个menu</li>
</ul>

<h3 id="常用">常用</h3>

<ul>
<li>userbar 登录注册条</li>
<li>copyright</li>
<li>banner</li>
<li>feature</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用CSS创建可伸缩的面包屑]]></title>
    <link href="http://codemany.com/blog/create-scalable-breadcrumbs-using-css/"/>
    <updated>2010-03-16T15:41:23+08:00</updated>
    <id>http://codemany.com/blog/create-scalable-breadcrumbs-using-css</id>
    <content type="html"><![CDATA[<p>面包屑是一个用来描述层次性链接的术语，告诉用户当前处于网站的什么位置。简单的来说，就是显示从主页到当前页面路径的导航模式。其最简单的形式通常是这样的:</p>

<p><img src="/uploads/css-breadcrumbs.png" title="css-breadcrumbs" ></p>

<p>有许多种不同的方法来实现面包屑。在这里，我们仅使用无序列表和基本的CSS样式。</p>

<p>以下是HTML代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;ul id=&quot;breadcrumbs&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Home&lt;/a&gt; &amp;gt; &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Main&lt;/a&gt; &amp;gt; &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Sub&lt;/a&gt; &amp;gt; &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Sub sub&lt;/a&gt; &amp;gt; &lt;/li&gt;
  &lt;li&gt;Current page&lt;/li&gt;
&lt;/ul&gt;
</code></pre></div>
<p>在上述的例子中，除了用户当前所在的页面——即最后一个条目外，其它所有的条目都是链接，指向路径中的某个页面。</p>

<p>如果你试着在浏览器中查看上面的这个例子，你会发现它只是一个简单的无序列表。必须给它添加一些CSS样式才能符合我们的预期。</p>

<p>下面是CSS代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">ul, li {
  list-style-type: none;
  padding: 0;
  margin: 0;
}
</code></pre></div>
<p>首先我们要重置基本列表样式的行为：把默认的圆形条目符号隐藏掉，并移除缩进。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">#breadcrumbs {
  height: 2.3em;
}

#breadcrumbs li {
  float: left;
  line-height: 2.3em;
  padding-left: .25em;
  color: #777;
}
</code></pre></div>
<p>然后，给面包屑设置一个具体的高度。因为所有的碎屑需要保持在同一水平线，所以我们把每个li元素设置成float: left。为保证条目的垂直居中对齐，需要把条目的行高设置成和列表相等。碎屑之间需要留些空间，不然的话就会太拥挤，因此我们给每个碎屑左边加上0.25em的填充。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">#breadcrumbs li a:link, #breadcrumbs li a:visited {
  text-decoration: none;
  color: #777;
}

#breadcrumbs li a:hover, #breadcrumbs li a:focus {
  color: #dd2c0d;
}
</code></pre></div>
<p>最后，给文本链接添加样式，使用text-decoration: none隐藏掉下划线。</p>
]]></content>
  </entry>
  
</feed>
