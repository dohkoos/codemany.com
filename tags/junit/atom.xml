<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: JUnit | 乐者为王]]></title>
  <link href="http://codemany.com/tags/junit/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-27T20:47:47+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Eclipse中Ant结合JUnit自动测试的问题（2）]]></title>
    <link href="http://codemany.com/blog/2005/02/22/problem-running-junit-tests-with-ant-in-eclipse-part2/"/>
    <updated>2005-02-22T22:02:00+08:00</updated>
    <id>http://codemany.com/blog/2005/02/22/problem-running-junit-tests-with-ant-in-eclipse-part2</id>
    <content type="html"><![CDATA[<p>Eclipse 3.0.3 + Ant 1.6.2 + JUnit 3.8.1</p>

<p>构建配置文件build.xml：</p>

<p>```
<target name="junit"></p>

<pre><code>&lt;junit&gt;
    &lt;formatter type="xml" /&gt;
    &lt;batchtest todir="${report.dir}"&gt;
        &lt;fileset dir="${classes.dir}" includes="**/*Test.class" /&gt;
    &lt;/batchtest&gt;
&lt;/junit&gt;
</code></pre>

<p></target>
```</p>

<p>执行任务的时候出现了异常：</p>

<p>```
java.lang.ClassNotFoundException: com.example.lesson.HelloTest</p>

<pre><code>at java.net.URLClassLoader$1.run(Unknown Source)
at java.security.AccessController.doPrivileged(Native Method)
at java.net.URLClassLoader.findClass(Unknown Source)
at java.lang.ClassLoader.loadClass(Unknown Source)
at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
at java.lang.ClassLoader.loadClass(Unknown Source)
at java.lang.ClassLoader.loadClassInternal(Unknown Source)
at java.lang.Class.forName0(Native Method)
at java.lang.Class.forName(Unknown Source)
</code></pre>

<p>```</p>

<p>网上搜索没有找到答案，到Ant官网上发现 <a href="http://ant.apache.org/faq.html#delegating-classloader">http://ant.apache.org/faq.html#delegating-classloader</a> 这篇文章讲了该问题。只要在junit任务里加入classpath指出要加载类的路径就可以了。修改后的build.xml文件如下：</p>

<p>```
<target name="junit"></p>

<pre><code>&lt;junit&gt;
    &lt;classpath&gt;
        &lt;pathelement location="${classes.dir}" /&gt;
    &lt;/classpath&gt;
    &lt;formatter type="xml" /&gt;
    &lt;batchtest todir="${report.dir}"&gt;
        &lt;fileset dir="${classes.dir}" includes="**/*Test.class" /&gt;
    &lt;/batchtest&gt;
&lt;/junit&gt;
</code></pre>

<p></target>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse中Ant结合JUnit自动测试的问题（1）]]></title>
    <link href="http://codemany.com/blog/2005/02/05/problem-running-junit-tests-with-ant-in-eclipse-part1/"/>
    <updated>2005-02-05T18:33:00+08:00</updated>
    <id>http://codemany.com/blog/2005/02/05/problem-running-junit-tests-with-ant-in-eclipse-part1</id>
    <content type="html"><![CDATA[<p>Eclipse 3.0.3 + Ant 1.6.2 + JUnit 3.8.1</p>

<p>构建配置文件build.xml：</p>

<p>```
<target name="junit"></p>

<pre><code>&lt;junit&gt;
    &lt;formatter type="xml" /&gt;
    &lt;batchtest todir="${report.dir}"&gt;
        &lt;fileset dir="${classes.dir}" includes="**/*Test.class" /&gt;
    &lt;/batchtest&gt;
&lt;/junit&gt;
</code></pre>

<p></target>
```</p>

<p>在执行时出现了以下问题：</p>

<p>```
BUILD FAILED: build.xml:44: Could not create task or type of type: junit.</p>

<p>Ant could not find the task or a class this task relies upon.</p>

<p>This is common and has a number of causes; the usual
solutions are to read the manual pages then download and
install needed JAR files, or fix the build file:
 - You have misspelt 'junit'.
   Fix: check your spelling.
 - The task needs an external JAR file to execute</p>

<pre><code> and this is not found at the right place in the classpath.
</code></pre>

<p>   Fix: check the documentation for dependencies.
   Fix: declare the task.
 - The task is an Ant optional task and the JAR file and/or libraries</p>

<pre><code> implementing the functionality were not found at the time you
 yourself built your installation of Ant from the Ant sources.
</code></pre>

<p>   Fix: Look in the ANT_HOME/lib for the 'ant-' JAR corresponding to the</p>

<pre><code> task and make sure it contains more than merely a META-INF/MANIFEST.MF.
 If all it contains is the manifest, then rebuild Ant with the needed
 libraries present in ${ant.home}/lib/optional/, or alternatively,
 download a pre-built release version from apache.org
</code></pre>

<ul>
<li>The build file was written for a later version of Ant
Fix: upgrade to at least the latest release version of Ant</li>
<li>The task is not an Ant core or optional task
  and needs to be declared using <taskdef>.</li>
<li>You are attempting to use a task defined using
 <presetdef> or <macrodef> but have spelt wrong or not
defined it at the point of use</li>
</ul>


<p>Remember that for JAR files to be visible to Ant tasks implemented
in ANT_HOME/lib, the files must be in the same directory or on the
classpath</p>

<p>Please neither file bug reports on this problem, nor email the
Ant mailing lists, until all of these causes have been explored,
as this is not an Ant bug.
```</p>

<p>产生上面错误的原因是Ant在执行junit任务时没有找到junit.jar这个文件。将junit.jar放到ANT_HOME/lib目录下，再次执行，这下该OK了吧！</p>

<p>有没有搞错，还产生同样的错误！到命令行下试试。打入命令ant junit，然后出现：</p>

<p>```
Buildfile: build.xml</p>

<p>junit:</p>

<p>BUILD SUCCESSFUL
Total time: 1 second
```</p>

<p>怎么会这样？命令行下可以，Eclipse中就不行了？</p>

<p>到Preferences -> Ant -> Runtime -> Classpath下设置一下junit.jar的路径，再次执行junit任务，终于在Console视图中看到了成功的消息。</p>
]]></content>
  </entry>
  
</feed>
