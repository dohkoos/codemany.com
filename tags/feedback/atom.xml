<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: feedback | 乐者为王]]></title>
  <link href="http://codemany.com/tags/feedback/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2017-07-25T14:46:03+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[改写Rails 2.x generator到Rails 3.x时的一些记录]]></title>
    <link href="http://codemany.com/blog/notes-rewrite-generator-from-rails-2x-to-rails-3x/"/>
    <updated>2012-05-03T07:13:58+08:00</updated>
    <id>http://codemany.com/blog/notes-rewrite-generator-from-rails-2x-to-rails-3x</id>
    <content type="html"><![CDATA[<p>因为有个基于Rails 2.x的项目用到了<a href="https://github.com/jsboulanger/feedback">feedback</a>插件，在把项目迁移到Rails 3.x版本后，需要让feedback也支持Rails 3.x。但是原作者早已不再更新该插件，所以只能自己动手。花了两天时间查找资料，修改代码，终于完成。</p>

<p>Rails 3.x中生成generator可用下面的命令：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">rails g generator feedback_form
      create  lib/generators/feedback_form
      create  lib/generators/feedback_form/feedback_form_generator.rb
      create  lib/generators/feedback_form/USAGE
      create  lib/generators/feedback_form/templates
</code></pre></div><div class="highlight"><pre><code class="language-text" data-lang="text">class InitializerGenerator &lt; Rails::Generators::NamedBase
  source_root File.expand_path(&quot;../templates&quot;, __FILE__)
end
</code></pre></div>
<p>生成基类也从Rails::Generators::Base变成了Rails::Generators::NamedBase。它们的区别是Rails::Generators::NamedBase期望至少一个参数。</p>

<p>USAGE文件里的内容是输入-h选项时显示的文档：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">rails generate feedback_form --help
Usage:
  rails generate feedback_form NAME [options]
</code></pre></div>
<p>Rails 2.x中的manifest可以删除了，因为在3.x的generator中每个public方法在生成过程中会被自动调用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Rails应用添加feedback功能]]></title>
    <link href="http://codemany.com/blog/add-feedback-for-rails-application/"/>
    <updated>2011-01-05T21:44:39+08:00</updated>
    <id>http://codemany.com/blog/add-feedback-for-rails-application</id>
    <content type="html"><![CDATA[<p>首先，将Rails中的Prototype替换为jQuery。接着安装<a href="https://github.com/jsboulanger/feedback">feedback</a>插件：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">script/plugin install git://github.com/jsboulanger/feedback.git
</code></pre></div>
<p>生成代码，由于我们用jQuery替换了Prototype，所以要在后面加上--jquery选项：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">script/generate feedback_form --jquery
</code></pre></div>
<p>在app/views/layouts/application.html.erb中添加：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;%= javascript_include_tag :defaults %&gt;
</code></pre></div>
<p>在要添加feedback的页面中加上以下代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;%= feedback_tab(:position =&gt; &#39;top&#39;) %&gt;
</code></pre></div>
<p>然后修改app/models/feedback_mailer.rb中的设置：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">def feedback(feedback)
  @recipients = &#39;webmaster@example.com&#39;
  @from = &#39;noreply@example.com&#39;
  @subject = &quot;[Feedback for example.com] #{feedback.subject}&quot;
</code></pre></div>
<p>这样feedback功能就加上了。</p>
]]></content>
  </entry>
  
</feed>
