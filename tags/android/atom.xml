<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Android | 乐者为王]]></title>
  <link href="http://codemany.com/tags/android/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-09-20T14:13:51+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[扫描ISBN条码实现藏书管理]]></title>
    <link href="http://codemany.com/blog/2013/04/25/manage-books-by-scanning-isbn-barcode/"/>
    <updated>2013-04-25T12:17:14+08:00</updated>
    <id>http://codemany.com/blog/2013/04/25/manage-books-by-scanning-isbn-barcode</id>
    <content type="html"><![CDATA[<p>每个程序猿家里都有一堆技术书籍，偶也不例外，因此想写个Android应用来管理自己的藏书以及想买的书籍。在网上找到marshal的<a href="http://marshal.easymorse.com/archives/2745">识别图书ISBN号并输出查询结果的示例</a>和<a href="http://marshal.easymorse.com/archives/2756">完善图书查询原型，增加收藏夹功能</a>两篇文章，写的非常不错，还提供源代码。下载代码研究后发现已基本具备了想要的功能，决定在它的基础上做些修改供自己使用。</p>

<p>把原来uses-sdk的minSdkVersion改成了9，增加android:targetSdkVersion="17"。然后使用手机测试程序时发现，在连接网络时后台会抛出了android.os.NetworkOnMainThreadException异常，并且应用崩溃打不开。通过查阅相关资料了解到，自从Android 2.3之后，系统增加了一个类StrictMode。这个类对网络的访问方式进行了一定的改变。官方文档给出了这个类设置的目的：</p>

<blockquote><p>StrictMode is a developer tool which detects things you might be doing by accident and brings them to your attention so you can fix them.</p>

<p>StrictMode is most commonly used to catch accidental disk or network access on the application's main thread, where UI operations are received and animations take place. Keeping disk and network operations off the main thread makes for much smoother, more responsive applications. By keeping your application's main thread responsive, you also prevent ANR dialogs from being shown to users.</p>

<p>Note that even though an Android device's disk is often on flash memory, many devices run a filesystem on top of that memory with very limited concurrency. It's often the case that almost all disk accesses are fast, but may in individual cases be dramatically slower when certain I/O is happening in the background from other processes. If possible, it's best to assume that such things are not fast.</p></blockquote>

<p>因为marshal把访问网络的代码直接放到UI线程中，造成和主线程的首要工作——UI交互——相矛盾。解决这类问题很容易，把访问网络的代码放到AsyncTask中就行了。官方有个<a href="http://developer.android.com/training/basics/network-ops/index.html">NetworkUsage</a>例子是个不错的参考。</p>

<p>接着发现豆瓣API查询返回的是500错误，在浏览器上访问却又正常，后来给HttpClient加上Agent头就没问题了，不知道是不是期间豆瓣的API在实现上作了改变。</p>

<p><code>
HttpClient client = new DefaultHttpClient();
String agent = System.getProperty("http.agent");
client.getParams().setParameter(CoreProtocolPNames.USER_AGENT, agent);
</code></p>

<p>解析豆瓣XML查询结果的代码：</p>

<p>```
XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
factory.setNamespaceAware(true);
XmlPullParser parser = factory.newPullParser();
parser.setInput(inputStream, "utf-8");
Book book = new Book();</p>

<p>int eventType = parser.getEventType();
while (eventType != XmlPullParser.END_DOCUMENT) {</p>

<pre><code>switch (eventType) {
case XmlPullParser.START_TAG:
    if ("link".equals(parser.getName())
            &amp;&amp; "image".equals(parser.getAttributeValue(null, "rel"))) {
        book.setImageUrl(parser.getAttributeValue(null, "href"));
        eventType = parser.next();
    } else if ("summary".equals(parser.getName())) {
        book.setSummary(parser.nextText());
    } else if ("attribute".equals(parser.getName())) {
        String name = parser.getAttributeValue(null, "name");
        if ("title".equals(name)) {
            book.setTitle(parser.nextText());
        } else if ("author".equals(name)) {
            book.setAuthor(parser.nextText());
        } else if ("isbn10".equals(name)) {
            book.setIsbn10(parser.nextText());
        } else if ("isbn13".equals(name)) {
            book.setIsbn13(parser.nextText());
        } else if ("publisher".equals(name)) {  
            book.setPublisher(parser.getText());
        }                   
    }
    break;
case XmlPullParser.END_TAG:
    break;
}
eventType = parser.next();
</code></pre>

<p>}
```</p>

<p>然后，然后就是结果页面不显示图书信息。想要找到原因，肿么办？看来要调试WebView了！<a href="http://developer.android.com/guide/webapps/debugging.html">http://developer.android.com/guide/webapps/debugging.html</a> 告诉了我们如何调试。</p>

<p>首先在WebView上设置setWebChromeClient方法：</p>

<p>```
webView.setWebChromeClient(new WebChromeClient() {</p>

<pre><code>public void onConsoleMessage(String message,
        int lineNumber, String sourceID) {
    Log.d(TAG, message + " -- From line "
            + lineNumber + " of " + sourceID);
}
</code></pre>

<p>});
```</p>

<p>然后在JavaScript脚本中使用以下方法就可以在logcat中看到调试信息了。</p>

<p><code>
console.log(String)
console.info(String)
console.warn(String)
console.error(String)
</code></p>

<p>重新运行程序，果然在logcat中看到报如下错误：</p>

<p><code>
Uncaught TypeError: Object [object Object] has no method...
</code></p>

<p>搜索后在Stack Overflow找到了<a href="http://stackoverflow.com/questions/14031635/android-4-2-1-webview-and-javascript-interface-breaks">问题的答案</a>（Stack Overflow真的非常不错，问题的回答都非常详尽）。<a href="http://developer.android.com/guide/webapps/webview.html#BindingJavaScript">http://developer.android.com/guide/webapps/webview.html#BindingJavaScript</a> 是官方文档的解释。</p>

<p>解决方法就是在要被JavaScript调用的方法上加@JavascriptInterface注解：</p>

<p>```
public class Book {</p>

<pre><code>@JavascriptInterface
public String getAuthor() {
    return author;
}

public void setAuthor(String author) {
    if (this.author != null) {
        this.author += ", " + author;
    } else {
        this.author = author;
    }
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用fastboot给Galaxy Nexus刷官方ROM]]></title>
    <link href="http://codemany.com/blog/2012/05/16/flash-official-rom-to-galaxy-nexus-with-fastboot/"/>
    <updated>2012-05-16T06:59:56+08:00</updated>
    <id>http://codemany.com/blog/2012/05/16/flash-official-rom-to-galaxy-nexus-with-fastboot</id>
    <content type="html"><![CDATA[<p>在刷机前先解释一些基本概念：</p>

<ul>
<li>root - 系统管理员权限</li>
<li>bootloader - 在OS运行前执行的代码，相当于电脑上的BIOS</li>
<li>解锁 - 就是解锁bootloader。解锁之后才可以刷ROM和获取ROOT权限</li>
<li>recovery - 执行底层操作的界面，相当于纯DOS界面</li>
<li>fastboot - 是比recovery更底层的操作界面

<blockquote><p>fastboot is a special diagnostic and engineering protocol that you can boot your Android device into.</p></blockquote></li>
</ul>


<p>分区解释：</p>

<ul>
<li>system：系统分区，我们刷ROM一般就是刷的这个分区</li>
<li>userdata：数据分区</li>
<li>cache：缓存分区</li>
<li>recovery：恢复分区</li>
<li>boot：存放内核和ramdisk的分区</li>
<li>hboot: 这个是SPL所在的分区，很重要。也是fastboot所在的分区，刷错就真的变砖了（所以一般不轻易刷这个）</li>
<li>splash1：这个就是开机第一屏幕了</li>
<li>radio：这个不是什么收音机，而是指无线通信模块，俗称基带（radio最初的意思是无线电通讯）</li>
</ul>


<p>刷机步骤：</p>

<p>1、备份好所有重要信息和数据；</p>

<p>2、安装adb驱动（或者在机器进入fastboot模式后安装也行）</p>

<p>3、下载官方镜像，解压缩。成功解压缩后应该会得到五个文件：</p>

<p><code>
flash-all.sh
flash-base.sh
radio-maguro-i9250xxla02.img
bootloader-maguro-primela03.img
image-yakju-imm76i.zip
</code></p>

<p>4、下载Galaxy-Nexus-fastboot-v2.0.zip，解压缩。将官方固件copy到目录下重命名。规则如下：</p>

<p><code>
刷基带请将radio-{version}.img重命名为radio.img
刷BL请将bootloader-{version}.img重命名为bootloader.img
刷固件请将image-{version}.zip重命名为image.zip
</code></p>

<p>5、关机进入fastboot模式（在关机状态下同时按“音量+”和“音量-”和“电源”三个键，等待机器发出轻微震动即可放开）</p>

<p>6、运行bat文件，选择2进行解锁（音量键选择“YES”开头的，然后按电源键确定）</p>

<p>7、然后开始刷机，基带和BL能不刷就不刷，防止变砖头。不过我在刷的过程中就提示必须刷基带和BL。</p>

<p><img src="/uploads/gn-flash-fail.png" title="gn-flash-fail" ></p>

<p>PS：顺带着把同事的日版机也刷到4.0.4版本。在刷的过程中出现了莫名其妙的事情。刷机一切正常，但是重启之后，就无限在第一屏重启。抠电池重新再刷，还是老样子，但多重启两次后竟然进去了。唉，搞不懂！</p>

<p>刷机工具下载：<a href="https://github.com/dohkoos/galaxy-nexus-flash-tools">https://github.com/dohkoos/galaxy-nexus-flash-tools</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用showDialog()创建的ProgressDialog再次打开时进度条不变化]]></title>
    <link href="http://codemany.com/blog/2012/04/15/progressbar-does-not-work-when-reopen-progressdialog-using-showdialog/"/>
    <updated>2012-04-15T13:15:24+08:00</updated>
    <id>http://codemany.com/blog/2012/04/15/progressbar-does-not-work-when-reopen-progressdialog-using-showdialog</id>
    <content type="html"><![CDATA[<p>先来看段代码：</p>

<p>```
&lt;?xml version="1.0" encoding="utf-8"?>
&lt;LinearLayout xmlns:android="<a href="http://schemas.android.com/apk/res/android">http://schemas.android.com/apk/res/android</a>"</p>

<pre><code>android:layout_width="fill_parent"
android:layout_height="fill_parent"
android:orientation="vertical"&gt;
&lt;Button
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:text="Copy Contacts"
    android:onClick="copyContacts" /&gt;
</code></pre>

<p></LinearLayout>
```</p>

<p>```
import android.app.Activity;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;</p>

<p>public class DialogActivity extends Activity {</p>

<pre><code>private static final int COPY_CONTACTS = 0;

private ProgressDialog mProgressDialog;

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
}

public void copyContacts(View target) {
    showDialog(COPY_CONTACTS);
}

@Override
protected Dialog onCreateDialog(int id) {
    switch (id) {
    case COPY_CONTACTS:
        mProgressDialog = new ProgressDialog(this);
        mProgressDialog.setTitle("Copy contacts");
        mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
        mProgressDialog.setMax(100);
        new AsyncCopyContactsTask().execute();
        break;
    }
    return mProgressDialog;
}

private class AsyncCopyContactsTask extends AsyncTask&lt;Void, Void, Integer&gt; {
    @Override
    protected Integer doInBackground(Void... params) {
        for (int i = 0; i &lt; 100; i++) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
            }
            publishProgress();
        }
        return 0;
    }

    protected void onProgressUpdate(Void... progress) {
        mProgressDialog.incrementProgressBy(1);
    }

    protected void onPostExecute(Integer result) {
        mProgressDialog.dismiss();
    }
}
</code></pre>

<p>}
```</p>

<p>第一次点击按钮会显示一个进度条，上面的数字处于变动当中，到达最大值后进度条会消失不见；再次点击按钮后，就会发现进度条上的数值和消失前相同，并且不再变化，而且进度条也不会消失。这是为什么呢？</p>

<p>Activity中有三个和对话框显示有关的方法：showDialog()，dismissDialog()和removeDialog()。其中showDialog()用于显示一个对话框；dismissDialog()使对话框消失，但仍然处于内存中，只是不显示而已，如果再次调用showDialog()方法，则缓存在内存中的对话框会重新显示，而不需要重新创建。removeDialog()使对话框消失，并从内存中将对话框清除，如果再次调用showDialog()来显示它，则在显示之前需要重新创建对话框。</p>

<p>在一个对话框的声明周期内，onCreateDialog()仅被调用一次，但onPrepareDialog()方法会每次被调用。比如，第一次调用 showDialog()方法显示某个对话框时，会先触发onCreateDialog()的执行，然后再触发onPrepareDialog()方法；如果将某个对话框 removeDialog()后再showDialog()，也会先触发onCreateDialog()，接着触发onPrepareDialog()方法；如果某个对话框是被dismiss()掉的，再调用 showDialog()方法来显示它时就不会触发onCreateDialog()方法的执行，只会触发onPrepareDialog()方法。</p>

<p>这是因为第一次调用showDialog()时，Android从你的Activity中调用onCreateDialog()方法，得到返回的Dialog对象。把当前Activity设置为该对话框的所有者，从而把对话框挂靠到Activity上，让Activity自动管理该对话框的状态。这样，下次调用showDialog()时就不用重新创建Dialog对象，而是复用旧的。</p>

<p>所以，解决再次打开ProgressDialog时进度条不变化的最好方法就是将mProgressDialog.dismiss()改成removeDialog(COPY_CONTACTS)。</p>

<p>注意：如果你决定在onCreateDialog()方法之外创建一个对话框，它将不会被附着到活动上。不过，你可以通过setOwnerActivity()把它附着到一个Activity上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[实现Android底部工具栏]]></title>
    <link href="http://codemany.com/blog/2011/11/16/implement-bottom-toolbar-in-android/"/>
    <updated>2011-11-16T17:08:52+08:00</updated>
    <id>http://codemany.com/blog/2011/11/16/implement-bottom-toolbar-in-android</id>
    <content type="html"><![CDATA[<p>在网上大部分教程中，底部工具栏通常由TabHost和RadioGroup结合完成，每个工具栏项对应一个独立的Activity。不过，我们要实现的是多个工具栏项在单独的一个Activity上起作用。</p>

<p><a href="http://www.cnblogs.com/figoyu/archive/2010/11/20/1882691.html">http://www.cnblogs.com/figoyu/archive/2010/11/20/1882691.html</a> 就是这个。不过该教程对每个工具栏项设置了固定宽度80dip，导致工具栏项或屏幕大小不定时代码布局会有问题。</p>

<p>这里对该教程做了些改进，使之能做到适应不定的工具栏项或屏幕大小。改进后的布局代码如下：</p>

<p>```
&lt;?xml version="1.0" encoding="utf-8"?>
&lt;LinearLayout xmlns:android="<a href="http://schemas.android.com/apk/res/android">http://schemas.android.com/apk/res/android</a>"</p>

<pre><code>android:orientation="vertical"
android:layout_width="fill_parent"
android:layout_height="fill_parent"&gt;
&lt;LinearLayout
    android:layout_width="fill_parent"
    android:layout_height="0dip"
    android:layout_weight="1.0"&gt;
    &lt;ScrollView
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:scrollbars="vertical"
        android:fadingEdge="vertical"&gt;
        &lt;TextView
            android:id="@+id/content"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:textSize="17dip" /&gt;
    &lt;/ScrollView&gt;
&lt;/LinearLayout&gt;

&lt;include layout="@layout/toolbar" /&gt;
</code></pre>

<p></LinearLayout>
```</p>

<p>以下是工具栏toolbar.xml的布局代码：</p>

<p>```
&lt;?xml version="1.0" encoding="utf-8"?>
&lt;LinearLayout xmlns:android="<a href="http://schemas.android.com/apk/res/android">http://schemas.android.com/apk/res/android</a>"</p>

<pre><code>android:orientation="horizontal"
android:layout_width="fill_parent"
android:layout_height="wrap_content"
android:background="@drawable/toolbar_bg"&gt;
&lt;ImageButton
    android:id="@+id/btn_index"
    android:src="@drawable/index"
    android:text="@string/index"
    style="@style/toolbar" /&gt;
&lt;ImageButton
    android:id="@+id/btn_prev"
    android:src="@drawable/btn_prev_bg"
    android:text="@string/prev"
    style="@style/toolbar" /&gt;
&lt;ImageButton
    android:id="@+id/btn_next"
    android:src="@drawable/btn_next_bg"
    android:text="@string/next"
    style="@style/toolbar" /&gt;
&lt;ImageButton
    android:id="@+id/btn_zoomin"
    android:src="@drawable/zoomin"
    android:text="@string/zoomin"
    style="@style/toolbar" /&gt;
&lt;ImageButton
    android:id="@+id/btn_zoomout"
    android:src="@drawable/zoomout"
    android:text="@string/zoomout"
    style="@style/toolbar" /&gt;
</code></pre>

<p></LinearLayout>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Spinner + SQLite实现省市县三级联动]]></title>
    <link href="http://codemany.com/blog/2011/09/16/implement-three-level-linkage-with-spinner-and-sqlite/"/>
    <updated>2011-09-16T21:48:32+08:00</updated>
    <id>http://codemany.com/blog/2011/09/16/implement-three-level-linkage-with-spinner-and-sqlite</id>
    <content type="html"><![CDATA[<p>建立省市县<a href="http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/">行政区划代码</a>数据表。</p>

<p>```
CREATE TABLE xzqhdm (</p>

<pre><code>_id INTEGER PRIMARY KEY,
code NUMERIC,
region TEXT,
parent_code NUMERIC
</code></pre>

<p>);
```</p>

<p>parent_code指上一级的行政区划代码，省属于最上级的行政单位，设置它的区划代码为999999。</p>

<p><code>
insert into xzqhdm values(NULL, 110000, "北京市", 999999);
insert into xzqhdm values(NULL, 110100, "市辖区", 110000);
insert into xzqhdm values(NULL, 110101, "东城区", 110100);
insert into xzqhdm values(NULL, 110102, "西城区", 110100);
insert into xzqhdm values(NULL, 110103, "崇文区", 110100);
insert into xzqhdm values(NULL, 110104, "宣武区", 110100);
insert into xzqhdm values(NULL, 110105, "朝阳区", 110100);
insert into xzqhdm values(NULL, 110106, "丰台区", 110100);
...
insert into xzqhdm values(NULL, 659001, "石河子市", 659000);
insert into xzqhdm values(NULL, 659002, "阿拉尔市", 659000);
insert into xzqhdm values(NULL, 659003, "图木舒克市", 659000);
insert into xzqhdm values(NULL, 659004, "五家渠市", 659000);
</code></p>

<p>SQLite数据库的操作</p>

<p>如果应用使用到了SQLite数据库，在用户初次使用应用时，需要创建应用使用到的数据表结构及添加一些初始化记录，另外在软件升级的时候，也需要对数据表结构进行更新。Android系统为我们提供了一个名为SQLiteOpenHelper的类，这是一个抽象类，该类用于对数据库版本进行管理，有两个重要的方法，分别是onCreate()和onUpgrade()。</p>

<p>当调用SQLiteOpenHelper的getWritableDatabase()或getReadableDatabase()方法获取数据库实例时，如果数据库不存在，Android系统会自动生成一个数据库文件，接着调用onCreate()方法，onCreate()方法在初次生成数据库时才会被调用，在onCreate()方法里可以生成数据表结构及添加一些应用使用到的初始化数据。onUpgrade()方法在数据库的版本发生变化时会被调用，数据库的版本是由程序员控制的，假设数据库现在的版本是1，由于业务的需要，修改了数据表的结构，这时候就需要升级软件，升级软件时希望更新用户手机里的数据表结构，为了实现这一目的，可以把原来的数据库版本设置为2（或其他数值），并且在onUpgrade()方法里面实现表结构的更新。当软件的版本升级次数比较多，这时在onUpgrade()方法里面可以根据原版号和目标版本号进行判断，然后作出相应的表结构及数据更新。</p>

<p>SQLiteDatabase类则封装了一些操作数据库的常用API，使用该类可以完成对数据进行CRUD操作。主要是execSQL()和rawQuery()方法。execSQL()方法可以执行insert、delete、update和CREATE TABLE之类有更改行为的SQL语句； rawQuery()方法可以执行select语句。SQLiteDatabase还专门提供了对应于CRUD的操作方法： insert()、delete()、update()和query()。</p>

<p>如何将SQLite数据库与APK文件一起发布？可以将数据库文件复制到res\raw目录中，所有在res\raw目录中的文件不会被压缩，这样可以直接提取该目录中的文件。</p>

<p>如何打开res\raw目录中的数据库文件？不能直接打开res\raw目录中的数据库文件，需要在程序第一次启动时将该文件复制到手机内存或SD卡中，然后再打开。</p>

<p>```
public class DBHelper extends SQLiteOpenHelper {</p>

<pre><code>private static String DB_PATH = "/data/data/com.codemany.linkage/databases/";
private static String DB_NAME = "xzqh.db";
private static DBHelper databaseHelper;
private static SQLiteDatabase db;

private Context context;

private DBHelper(Context context) {
    super(context, DB_NAME, null, 1);
    this.context = context;
}

public static DBHelper getInstance(Context context) {
    if (databaseHelper == null) {
        databaseHelper = new DBHelper(context);
        databaseHelper.openDataBase();

        if (db == null) {
            try {
                db = databaseHelper.getWritableDatabase();
                databaseHelper.copyDatabase();
            }
            catch (Exception e) {
                Log.d("DBHelper", "Error in database creation");
            }

            databaseHelper.openDataBase();
        }
    }
    return databaseHelper;
}

private void copyDatabase() throws IOException {
    InputStream is = context.getResources().openRawResource(R.raw.xzqh);
    OutputStream os = new FileOutputStream(DB_PATH + DB_NAME);
    byte[] buffer = new byte[1024];
    int length;
    while ((length = is.read(buffer)) &gt; 0) {
        os.write(buffer, 0, length);
    }

    os.flush();
    os.close();
    is.close();
}

private void openDataBase() {
    try {
        db = SQLiteDatabase.openDatabase(
                DB_PATH + DB_NAME,
                null,
                SQLiteDatabase.OPEN_READONLY | SQLiteDatabase.NO_LOCALIZED_COLLATORS);
    } catch (SQLiteException e) {
        // database does't exist yet
    }
}

public SimpleCursorAdapter getListByParentCode(Context context, String parentCode) {
    SimpleCursorAdapter list = null;
    DBHelper dHelper = new DBHelper(context);
    SQLiteDatabase db = dHelper.getReadableDatabase();
    Cursor cursor = db.rawQuery(
            "SELECT code as _id, region FROM xzqhdm WHERE parent_code = ?",
            new String[] {parentCode});
    if (cursor.getCount() != 0) {
        list = new SimpleCursorAdapter(context,
                android.R.layout.simple_spinner_item,
                cursor,
                new String[] {"region"},
                new int[] {android.R.id.text1});
        list.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    }
    return list;
}

@Override
public synchronized void close() {
    if (db != null) {
        db.close();
    }
    super.close();
}

@Override
public void onCreate(SQLiteDatabase db) {
}

@Override
public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
}
</code></pre>

<p>}
```</p>

<p>在代码实现时遇到的难题是如何在选中region的同时得到对应的code。网上有教程说定制自己的Adapter，重写bingView()方法，不过有多个Spinner就需要声明多个全局变量；还有教程指出可以直接往Adapter中传递对象（实现一个类，将code和region作为字段），然后重写对象的toString()方法。后来受到这个帖子的启发，修改了rawQuery中的select语句得以实现Spinner控件中的键值绑定。</p>

<p>原来的查询语句是：</p>

<p><code>
SELECT _id, code, region FROM xzqhdm WHERE parent_code = ?
</code></p>

<p>因为传入到CursorAdapter中的Cursor结果集必须包含有列名为<code>_id</code>的列，否则CursorAdapter将不会起作用。而code可以被看作是整数，那么只需要将选出的code当作<code>_id</code>就行了，根据这个想法写出的查询语句如下：</p>

<p><code>
SELECT code as _id, region FROM xzqhdm WHERE parent_code = ?
</code></p>

<p>这样，当触发Spinner上的ItemSelected事件时就可以通过最后一个参数id得到当前的code了。</p>

<p>写这篇文章的时候同时也在调试着代码，突然发现其实不需要改写查询语句也是可以实现键值绑定的。只要在onItemSelected()方法中使用如下代码就可以取得相应的值了：</p>

<p>```
Cursor cursor = (Cursor)parent.getSelectedItem();
if (cursor != null) {</p>

<pre><code>int code = cursor.getString(cursor.getColumnIndex("code"));
String country = cursor.getString(cursor.getColumnIndex("region"));
</code></pre>

<p>}
```</p>

<p><a href="/uploads/linkage.zip" title="linkage.zip">代码下载</a></p>
]]></content>
  </entry>
  
</feed>
