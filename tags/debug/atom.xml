<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: debug | 乐者为王]]></title>
  <link href="http://codemany.com/tags/debug/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-13T19:51:39+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何调试Win32程序]]></title>
    <link href="http://codemany.com/blog/2008/02/13/how-to-debug-win32-program/"/>
    <updated>2008-02-13T01:00:53+08:00</updated>
    <id>http://codemany.com/blog/2008/02/13/how-to-debug-win32-program</id>
    <content type="html"><![CDATA[<p>方法一：使用OutputDebugString函数</p>

<p>函数的原型如下：</p>

<p><code>
void OutputDebugString(LPCTSTR lpOutputString);
</code></p>

<p>该函数会输出信息到系统的DEBUGER，输出结果可以使用工具<a href="http://www.microsoft.com/technet/sysinternals/Miscellaneous/DebugView.mspx">DebugView</a>观察。因为OutputDebugString的参数是字符串，而我们在实际使用过程中通常希望能像printf一样支持变参。下面的方法实现了这个效果：</p>

<p>```
void DebugString(LPCTSTR lpszFormat, ...)
{</p>

<pre><code>va_list args;
TCHAR szText[1024];

va_start(args, lpszFormat);
wvsprintf(szText, lpszFormat, args);
OutputDebugString(szText);
va_end(args);
</code></pre>

<p>}
```</p>

<p>方法二：输出调试信息到Console上</p>

<p><code>
FILE *stream;
AllocConsole();
freopen_s(&amp;stream, "CONOUT$", "w", stdout);
printf("Hello, world!\n");
</code></p>

<p>这里AllocConsole()用来打开Console，而freopen_s则把标准输出和Cosole关联。“CONOUT$”这个很关键。</p>
]]></content>
  </entry>
  
</feed>
