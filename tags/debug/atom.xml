<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: debug | 乐者为王]]></title>
  <link href="http://codemany.com/tags/debug/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-03T22:17:08+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何调试Win32程序]]></title>
    <link href="http://codemany.com/blog/2008/02/13/how-to-debug-win32-procedures/"/>
    <updated>2008-02-13T01:00:53+08:00</updated>
    <id>http://codemany.com/blog/2008/02/13/how-to-debug-win32-procedures</id>
    <content type="html"><![CDATA[<p><p><strong>方法一：使用OutputDebugString函数</strong><br />函数的原型如下：<br />void OutputDebugString(<br />    LPCTSTR lpOutputString<br />);</p><p>该函数会输出信息到系统的DEBUGER，输出结果可以使用工具<a href="http://www.microsoft.com/technet/sysinternals/Miscellaneous/DebugView.mspx">DebugView</a>观察。因为OutputDebugString的参数是字符串，而我们在实际使用过程中通常希望能像printf一样支持变参。下面的方法实现了这个效果：<br />void DebugString(LPCTSTR lpszFormat, ...)<br />{<br />    va_list args;<br />    TCHAR szText[1024];</p><p>    va_start(args, lpszFormat);<br />    wvsprintf(szText, lpszFormat, args);<br />    OutputDebugString(szText);<br />    va_end(args);<br />}</p><p><strong>方法二：输出调试信息到Console上</strong><br />FILE *stream;<br />AllocConsole();<br />freopen_s(&stream, "CONOUT$", "w", stdout);<br />printf("hello, world.\n");</p><p>这里AllocConsole()用来打开Console，而freopen_s则把标准输出和Cosole关联。"CONOUT$"这个很关键。</p></p>

]]></content>
  </entry>
  
</feed>
