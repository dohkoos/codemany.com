<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: EMMA | 乐者为王]]></title>
  <link href="http://codemany.com/tags/emma/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2016-08-27T18:57:46+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ant系列之用EMMA测量测试覆盖率的问题]]></title>
    <link href="http://codemany.com/blog/ant-series-problem-using-emma-measure-test-coverage/"/>
    <updated>2006-01-16T09:12:26+08:00</updated>
    <id>http://codemany.com/blog/ant-series-problem-using-emma-measure-test-coverage</id>
    <content type="html"><![CDATA[<p>EMMA是一个coverage工具，有on-the-fly和offline两种使用方式，在Ant里通常采用offline方式。</p>

<p>到sourceforge下载了2.0版本的EMMA下来，由于将EMMA的生成文件做了重定向，因此遇到了些问题，比如出现以下错误：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">nothing to do: no runtime coverage data found in any of the data files
</code></pre></div>
<p>查找EMMA的FAQ 3.7节，只是告诉你可能少了metadata和runtime coverate date（对Ant用户来说一般是少了runtime coveraget date，它的后缀名默认是ec）。</p>

<p>由FAQ 3.15节可以知道runtime coverage data文件默认是生成在user.dir目录下的（即build.xml中的basedir目录下），而由instr指令生成的metadata文件（后缀名默认为em）则已经被重定向到另外的目录（用来生成coverage report的地方），所以必须重新设置coverage.out.file的值，用来重定向生成的runtime coverage data。因为runtime coverage data是在junit任务执行时产生的，所以我们可以在junit任务中添加一行代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;sysproperty key=&quot;emma.coverage.out.file&quot; value=&quot;${coverage.dir}/coverage.emma&quot; /&gt;
</code></pre></div>
<p>注意：</p>

<ol>
<li>metadata和runtime文件的后缀名最好设置相同；</li>
<li>一定要将junit任务的fork属性设置为true，这是因为EMMA 2.0的runtime coverage data是在JVM退出后生成的；</li>
<li>instrumented classes必须是第一个被JVM执行的，所以instrumented classes目录必须处在junit任务的classpath的第一行，具体原因不明，如果谁知道还请告知下。</li>
</ol>

<p>其实EMMA附带的examples目录下的build-offline.xml里已经说明的很详细了，只不过下载后没有仔细看，才遇到了一些问题。下面是build.xml的部分代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;path id=&quot;classpath&quot;&gt;
  &lt;pathelement location=&quot;${instrumentedclasses}&quot; /&gt;
  &lt;pathelement location=&quot;${classes}&quot; /&gt;
  &lt;pathelement location=&quot;${testclasses}&quot; /&gt;
  &lt;fileset dir=&quot;${lib}&quot; includes=&quot;**/*.jar&quot; /&gt;
&lt;/path&gt;

&lt;target name=&quot;compile&quot; depends=&quot;prepare&quot;&gt;
  &lt;javac srcdir=&quot;${src}&quot; destdir=&quot;${classes}&quot; debug=&quot;on&quot;&gt;
    &lt;classpath refid=&quot;classpath&quot; /&gt;
  &lt;/javac&gt;
  &lt;javac srcdir=&quot;${test}&quot; destdir=&quot;${testclasses}&quot; debug=&quot;on&quot;&gt;
    &lt;classpath refid=&quot;classpath&quot; /&gt;
  &lt;/javac&gt;
&lt;/target&gt;

&lt;target name=&quot;coverage.instrument&quot; depends=&quot;compile&quot;&gt;
  &lt;emma enabled=&quot;yes&quot;&gt;
    &lt;instr instrpath=&quot;${classes}&quot; destdir=&quot;${instrumentedclasses}&quot;
        metadatafile=&quot;{coveragereports}/metadata.emma&quot; merge=&quot;true&quot;&gt;
    &lt;/instr&gt;
  &lt;/emma&gt;
&lt;/target&gt;

&lt;target name=&quot;junit&quot; depends=&quot;coverage.instrument&quot;&gt;
  &lt;junit printsummary=&quot;yes&quot; haltonfailure=&quot;no&quot; fork=&quot;true&quot;&gt;
    &lt;sysproperty key=&quot;emma.coverage.out.file&quot; value=&quot;${coveragereports}/coverage.emma&quot; /&gt;
    &lt;classpath refid=&quot;classpath&quot; /&gt;

    &lt;formatter type=&quot;xml&quot; /&gt;

    &lt;batchtest fork=&quot;yes&quot; todir=&quot;${junitreports}&quot;&gt;
      &lt;fileset dir=&quot;${test}&quot;&gt;
        &lt;include name=&quot;**/*Test*.java&quot; /&gt;
      &lt;/fileset&gt;
    &lt;/batchtest&gt;
  &lt;/junit&gt;
&lt;/target&gt;

&lt;target name=&quot;coverage.report&quot; depends=&quot;test&quot;&gt;
  &lt;emma enabled=&quot;yes&quot;&gt;
    &lt;report sourcepath=&quot;${src}&quot;&gt;
      &lt;fileset dir=&quot;${coveragereports}&quot;&gt;
        &lt;include name=&quot;*.emma&quot; /&gt;
      &lt;/fileset&gt;

      &lt;html outfile=&quot;${coveragereports}/coverage.html&quot; depth=&quot;method&quot; /&gt;
    &lt;/report&gt;
  &lt;/emma&gt;
&lt;/target&gt;
</code></pre></div>]]></content>
  </entry>
  
</feed>
