<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: MiniMagick | 乐者为王]]></title>
  <link href="http://codemany.com/tags/minimagick/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2017-10-19T09:57:00+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Fleximage上传图片时的问题]]></title>
    <link href="http://codemany.com/blog/problem-using-fleximage-to-upload-image/"/>
    <updated>2010-04-05T18:09:40+08:00</updated>
    <id>http://codemany.com/blog/problem-using-fleximage-to-upload-image</id>
    <content type="html"><![CDATA[<p>因为只是处理图片，所以选择了<a href="https://github.com/Squeegy/fleximage">Fleximage</a>，一个单纯的上传和处理图片的Rails插件。本来是想用Fleximage和<a href="https://github.com/minimagick/minimagick">MiniMagick</a>的，据说RMagick内存泄露的问题比较厉害，作为替代品MiniMagick不存在内存泄露的问题，因Fleximage不能指定processor而作罢。</p>

<p>Fleximage项目的Wiki上有些资料已经过时了。它说渲染图片的时候要创建flexi文件，还要修改相应的action方法，添加format.image_type到respond_to代码块中，并且在view中使用formatted_photo_path来显示图片，但事实上formatted_photo_path已经被废弃了（起先也没发现，直到为了解决一个问题查看log后才知道），可以直接使用image_tag或photo_url。或者干脆不建什么flexi文件，也不添加format.image_type到action中，直接就在view中使用embedded_image_tag方法，也可以渲染图片的。</p>
]]></content>
  </entry>
  
</feed>
