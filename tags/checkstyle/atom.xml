<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: CheckStyle | 乐者为王]]></title>
  <link href="http://codemany.com/tags/checkstyle/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-05T01:06:47+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[修复CheckStyle检查报告中Summary部分文件数目错误问题]]></title>
    <link href="http://codemany.com/blog/2005/12/30/checkstyle-repair-part-of-the-investigation-report-will-document-the-number-of-summary-errors/"/>
    <updated>2005-12-30T22:22:44+08:00</updated>
    <id>http://codemany.com/blog/2005/12/30/checkstyle-repair-part-of-the-investigation-report-will-document-the-number-of-summary-errors</id>
    <content type="html"><![CDATA[<p>在使用CheckStyle时用了它提供的checkstyle-frames.xsl作为样式文件，<br />
不过checkstyle-frames.xsl生成报告时有些问题，主要是统计数据有点问<br />
题，Summary中报告的文件数目比真实的多，所以对xsl文件的summary模板<br />
作了小小的一些修改，解决了这个问题，且添加了一个统计有错误的文件<br />
个数的功能。</p>

<p>原来的xsl内容：<br />
```
&lt;xsl:template match=&ldquo;checkstyle&rdquo; mode=&ldquo;summary&rdquo;></p>

<pre><code>&lt;h3&gt;Summary&lt;/h3&gt;
&lt;xsl:variable name="fileCount" select="count(file)"/&gt;
&lt;xsl:variable name="errorCount" select="count(file/error)"/&gt;
&lt;table class="log" border="0" cellpadding="5" cellspacing="2" width="100%"&gt;
    &lt;tr&gt;
        &lt;th&gt;Files&lt;/th&gt;
        &lt;th&gt;Errors&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;xsl:call-template name="alternated-row"/&gt;
        &lt;td&gt;&lt;xsl:value-of select="$fileCount"/&gt;&lt;/td&gt;
        &lt;td&gt;&lt;xsl:value-of select="$errorCount"/&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
</code></pre>

<p>&lt;/xsl:template>
```</p>

<p>修改后的内容：<br />
```
&lt;xsl:template match=&ldquo;checkstyle&rdquo; mode=&ldquo;summary&rdquo;></p>

<pre><code>&lt;h3&gt;Summary&lt;/h3&gt;
&lt;xsl:variable name="fileCount"&gt;
    &lt;xsl:value-of select="count(file[not(./@name = preceding-sibling::file/@name)])" /&gt;
&lt;/xsl:variable&gt;
&lt;xsl:variable name="fileErrorCount" select="count(file[count(error) &gt; 0])" /&gt;
&lt;xsl:variable name="errorCount" select="count(file/error)" /&gt;
&lt;table class="log" border="0" cellpadding="5" cellspacing="2" width="100%"&gt;
    &lt;tr&gt;
        &lt;th&gt;Total Files&lt;/th&gt;
        &lt;th&gt;Files With Errors&lt;/th&gt;
        &lt;th&gt;Errors&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;xsl:call-template name="alternated-row" /&gt;
        &lt;td&gt;&lt;xsl:value-of select="$fileCount" /&gt;&lt;/td&gt;
        &lt;td&gt;&lt;xsl:value-of select="$fileErrorCount" /&gt;&lt;/td&gt;
        &lt;td&gt;&lt;xsl:value-of select="$errorCount" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
</code></pre>

<p>&lt;/xsl:template>
```</p>

<p>following-sibling 按文档顺序选择文档中此后出现的当前节点的所有兄弟节点。<br />
preceding-silbling 按与文档顺序相反的方向选择文档中此前出现的当前节点的所有兄弟节点。<br />
following 除当前节点的所有后代节点外，按顺序选择文档中当前节点之后出现的所有节点，不包括属性节点或名称空间节点。<br />
preceding 按与文档方向顺序相反的方向选择文档中在当前节点之前出现的所有节点。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ant系列之用Checkstyle检查代码规范的问题]]></title>
    <link href="http://codemany.com/blog/2005/12/17/ant-series-checkstyle-check-code-with-the-problem-of-norms/"/>
    <updated>2005-12-17T04:33:54+08:00</updated>
    <id>http://codemany.com/blog/2005/12/17/ant-series-checkstyle-check-code-with-the-problem-of-norms</id>
    <content type="html"><![CDATA[<p>首先将checkstyle-all-4.1.jar文件拷贝到项目的lib目录下，并建立CheckStyle配置文件。</p>

<p>然后在build.xml文件中声明CheckStyle任务:
<code>
&lt;taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle-all-4.1.jar" /&gt;
</code></p>

<p>接着是建立CheckStyle任务：
```
<target name="checkstyle" description="Generates a report of code convention violations."></p>

<pre><code>&lt;checkstyle config="${docs.dir}/checkstyle_checks.xml" failOnViolation="false"&gt;
    &lt;fileset dir="${src.dir}" includes="**/*.java" /&gt;
    &lt;formatter type="xml" toFile="${checkstyle.dir}/checkstyle_report.xml" /&gt;
&lt;/checkstyle&gt;
&lt;xslt basedir="${checkstyle.dir}" destdir="${checkstyle.dir}/html" extension=".html"
        style="${docs.dir}/checkstyle-frames.xsl"&gt;
    &lt;param name="output.dir" expression="${checkstyle.dir}/html" /&gt;
&lt;/xslt&gt;
</code></pre>

<p></target>
```</p>

<p>其中output.dir是checkstyle-frames.xsl中的参数：
<code>
&lt;xsl:param name="output.dir" /&gt;
</code></p>

<p>在运行任务时可能会出现如下异常：
<code>
javax.xml.transform.TransformerException: java.lang.RuntimeException: Unrecognized XSLTC extension 'org.apache.xalan.xslt.extensions.Redirect:write'
</code></p>

<p>可以将checkstyle-frames.xsl中的
<code>
xmlns:redirect="org.apache.xalan.xslt.extensions.Redirect"
</code></p>

<p>改成下面的内容就行。
<code>
xmlns:redirect="http://xml.apache.org/xalan/redirect"
</code></p>

<p>如果出现这样的异常：
<code>
Got an exception - java.lang.RuntimeException: Unable to get class information for HelloException.
</code></p>

<p>可以修改对Throws的限制：允许Throws Unchecked Exception以及Throws Subclass Of Another Declared Exception。
```
<module name="RedundantThrows"><br /></p>

<pre><code>&lt;property name="allowUnchecked" value="true" /&gt;
&lt;property name="allowSubclasses" value="true" /&gt;
</code></pre>

<p></module>
```</p>
]]></content>
  </entry>
  
</feed>
