<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: wxWidgets | 乐者为王]]></title>
  <link href="http://codemany.com/tags/wxwidgets/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2016-04-01T22:19:06+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[利用WHOIS协议查询域名信息]]></title>
    <link href="http://codemany.com/blog/using-whois-protocol-to-query-domain-information/"/>
    <updated>2009-09-16T06:15:04+08:00</updated>
    <id>http://codemany.com/blog/using-whois-protocol-to-query-domain-information</id>
    <content type="html"><![CDATA[<p>域名信息的查询原理非常简单，主要是基于RFC 954（RFC 812已被废弃）提供的WHOIS协议。WHOIS服务器是一个基于“查询/响应”的TCP事务服务器，用户程序通过访问WHOIS服务器，从WHOIS数据库中查询得到我们所需要的内容。其主要过程有以下三步：</p>

<ol>
<li>在TCP服务端口43连接WHOIS服务主机；</li>
<li>发送一个命令，以回车换行符结尾；</li>
<li>接受相应命令的返回信息，一旦输出结束，服务器将关闭连接。</li>
</ol>

<p>命令的格式非常简单。可以直接输入域名（例如example.com）查询相关域名信息；也可以使用help得到详细的帮助信息。以下是查询的代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">wxString Whois::Lookup(wxString&amp; host, wxString&amp; szAddress)
{
    char szQuery[512];
    char szBuffer[512];
    wxString szResult;

    strcpy(szQuery, szAddress);
    strcat(szQuery, &quot;\r\n&quot;);

    wxIPV4address addr;
    addr.Hostname(host);
    addr.Service(43);

    wxSocketClient socket;
    socket.Connect(addr, false);
    socket.WaitOnConnect(30);

    if (socket.IsConnected())
    {
        socket.Write(szQuery, strlen(szQuery));
        szResult = &quot;&quot;;
        while (true)
        {
            // Clear buffer before each iteration
            memset(szBuffer, 0, 512);

            // Try to receive some data
            socket.Read(szBuffer, 500);
            if (socket.LastCount() &lt;= 0)
            {
                break;
            }
            szResult += szBuffer;
        }
    }
    else
    {
        szResult = wxT(&quot;Failed! Unable to connect\n&quot;);
    }
    socket.Close();

    return wxString::FromUTF8(szResult);
}
</code></pre></div>
<p>常用的WHOIS服务器：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">.cn=whois.cnnic.net.cn
.com=whois.internic.com
.net=whois.internic.com
.name=www.whois.name
.cc=whois.nic.cc
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复wxWidgets Wizard for Visual Studio 2005/2008中的一个bug]]></title>
    <link href="http://codemany.com/blog/fix-bug-wxwidgets-wizard-for-visual-studio-2005-and-2008/"/>
    <updated>2008-10-16T17:41:47+08:00</updated>
    <id>http://codemany.com/blog/fix-bug-wxwidgets-wizard-for-visual-studio-2005-and-2008</id>
    <content type="html"><![CDATA[<p>前面发布的wxWidgets Wizard for Visual Studio 2005/2008存在一个bug，安装在VS2008中后不能创建新的wxWidgets项目。原因是没有将wxAppWiz.vsz文件中VsWizardEngine的版本号改为9.0。现在做了一些修改，修改后的代码如下：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">procedure CurStepChanged(CurStep: TSetupStep);
var
    i: Integer;
    Signature: String;
    ConfigLine: String;
    ConfigFile: String;
    ConfigFileLines: TArrayOfString;
begin
    if CurStep = ssPostInstall then begin
        if (Pos(&#39;Visual Studio 9.0&#39;, ExpandConstant(&#39;{app}&#39;)) &gt; 0) then begin
            Signature := &#39;Wizard=VsWizard.VsWizardEngine&#39;;
            ConfigFile := ExpandConstant(&#39;{app}\VCProjects\wxAppWiz.vsz&#39;);
            LoadStringsFromFile(ConfigFile, ConfigFileLines);
            for i := 0 to GetArrayLength(ConfigFileLines) - 1 do begin
                if (Pos(Signature, ConfigFileLines[i]) &gt; 0) then begin
                    ConfigFileLines[i] := &#39;Wizard=VsWizard.VsWizardEngine.9.0&#39;
                    SaveStringsToFile(ConfigFile, ConfigFileLines, False);
                    break;
                end;
            end;
        end;

        Signature := &#39;wxWidgets&#39;;
        ConfigLine := &#39;wxWidgets|{1B027A40-8F43-11D0-8D11-00A0C91BC942}|#1043|70&#39; + #13#10;
        ConfigFile := ExpandConstant(&#39;{app}\VCProjects\vc.vsdir&#39;);
        LoadStringsFromFile(ConfigFile, ConfigFileLines);
        for i := 0 to GetArrayLength(ConfigFileLines) - 1 do begin
            if (Pos(Signature, ConfigFileLines[i]) &gt; 0) then abort;
        end;
        SaveStringToFile(ConfigFile, ConfigLine, True);
    end;
end;
</code></pre></div>
<p>代码下载：<a href="https://github.com/dohkoos/wxwizard">https://github.com/dohkoos/wxwizard</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[完成了wxWidgets Wizard for Visual Studio 2005/2008的安装程序]]></title>
    <link href="http://codemany.com/blog/complete-wxwidgets-wizard-for-visual-studio-2005-and-2008-install-program/"/>
    <updated>2008-05-21T15:28:16+08:00</updated>
    <id>http://codemany.com/blog/complete-wxwidgets-wizard-for-visual-studio-2005-and-2008-install-program</id>
    <content type="html"><![CDATA[<p>两个晚上的时间，一边查资料一边学习，同时编写和测试安装脚本，最终完成了wxWidgets Wizard for Visual Studio 2005/2008的安装程序。现在不用配置就可以使用wxWidgets Wizard的代码框架生成功能了。安装制作程序采用的是Inno Setup，完整的安装脚本如下：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">#define SrcImgsDir &#39;..\VCWizards\images&#39;
#define SrcHtmlDir &#39;..\VCWizards\html\1033&#39;
#define SrcScptDir &#39;..\VCWizards\scripts\1033&#39;
#define SrcTempDir &#39;..\VCWizards\templates\1033&#39;
#define TgtImgsDir &#39;VCWizards\AppWiz\wxWidgets\Application\images&#39;
#define TgtHtmlDir &#39;VCWizards\AppWiz\wxWidgets\Application\html\1033&#39;
#define TgtScptDir &#39;VCWizards\AppWiz\wxWidgets\Application\scripts\1033&#39;
#define TgtTempDir &#39;VCWizards\AppWiz\wxWidgets\Application\templates\1033&#39;

[Setup]
AppName=wxWidgets Application Wizard
AppVerName=wxWidgets Wizard 1.0.0
AppPublisher=dohkoos
DefaultDirName={pf32}\Microsoft Visual Studio 9.0\VC
DirExistsWarning=no
;Uninstallable=no
UninstallFilesDir={app}\VCWizards\AppWiz\wxWidgets
UninstallDisplayIcon={app}\VCProjects\wxAppWiz.ico
Compression=lzma
SolidCompression=yes

[Files]
Source: ..\VCProjects\wxAppWiz.ico; DestDir: {app}\VCProjects
Source: ..\VCProjects\wxAppWiz.vsz; DestDir: {app}\VCProjects
Source: ..\VCProjects\wxWidgets\wxWidgets.vsdir; DestDir: {app}\VCProjects\wxWidgets
Source: {#SrcImgsDir}\*.gif; DestDir: {app}\{#TgtImgsDir}
Source: {#SrcHtmlDir}\*.htm; DestDir: {app}\{#TgtHtmlDir}
Source: {#SrcHtmlDir}\*.css; DestDir: {app}\{#TgtHtmlDir}
Source: {#SrcScptDir}\*.js; DestDir: {app}\{#TgtScptDir}
Source: {#SrcTempDir}\*.h; DestDir: {app}\{#TgtTempDir}
Source: {#SrcTempDir}\*.cpp; DestDir: {app}\{#TgtTempDir}
Source: {#SrcTempDir}\readme.txt; DestDir: {app}\{#TgtTempDir}
Source: {#SrcTempDir}\root.manifest; DestDir: {app}\{#TgtTempDir}
Source: {#SrcTempDir}\Templates.inf; DestDir: {app}\{#TgtTempDir}

[Code]
procedure CurStepChanged(CurStep: TSetupStep);
var
    i: Integer;
    Signature: String;
    ConfigLine: String;
    ConfigFile: String;
    ConfigFileLines: TArrayOfString;
begin
    if CurStep = ssPostInstall then begin
        Signature := &#39;wxWidgets&#39;;
        ConfigLine := &#39;wxWidgets|{1B027A40-8F43-11D0-8D11-00A0C91BC942}|#1043|70&#39; + #13#10;
        ConfigFile := ExpandConstant(&#39;{app}\VCProjects\vc.vsdir&#39;);
        LoadStringsFromFile(ConfigFile, ConfigFileLines);
        for i := 0 to GetArrayLength(ConfigFileLines) - 1 do begin
            if (Pos(Signature, ConfigFileLines[i]) &gt; 0) then abort;
        end;
        SaveStringToFile(ConfigFile, ConfigLine, True);
    end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
    i: Integer;
    j: Integer;
    Signature: String;
    ConfigFile: String;
    ConfigFileLines, NewConfigFileLines: TArrayOfString;
begin
    if CurUninstallStep = usUninstall then begin
        Signature := &#39;wxWidgets&#39;;
        ConfigFile := ExpandConstant(&#39;{app}\VCProjects\vc.vsdir&#39;);
        LoadStringsFromFile(ConfigFile, ConfigFileLines);
        SetArrayLength(NewConfigFileLines, GetArrayLength(ConfigFileLines) - 1);
        j := 0;
        for i := 0 to GetArrayLength(ConfigFileLines) - 1 do begin
            if (Pos(Signature, ConfigFileLines[i]) &gt; 0) then begin
                continue;
            end else begin
                NewConfigFileLines[j] := ConfigFileLines[i];
                j := j + 1;
            end;
        end;
        SaveStringsToFile(ConfigFile, NewConfigFileLines, False);
    end;
end;
</code></pre></div>
<p>代码下载：<a href="https://github.com/dohkoos/wxwizard">https://github.com/dohkoos/wxwizard</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wxWidgets Wizard for Visual Studio 2005/2008]]></title>
    <link href="http://codemany.com/blog/wxwidgets-wizard-for-visual-studio-2005-and-2008/"/>
    <updated>2008-02-16T08:13:19+08:00</updated>
    <id>http://codemany.com/blog/wxwidgets-wizard-for-visual-studio-2005-and-2008</id>
    <content type="html"><![CDATA[<p>花了点时间为VS2005/VS2008写了一个简单的wxWidgets Wizard。本来想写的更完善一些再发布出来的，只是实在没有多少心思再继续地写下去了。而且该向导程序已经基本可以满足我自己的要求了。不过，如果以后有时间的话还是会继续完善它的。以下是我原本打算要实现的一些功能：</p>

<ol>
<li>支持创建对话框程序；</li>
<li>可以直接安装wxWidgets Wizard到VS2005中的安装程序；</li>
<li>集成wxWidgets Help文档到VS2005中；</li>
<li>实现代码智能提示功能；</li>
<li>可以在VS2005中直接编辑和编译XRC资源；</li>
<li>在向导过程中可以设置一些wxWidgets的高级特性（比如Menu Bar，Status Bar等）。</li>
</ol>

<p>截图：</p>

<p><img src="/uploads/wxwizard-default.png" title="wxwizard-default" ></p>

<p><img src="/uploads/wxwizard-apptype.png" title="wxwizard-apptype" ></p>

<p><img src="/uploads/wxwizard-generated-classes.png" title="wxwizard-generated-classes" ></p>

<p>代码下载：<a href="https://github.com/dohkoos/wxwizard">https://github.com/dohkoos/wxwizard</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XRC和动态子菜单]]></title>
    <link href="http://codemany.com/blog/xrc-and-dynamic-sub-menu/"/>
    <updated>2008-01-11T15:08:59+08:00</updated>
    <id>http://codemany.com/blog/xrc-and-dynamic-sub-menu</id>
    <content type="html"><![CDATA[<p>1、什么是XRC</p>

<p>XRC是基于XML的资源系统。它的基本出发点是将界面布局和程序逻辑分离，即将界面布局代码保存在分离的XML文件中，在程序中不涉及控件的创建和布局，只需要加载相应的资源并处理事件绑定即可。</p>

<p>2、XRC文件格式</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;resource version=&quot;2.3.0.1&quot;&gt;
    &lt;object class=&quot;wxFrame&quot; name=&quot;ID_MAIN_FRAME&quot;&gt;
        &lt;size&gt;200, 300&lt;/size&gt;
    &lt;/object&gt;
&lt;/resource&gt;
</code></pre></div>
<p>3、XRC文件中菜单资源的相关属性</p>

<table><thead>
<tr>
<th>类</th>
<th>属性</th>
<th>描述</th>
</tr>
</thead><tbody>
<tr>
<td>wxMenuBar</td>
<td>style</td>
<td>Menu bar style: wxMB_DOCKABLE</td>
</tr>
<tr>
<td>wxMenu</td>
<td>style</td>
<td>Menu style: wxMENU_TEAROFF</td>
</tr>
<tr>
<td></td>
<td>label</td>
<td>Text: label of the menu.</td>
</tr>
<tr>
<td></td>
<td>help</td>
<td>Text: displayed help string.</td>
</tr>
<tr>
<td>wxMenuItem</td>
<td>style</td>
<td>Menu style: wxMENU_TEAROFF</td>
</tr>
<tr>
<td></td>
<td>label</td>
<td>Text: label of the menu.</td>
</tr>
<tr>
<td></td>
<td>accel</td>
<td>Text: accelerator associated to this item ( Alt-X for example ).</td>
</tr>
<tr>
<td></td>
<td>help</td>
<td>Text: displayed help string.</td>
</tr>
<tr>
<td></td>
<td>radio</td>
<td>bool value(0/1): 1 if this item is a radio menu item.</td>
</tr>
<tr>
<td></td>
<td>checkable</td>
<td>bool value(0/1): 1 if this item is a check menu item.</td>
</tr>
<tr>
<td></td>
<td>enabled</td>
<td>bool value(0/1): 1 if this item is initially enabled.</td>
</tr>
<tr>
<td></td>
<td>checked</td>
<td>bool value(0/1): 1 if this (check) item is initially checked.</td>
</tr>
<tr>
<td></td>
<td>bitmap</td>
<td>Text: path to a bitmap to draw at the left of the item.</td>
</tr>
</tbody></table>

<p>4、使用XRC创建菜单</p>

<p>创建一个包含菜单布局信息的XML资源文件MenuBar.xrc：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
&lt;resource version=&quot;2.3.0.1&quot; xmlns=&quot;http://www.wxwindows.org/wxxrc&quot;&gt;
    &lt;object class=&quot;wxMenuBar&quot; name=&quot;ID_MENUBAR&quot;&gt;
        &lt;object class=&quot;wxMenu&quot; name=&quot;ID_MENU_FILE&quot;&gt;
            &lt;label&gt;&amp;File&lt;/label&gt;
            &lt;object class=&quot;wxMenuItem&quot; name=&quot;wxID_CLOSE&quot;&gt;
                &lt;label&gt;E&amp;xit&lt;/label&gt;
                &lt;accel&gt;Ctrl+Q&lt;/accel&gt;
                &lt;help&gt;Quit the application&lt;/help&gt;
            &lt;/object&gt;
        &lt;/object&gt;
        &lt;object class=&quot;wxMenu&quot; name=&quot;ID_MENU_VIEW&quot;&gt;
            &lt;label&gt;&amp;View&lt;/label&gt;
        &lt;/object&gt;
        &lt;object class=&quot;wxMenu&quot; name=&quot;ID_MENU_TOOLS&quot;&gt;
            &lt;label&gt;&amp;Tools&lt;/label&gt;
            &lt;object class=&quot;wxMenuItem&quot; name=&quot;wxID_OPTIONS&quot;&gt;
                &lt;label&gt;&amp;Options...&lt;/label&gt;
            &lt;/object&gt;
        &lt;/object&gt;
        &lt;object class=&quot;wxMenu&quot; name=&quot;ID_MENU_HELP&quot;&gt;
            &lt;label&gt;&amp;Help&lt;/label&gt;
            &lt;object class=&quot;wxMenuItem&quot; name=&quot;wxID_CHECKFORUPDATES&quot;&gt;
                &lt;label&gt;Check for &amp;Updates...&lt;/label&gt;
            &lt;/object&gt;
            &lt;object class=&quot;separator&quot; /&gt;
            &lt;object class=&quot;wxMenuItem&quot; name=&quot;wxID_ABOUT&quot;&gt;
                &lt;label&gt;&amp;About...&lt;/label&gt;
            &lt;/object&gt;
        &lt;/object&gt;
    &lt;/object&gt;
&lt;/resource&gt;
</code></pre></div>
<p>加载资源文件：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">bool MainApp::OnInit()
{
    wxXmlResource* pResource = wxXmlResource::Get();
    pResource-&gt;AddHandler(new wxMenuBarXmlHandler);
    pResource-&gt;AddHandler(new wxMenuXmlHandler);
    pResource-&gt;Load(wxT(&quot;resources/MenuBar.xrc&quot;));
</code></pre></div>
<p>初始化资源文件：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">MainFrame::MainFrame(const wxString&amp; title) : wxFrame(NULL, wxID_ANY, title)
{
    m_menuBar = NULL;
    InitMenuBar();
}

bool MainFrame::InitMenuBar()
{
    if (m_menuBar)
    {
        SetMenuBar(NULL);
        delete m_menuBar;
    }
    // Initialize the resource system
    m_menuBar = wxXmlResource::Get()-&gt;LoadMenuBar(wxT(&quot;ID_MENUBAR&quot;));
    if (!m_menuBar)
    {
        wxLogError(wxT(&quot;Cannot load main menu from resource file&quot;));
        return false;
    }
    SetMenuBar(m_menuBar);
    return true;
}
</code></pre></div>
<p>5、在XRC菜单上添加动态子菜单</p>

<p>在资源文件中添加一个新的菜单项（wxID_LANGUAGES）：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;object class=&quot;wxMenu&quot; name=&quot;ID_MENU_VIEW&quot;&gt;
    &lt;label&gt;&amp;View&lt;/label&gt;
    &lt;object class=&quot;wxMenu&quot; name=&quot;wxID_LANGUAGE&quot;&gt;
        &lt;label&gt;&amp;Language&lt;/label&gt;
        &lt;object class=&quot;wxMenuItem&quot; name=&quot;wxID_LANGUAGES&quot;&gt;
            &lt;label&gt;Get Additional/Update language pack&lt;/label&gt;
            &lt;help&gt;Downloading Additional/Update language pack&lt;/help&gt;
        &lt;/object&gt;
        &lt;object class=&quot;separator&quot; /&gt;
    &lt;/object&gt;
&lt;/object&gt;
</code></pre></div>
<p>创建动态子菜单：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">// Initialize the resource system
m_menuBar = wxXmlResource::Get()-&gt;LoadMenuBar(wxT(&quot;ID_MENUBAR&quot;));
if (!m_menuBar)
{
    wxLogError(wxT(&quot;Cannot load main menu from resource file&quot;));
    return false;
}
/*
 * 这里很奇怪，在XRC文件wxID_LANGUAGE的类型明明是wxMenu，可在这里确只能用wxMenuItem。
 * 查看wxWidgets源代码发现XRC系统只会把最上层的class为wxMenu的object创建为wxMenu对象。
 * 其它的则都被创建成了wxMenuItem对象。
 */
// 使用XRCID方法获取控件ID，创建动态子菜单
wxMenuItem* menuItem = m_menuBar-&gt;FindItem(XRCID(&quot;wxID_LANGUAGE&quot;));
if (menuItem)
{
    wxMenu* subMenu = menuItem-&gt;GetSubMenu();
    subMenu-&gt;AppendRadioItem(wxID_LANGUAGE_LOWEST + 1, wxT(&quot;English&quot;));
    subMenu-&gt;AppendRadioItem(wxID_LANGUAGE_LOWEST + 2, wxT(&quot;Chinese(Simplified)&quot;));
}
SetMenuBar(m_menuBar);
return true;
</code></pre></div>
<p><a href="/uploads/wxXRC.zip" title="wxXRC.zip">代码下载</a></p>
]]></content>
  </entry>
  
</feed>
