<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: VS2005 | 乐者为王]]></title>
  <link href="http://codemany.com/tags/vs2005/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2019-08-22T20:34:51+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Visual Studio 2005下wxWidgets-2.8.6开发环境的搭建]]></title>
    <link href="http://codemany.com/blog/built-wxwidgets-286-development-environment-under-visual-studio-2005/"/>
    <updated>2007-09-11T15:27:51+08:00</updated>
    <id>http://codemany.com/blog/built-wxwidgets-286-development-environment-under-visual-studio-2005</id>
    <content type="html"><![CDATA[<p>wxWidgets是一个开源的跨平台C++类库，它包含一个可以支持现今几乎所有操作系统的图形用户界面（GUI）库和其它一些很有用的工具，提供了类似MFC的功能。wxWidgets的主体是由C++构建的，但你并不是必需通过C++才能使用wxWidgets。wxWidgets拥有许多其它语言的绑定，使你在用其它语言编写程序的时候也可以使用wxWidgets。</p>

<h3 id="wxwidgets的下载、安装和编译">wxWidgets的下载、安装和编译</h3>

<ol>
<li>去 <a href="http://www.wxwidgets.org/downloads/">http://www.wxwidgets.org/downloads/</a> 下载一个wxMSW版本的wxWidgets；</li>
<li>运行安装文件。在安装好后设置环境变量WXWIN，指向wxWidgets的安装目录。因为安装过程仅仅是把文件拷贝到指定的目录，所以还需要对wxWidgets进行编译；</li>
<li>进入$(WXWIN)/build/msw目录，用VS2005打开wx.dsw，提示是否进行项目转换，点确定。如果想要链接静态运行库，在编译前应该对每个项目进行设置，如下图：</li>
</ol>

<p><img src="/uploads/wxwidgets-compile.png" alt="wxwidgets-compile"></p>

<p>编译好后的wxWidgets会在$(WXWIN)/lib/vc_lib目录下生成一系列的lib文件，这些lib文件的名字遵循下面的命名规则：不依赖于GUI组件的库会以wxbase开头，紧跟着的是版本号，然后的字母表明这个库是否是编译为Unicode(&#39;u&#39;)或是否是编译为Debug(&#39;d&#39;)，名字中的最后部分是wxWidgets组件的名字。</p>

<p>注意：wxWidgets编译完后在$(WXWIN)/build/msw目录下会生成许多预编译头文件，占了很大的空间，如果确定以后不再编译wxWidgets库的话，可以考虑删掉。</p>

<h3 id="设置开发环境">设置开发环境</h3>

<p>打开Tools -&gt; Options -&gt; Projects and Solutions -&gt; VC++ Directories</p>

<ol>
<li>在Include files中加入$(WXWIN)/include和$(WXWIN)/include/msvc</li>
<li>在Library files中加入$(WXWIN)/lib/vc_lib</li>
</ol>

<h3 id="创建wxwidgets项目">创建wxWidgets项目</h3>

<p>新建一个General -&gt; Empty Project或Win32 -&gt; Win32 Project项目，然后设置项目的一些属性，可以选择下面的其中一个来设置。譬如你如果打算使用Unicode，那么选择Unicode Debug或Unicode Release，如果你仅仅想调试程序而非发布，则只需要选择Debug设置。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">Debug：
Project Properties -&gt; General -&gt; Character Set: No Set
Project Properties -&gt; C/C++ -&gt; Code Generation -&gt; Runtime Library: Multi-threaded Debug (/MTd)
Project Properties -&gt; Linker -&gt; Input -&gt; Additional Dependencies: wxbase28d.lib wxmsw28d_core.lib winmm.lib comctl32.lib rpcrt4.lib wsock32.lib oleacc.lib

Release：
Project Properties -&gt; General -&gt; Character Set: No Set
Project Properties -&gt; C/C++ -&gt; Code Generation -&gt; Runtime Library: Multi-threaded (/MT)
Project Properties -&gt; Linker -&gt; Input -&gt; Additional Dependencies: wxbase28.lib wxmsw28_core.lib winmm.lib comctl32.lib rpcrt4.lib wsock32.lib oleacc.lib

Unicode Debug：
Project Properties -&gt; General -&gt; Character Set: Use Unicode Character Set
Project Properties -&gt; C/C++ -&gt; Code Generation -&gt; Runtime Library: Multi-threaded Debug (/MTd)
Project Properties -&gt; Linker -&gt; Input -&gt; Additional Dependencies: wxbase28ud.lib wxmsw28ud_core.lib winmm.lib comctl32.lib rpcrt4.lib wsock32.lib oleacc.lib

Unicode Release：
Project Properties -&gt; General -&gt; Character Set: Use Unicode Character Set
Project Properties -&gt; C/C++ -&gt; Code Generation -&gt; Runtime Library: Multi-threaded (/MT)
Project Properties -&gt; Linker -&gt; Input -&gt; Additional Dependencies: wxbase28u.lib wxmsw28u_core.lib winmm.lib comctl32.lib rpcrt4.lib wsock32.lib oleacc.lib
</code></pre></div>
<h3 id="问题">问题</h3>

<p>1、编译时出现</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">Cannot open include file: &#39;../mswu/wx/setup.h&#39;: No such file or directory
</code></pre></div>
<p>是因为项目属性的Character Set设置不正确，必须与使用的wxWidgets库的Character Set一致。</p>

<p>2、编译时如果出现</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">MSVCRT.lib(MSVCRT.dll) : error LNK2005: _free already defined in LIBC.lib(free.obj)
</code></pre></div>
<p>这是因为没有连接正确的wxWidgets库，譬如Unicode Debug版本的项目就需要连接Unicode+Debug版本的wxWidgets库（库名后缀为&#39;ud&#39;的lib文件），或者是wxWidgets库和程序使用的Runtime Library不同。</p>

<p>3、运行时出现No Debugging Information对话框。</p>

<p>将Project Properties -&gt; Linker -&gt; Debugging -&gt; Generate Debug Info的值改成Yes (/DEBUG)。</p>
]]></content>
  </entry>
  
</feed>
