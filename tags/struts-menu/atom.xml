<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Struts-Menu | 乐者为王]]></title>
  <link href="http://codemany.com/tags/struts-menu/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-27T02:16:45+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[让Struts-Menu通过WebWork来读取ResourceBundle]]></title>
    <link href="http://codemany.com/blog/2006/03/12/struts-menu-allow-webwork-to-read-through-the-resourcebundle/"/>
    <updated>2006-03-12T07:01:48+08:00</updated>
    <id>http://codemany.com/blog/2006/03/12/struts-menu-allow-webwork-to-read-through-the-resourcebundle</id>
    <content type="html"><![CDATA[<p>struts-menu默认是通过jstl或者struts来读取ResourceBundle的，&#36825;就&#38656;&#35201;在web.xml中&#37197;&#32622;&#35201;读取的properties文件&#65288;jstl&#65289;或在struts-config.xml中&#37197;&#32622;&#65288;struts&#65289;。<br />
webwork&#20063;&#26377;&#33258;&#24049;的ResourceBundle&#37197;&#32622;&#26041;&#24335;，&#36825;样&#24863;&#35273;&#36215;来&#22826;不&#32479;&#19968;了，&#32780;&#19988;如果&#35201;&#35753;struts-menu通过spring&#20043;&#31867;的web&#26694;&#26550;来读ResourceBundle的&#35805;&#20063;&#20570;不到。&#25152;以&#21442;&#32771;&#30528;displaytag的&#23454;现&#23545;struts-menu&#36827;行了&#19968;&#30058;&#20462;改，&#23454;现了可通过web&#26694;&#26550;来读取ResourceBundle的&#21151;能。<br /></p>

<br />


<p>&#26242;时&#21482;是&#23454;现了webwork，下&#38754;是&#20462;改步骤<br />
1、&#22686;加net.sf.navigator.localization&#21253;，将org.displaytag.localization中的*.java&#31227;到&#35813;&#21253;中<br />
2、将org.displaytag下的Message.java&#21644;messages.properties&#31227;到net.sf.navigator目录下<br />
3、&#32473;MenuDisplayerMapping添加&#20004;个&#23646;&#24615;localeResover&#21644;ResourceProvider，&#19988;&#37117;&#23454;现get&#21644;set&#26041;&#27861;<br />
4、在struts-menu.xml的Displayer标签下添加：</p>

<p><code>
&lt;setProperty property="localeResover" value="net.sf.navigator.localization.I18nWebworkAdapter" /&gt;
&lt;setProperty property="resourceProvider" value="net.sf.navigator.localization.I18nWebworkAdapter" /&gt;
</code></p>

<p>5、在MenuDisplayer添加四个&#25509;&#21475;&#26041;&#27861;</p>

<p>```</p>

<pre><code>public LocaleResolver getLocaleResolver();&lt;br /&gt;
  public void setLocaleResolver(LocaleResolver localeResolver);&lt;br /&gt;
  public I18nResourceProvider getResourceProvider();&lt;br /&gt;
  public void setResourceProvider(I18nResourceProvider resourceProvider);&lt;br /&gt;
   &amp;#24182;在AbstractMenuDisplayer&amp;#37324;&amp;#23454;现&amp;#36825;四个&amp;#26041;&amp;#27861;&lt;br /&gt;
</code></pre>

<p>6、在AbstractMenuDisplayer&#37324;添加protected的PageContext&#23545;&#35937;，&#24182;在init&#26041;&#27861;&#37324;&#21021;&#22987;&#21270;&#23427;<br />
7、&#37325;写MessageResourcesMenuDisplayer.getMessage&#26041;&#27861;，&#20195;&#30721;如下<br /></p>

<pre><code>  public String getMessage(String key) {&lt;br /&gt;
      String message = null;&lt;br /&gt;
</code></pre>

<br />


<pre><code>      if (resourceProvider != null) {&lt;br /&gt;
          message = resourceProvider.getResource(key, "???", null, pageContext);&lt;br /&gt;
      }&lt;br /&gt;
      if (message == null) {&lt;br /&gt;
          message = key;&lt;br /&gt;
      }&lt;br /&gt;
</code></pre>

<br />


<pre><code>      return message;&lt;br /&gt;
  }&lt;br /&gt;
</code></pre>

<p>8、在UseMenuDisplayerTag文件&#37324;添加&#20195;&#30721;&#65288;+后的&#20195;&#30721;是&#22686;加的&#65289;<br /></p>

<pre><code>  //get an instance of the menu displayer&lt;br /&gt;
  MenuDisplayer displayerInstance = null;&lt;br /&gt;
+ LocaleResolver localeResolver = null;&lt;br /&gt;
+ I18nResourceProvider resourceProvider = null;&lt;br /&gt;
</code></pre>

<br />


<pre><code>  // default to use the config on the mapping&lt;br /&gt;
  if (displayerMapping.getConfig() != null) {&lt;br /&gt;
      // this value (config) is set on the displayer below&lt;br /&gt;
      setConfig(displayerMapping.getConfig());&lt;br /&gt;
  }&lt;br /&gt;
+ localeResolver =&lt;br /&gt;
+         (LocaleResolver) Class.forName(displayerMapping.getLocaleResover()).newInstance();&lt;br /&gt;
+ resourceProvider =&lt;br /&gt;
+         (I18nResourceProvider) Class.forName(displayerMapping.getLocaleProvider()).newInstance();&lt;br /&gt;
</code></pre>

<br />


<pre><code>  displayerInstance.setConfig(config);&lt;br /&gt;
+ displayerInstance.setResourceProvider(resourceProvider);&lt;br /&gt;
+ displayerInstance.setLocaleResolver(localeResolver);&lt;br /&gt;
</code></pre>

<br />


<p>如果&#35201;&#23454;现jstl、spring等&#26694;&#26550;的&#35805;，可以将org.displaytag.localization&#30456;&#24212;的java文件&#31227;到net.sf.navigator.localization目录下就可以了。</p></p>
]]></content>
  </entry>
  
</feed>
