<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: forgot_password | 乐者为王]]></title>
  <link href="http://codemany.com/tags/forgot-password/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-22T23:28:43+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用Rails 2.3打造todolist]]></title>
    <link href="http://codemany.com/blog/2010/10/04/using-rails23-to-create-a-todolist-app/"/>
    <updated>2010-10-04T12:27:38+08:00</updated>
    <id>http://codemany.com/blog/2010/10/04/using-rails23-to-create-a-todolist-app</id>
    <content type="html"><![CDATA[<p>首先生成项目骨架：<br />
<code>
rails todolist&lt;br /&gt;
cd todolist&lt;br /&gt;
script/generate scaffold Todo title:string description:text done:boolean due_date:datetime user:references&lt;br /&gt;
rake db:migrate&lt;br /&gt;
</code></p>

<p><img src="/uploads/todolist-user-todo-association.png" title="todolist-user-todo-association" ></p>

<p>安装认证和授权插件：<br />
```
script/plugin install git://github.com/technoweenie/restful-authentication.git<br />
script/generate authenticated user sessions</p>

<p>script/plugin install git://github.com/greenisus/forgot_password.git<br />
script/generate forgot_password password user<br />
```</p>

<p>然后将include AuthenticatedSystem移到ApplicationController中：<br />
<code>
class ApplicationController &lt; ActionController::Base&lt;br /&gt;
  include AuthenticatedSystem&lt;br /&gt;
</code></p>

<p>添加Todo和User的关联：<br />
```
class Todo &lt; ActiveRecord::Base<br />
  belongs_to :user</p>

<p>class User &lt; ActiveRecord::Base<br />
  has_many :todos<br />
```</p>

<p>修改TodosController将todo和user绑定：<br />
```
class TodosController &lt; ApplicationController<br />
  before_filter :login_required</p>

<p>  def index<br /></p>

<pre><code>@todos = current_user.todos
</code></pre>

<p>  def show<br /></p>

<pre><code>@todo = current_user.todos.find(params[:id])
</code></pre>

<p>  def new<br /></p>

<pre><code>@todo = current_user.todos.create
</code></pre>

<p>  def edit<br /></p>

<pre><code>@todo = current_user.todos.find(params[:id])
</code></pre>

<p>  def create<br /></p>

<pre><code>@todo = current_user.todos.create(params[:todo])&lt;br /&gt;
@todo.user = current_user
</code></pre>

<p>  def update<br /></p>

<pre><code>@todo = current_user.todos.find(params[:id])
</code></pre>

<p>  def destroy<br /></p>

<pre><code>@todo = current_user.todos.find(params[:id])&lt;br /&gt;
</code></pre>

<p>```</p>

<p>创建一个应用的首页：<br />
<code>
script/generate controller home index&lt;br /&gt;
</code></p>

<p>为了可以访问到应用首页，需要删除public/index.html文件，并且在routes.rb中添加：<br />
<code>
map.root :controller =&gt; 'home'&lt;br /&gt;
</code></p>

<p>将app/views/layouts下的todos.html.erb改名为application.html.erb，然后添加下面的代码：<br />
```
&lt;% if logged_in? -%><br />
  <div id="user-bar-greeting">Logged in as &lt;%= link_to_current_user :content_method => :login %></div><br />
  <div id="user-bar-action">(&lt;%= link_to "Log out", logout_path, { :title => "Log out" } %>)</div><br />
&lt;% else -%><br />
  <div id="user-bar-greeting">&lt;%= link_to_login_with_IP 'Not logged in', :style => 'border: none;' %></div><br />
  <div id="user-bar-action"><br /></p>

<pre><code>&lt;%= link_to "Log in", login_path, { :title =&gt; "Log in" } %&gt; /&lt;br /&gt;
&lt;%= link_to "Sign up", signup_path, { :title =&gt; "Create an account" } %&gt;&lt;br /&gt;
</code></pre>

<p>  </div><br />
&lt;% end -%><br />
```</p>

<p>模型todo的description字段是text类型，在页面上用textarea表示简单了一点，打算将它改成为TinyMCE编辑器，可以使用<a href="http://github.com/trevorrowe/tinymce_hammer.git">tinymce_hammer</a>插件来集成。<br />
<code>
script/plugin install git://github.com/trevorrowe/tinymce_hammer.git&lt;br /&gt;
</code></p>

<p>执行以下命令后，将会安装TinyMCE到public/javascript/tiny_mce目录<br />
<code>
script/generate tinymce_installation&lt;br /&gt;
</code></p>

<p>在layout下的模板中添加下面这条语句：<br />
<code>
&lt;%= init_tinymce_hammer_if_required %&gt;&lt;br /&gt;
</code></p>

<p>将app/views/todos下new.html.erb和edit.html.erb中的</p>

<p><code>
&lt;%= f.text_area :description %&gt;&lt;br /&gt;
</code></p>

<p>修改为</p>

<p><code>
&lt;%= f.tinymce :description, :rows =&gt; 10, :cols =&gt; 40 %&gt;&lt;br /&gt;
</code></p>

<p>去除app/views/todos/index.html.erb中description字段的h方法：</p>

<p><code>
&lt;td&gt;&lt;%= todo.description %&gt;&lt;/td&gt;&lt;br /&gt;
</code></p>

<p>还有就是删除todo后记录就彻底地没了，不能恢复，需要给它加上一剂后悔药，使之可以重新被捞出，<a href="http://github.com/technoweenie/acts_as_paranoid.git">acts_as_paranoid</a>插件可以做到这点。<br />
<code>
script/plugin install git://github.com/technoweenie/acts_as_paranoid.git&lt;br /&gt;
script/generate migration add_deleted_at_to_user deleted_at:datetime&lt;br /&gt;
rake db:migrate&lt;br /&gt;
</code></p>

<p>添加acts_as_paranoid到模型中：<br />
<code>
class Todo &lt; ActiveRecord::Base&lt;br /&gt;
  acts_as_paranoid&lt;br /&gt;
</code></p>

<p>现在，调用这个模型的destroy方法将不会真正地删除记录，只会将记录从视图上移除，在deleted_at里记录当前的时间。<del datetime="2013-05-10T02:05:05+00:00">当然，你可以在find中使用with_deleted或only_deleted参数得到被隐藏的记录。</del>在Rails 3中在find中使用参数会报ArgumentError异常，显示如下错误：<br />
<code>
Unknown key: only_deleted&lt;br /&gt;
</code></p>

<p>解决办法是使用以下格式的代码：<br />
<code>
current_user.todos.only_deleted.find(:all)&lt;br /&gt;
</code></p>

<p>至此，一个简单的todolist就算完成了。</p>

<p>代码下载：<a href="https://github.com/dohkoos/tadalist">https://github.com/dohkoos/tadalist</a></p>

<p>演示地址：<a href="http://tadalist.herokuapp.com/">http://tadalist.herokuapp.com/</a></p>
]]></content>
  </entry>
  
</feed>
