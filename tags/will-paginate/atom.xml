<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: will_paginate | 乐者为王]]></title>
  <link href="http://codemany.com/tags/will-paginate/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-08-13T08:54:39+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[为你的Rails应用加上分页功能]]></title>
    <link href="http://codemany.com/blog/2010/09/09/for-your-rails-application-with-tabs/"/>
    <updated>2010-09-09T09:37:26+08:00</updated>
    <id>http://codemany.com/blog/2010/09/09/for-your-rails-application-with-tabs</id>
    <content type="html"><![CDATA[<p>安装<a href="http://github.com/mislav/will_paginate.git">will_paginate</a>插件：<br />
<code>
script/plugin install git://github.com/mislav/will_paginate.git&lt;br /&gt;
</code></p>

<p>安裝好插件后，在action中將本來的find方法<br />
<code>
@contacts = Contact.all&lt;br /&gt;
</code></p>

<p>改为<br />
<code>
@contacts = Contact.paginate(:page =&gt; params[:page])&lt;br /&gt;
</code></p>

<p>然后在action对应的view最后加入以下代码：<br />
<code>
&lt;%= will_paginate @contacts %&gt;
</code></p>

<p>现在便可以使用分页功能了，该语句会产生如下的HTML代码：<br />
```</p>

<div class="pagination">
  <span class="disabled prev_page">&laquo; Previous</span>
  <span class="current">1</span>
  <a href="http://codemany.com/contacts?page=2&s=" rel="next">2</a>
  <a href="http://codemany.com/contacts?page=2&s=" class="next_page" rel="next">Next &raquo;</a>
</div>


<p>```</p>

<p>下面加入搜索功能，在view的适当位置加入:<br />
```
&lt;% form_tag contacts_path, :method => 'get' do %></p>

<p>  &lt;%= text_field_tag :s, params[:s] %>
  &lt;%= submit_tag "Search", :name => nil %>
</p>
&lt;% end %>
```</p>

<p>并且将action中的代码修改为：<br />
<code>
@contacts = Contact.paginate(&lt;br /&gt;
  :page =&gt; params[:page],&lt;br /&gt;
  :per_page =&gt; 5,&lt;br /&gt;
  :conditions =&gt; ["name like ?", "%#{params[:s]}%"])&lt;br /&gt;
</code></p>

<p>试着进行搜索，可以看到搜索结果也很好的进行了分页。</p>

<p>此外will_paginate还提供一些分页统计信息：<br />
<code>
Total entries: &lt;%= @contacts.total_entries %&gt;
Total pages: &lt;%= @contacts.total_pages %&gt;
Current page: &lt;%= @contacts.current_page %&gt;
</code></p>

<p>最后加上will_paginate推荐的css：<br />
```
.pagination {<br />
  padding: 3px;<br />
  margin: 3px;<br />
}</p>

<p>.pagination a {<br />
  padding: 2px 5px 2px 5px;<br />
  margin: 2px;<br />
  border: 1px solid #aaaadd;<br />
  text-decoration: none;<br />
  color: #000099;<br />
}</p>

<p>.pagination a:hover, .pagination a:active {<br />
  border: 1px solid #000099;<br />
  color: #000;<br />
}</p>

<p>.pagination span.current {<br />
  padding: 2px 5px 2px 5px;<br />
  margin: 2px;<br />
  border: 1px solid #000099;<br />
  font-weight: bold;<br />
  background-color: #000099;<br />
  color: #FFF;<br />
}</p>

<p>.pagination span.disabled {<br />
  padding: 2px 5px 2px 5px;<br />
  margin: 2px;<br />
  border: 1px solid #eee;<br />
  color: #ddd;<br />
}
```</p>

<p>在写代码的时候碰到一个问题，网上的文章都使用page_count来表示总的分页数，但我在使用时出现了undefined method 'page_count'错误，把page_count换成total_pages就好了。</p>

<p>2011/1/4更新</p>

<p>这里使用的是2.3.15版本的will_paginate，暂时还不支持i18n，不过可以通过在app/helps/application_helper.rb中添加以下代码来实现：</p>

<p>```
include WillPaginate::ViewHelpers</p>

<p>def will_paginate_with_i18n(collection, options = {})
  will_paginate_without_i18n(collection, options.merge(</p>

<pre><code>                    :previous_label =&gt; I18n.t(:previous, :default =&gt; 'Previous'),
                    :next_label =&gt; I18n.t(:next), :default =&gt; 'Next'))
</code></pre>

<p>  end</p>

<p>alias_method_chain :will_paginate, :i18n
```</p>

<p>然后在config/locales/zh.yml中添加：</p>

<p><code>
next: "后一页"
previous: "前一页"
</code></p>
]]></content>
  </entry>
  
</feed>
