<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: will_paginate | 乐者为王]]></title>
  <link href="http://codemany.com/tags/will-paginate/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2017-11-10T20:11:00+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用will_paginate插件给Rails应用添加分页功能]]></title>
    <link href="http://codemany.com/blog/add-pagination-for-rails-application-with-will-paginate-plugin/"/>
    <updated>2010-09-09T09:37:26+08:00</updated>
    <id>http://codemany.com/blog/add-pagination-for-rails-application-with-will-paginate-plugin</id>
    <content type="html"><![CDATA[<p>安装<a href="https://github.com/mislav/will_paginate">will_paginate</a>插件：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">script/plugin install git://github.com/mislav/will_paginate.git
</code></pre></div>
<p>安裝好插件后，在action中將本來的find方法：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">@contacts = Contact.all
</code></pre></div>
<p>改为</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">@contacts = Contact.paginate(:page =&gt; params[:page])
</code></pre></div>
<p>然后在action对应的view最后加入以下代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;%= will_paginate @contacts %&gt;
</code></pre></div>
<p>现在便可以使用分页功能了，该语句会产生如下的HTML代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;div class=&quot;pagination&quot;&gt;
  &lt;span class=&quot;disabled prev_page&quot;&gt;&amp;laquo; Previous&lt;/span&gt;
  &lt;span class=&quot;current&quot;&gt;1&lt;/span&gt;
  &lt;a href=&quot;http://codemany.com/contacts?page=2&amp;s=&quot; rel=&quot;next&quot;&gt;2&lt;/a&gt;
  &lt;a href=&quot;http://codemany.com/contacts?page=2&amp;s=&quot; class=&quot;next_page&quot; rel=&quot;next&quot;&gt;Next &amp;raquo;&lt;/a&gt;
&lt;/div&gt;
</code></pre></div>
<p>下面加入搜索功能，在view的适当位置加入:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;% form_tag contacts_path, :method =&gt; &#39;get&#39; do %&gt;
&lt;p&gt;
  &lt;%= text_field_tag :s, params[:s] %&gt;
  &lt;%= submit_tag &quot;Search&quot;, :name =&gt; nil %&gt;
&lt;/p&gt;
&lt;% end %&gt;
</code></pre></div>
<p>并且将action中的代码修改为：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">@contacts = Contact.paginate(
  :page =&gt; params[:page],
  :conditions =&gt; [&quot;name like ?&quot;, &quot;%#{params[:s]}%&quot;])
</code></pre></div>
<p>试着进行搜索，可以看到搜索结果也很好的进行了分页。</p>

<p>此外will_paginate还提供一些分页统计信息：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">Total entries: &lt;%= @contacts.total_entries %&gt;
Total pages: &lt;%= @contacts.total_pages %&gt;
Current page: &lt;%= @contacts.current_page %&gt;
</code></pre></div>
<p>最后加上will_paginate推荐的CSS代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">.pagination {
  padding: 3px;
  margin: 3px;
}

.pagination a {
  padding: 2px 5px 2px 5px;
  margin: 2px;
  border: 1px solid #aaaadd;
  text-decoration: none;
  color: #000099;
}

.pagination a:hover, .pagination a:active {
  border: 1px solid #000099;
  color: #000;
}

.pagination span.current {
  padding: 2px 5px 2px 5px;
  margin: 2px;
  border: 1px solid #000099;
  font-weight: bold;
  background-color: #000099;
  color: #fff;
}

.pagination span.disabled {
  padding: 2px 5px 2px 5px;
  margin: 2px;
  border: 1px solid #eee;
  color: #ddd;
}
</code></pre></div>
<p>在写代码的时候碰到一个问题，网上的文章都使用page_count来表示总的分页数，但我在使用时出现了undefined method &#39;page_count&#39;错误，把page_count换成total_pages后就好了。</p>

<p>2011/1/4更新</p>

<p>这里使用的是2.3.12版本的will_paginate，暂时还不支持i18n，不过可以通过在app/helps/application_helper.rb中添加以下代码来实现：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">include WillPaginate::ViewHelpers

def will_paginate_with_i18n(collection, options = {})
  will_paginate_without_i18n(collection, options.merge(
                        :previous_label =&gt; I18n.t(:previous, :default =&gt; &#39;Previous&#39;),
                        :next_label =&gt; I18n.t(:next), :default =&gt; &#39;Next&#39;))
  end

alias_method_chain :will_paginate, :i18n
</code></pre></div>
<p>然后在config/locales/zh.yml中添加：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">previous: &quot;&amp;laquo; 前一页&quot;
next: &quot;后一页 &amp;raquo;&quot;
</code></pre></div>]]></content>
  </entry>
  
</feed>
