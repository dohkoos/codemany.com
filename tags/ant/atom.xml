<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Ant | 乐者为王]]></title>
  <link href="http://codemany.com/tags/ant/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2017-04-09T22:38:01+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ant系列之用EMMA测量测试覆盖率的问题]]></title>
    <link href="http://codemany.com/blog/ant-series-problem-using-emma-measure-test-coverage/"/>
    <updated>2006-01-16T09:12:26+08:00</updated>
    <id>http://codemany.com/blog/ant-series-problem-using-emma-measure-test-coverage</id>
    <content type="html"><![CDATA[<p>EMMA是一个coverage工具，有on-the-fly和offline两种使用方式，在Ant里通常采用offline方式。</p>

<p>到sourceforge下载了2.0版本的EMMA下来，由于将EMMA的生成文件做了重定向，因此遇到了些问题，比如出现以下错误：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">nothing to do: no runtime coverage data found in any of the data files
</code></pre></div>
<p>查找EMMA的FAQ 3.7节，只是告诉你可能少了metadata和runtime coverate date（对Ant用户来说一般是少了runtime coveraget date，它的后缀名默认是ec）。</p>

<p>由FAQ 3.15节可以知道runtime coverage data文件默认是生成在user.dir目录下的（即build.xml中的basedir目录下），而由instr指令生成的metadata文件（后缀名默认为em）则已经被重定向到另外的目录（用来生成coverage report的地方），所以必须重新设置coverage.out.file的值，用来重定向生成的runtime coverage data。因为runtime coverage data是在junit任务执行时产生的，所以我们可以在junit任务中添加一行代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;sysproperty key=&quot;emma.coverage.out.file&quot; value=&quot;${coverage.dir}/coverage.emma&quot; /&gt;
</code></pre></div>
<p>注意：</p>

<ol>
<li>metadata和runtime文件的后缀名最好设置相同；</li>
<li>一定要将junit任务的fork属性设置为true，这是因为EMMA 2.0的runtime coverage data是在JVM退出后生成的；</li>
<li>instrumented classes必须是第一个被JVM执行的，所以instrumented classes目录必须处在junit任务的classpath的第一行，具体原因不明，如果谁知道还请告知下。</li>
</ol>

<p>其实EMMA附带的examples目录下的build-offline.xml里已经说明的很详细了，只不过下载后没有仔细看，才遇到了一些问题。下面是build.xml的部分代码：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;path id=&quot;classpath&quot;&gt;
  &lt;pathelement location=&quot;${instrumentedclasses}&quot; /&gt;
  &lt;pathelement location=&quot;${classes}&quot; /&gt;
  &lt;pathelement location=&quot;${testclasses}&quot; /&gt;
  &lt;fileset dir=&quot;${lib}&quot; includes=&quot;**/*.jar&quot; /&gt;
&lt;/path&gt;

&lt;target name=&quot;compile&quot; depends=&quot;prepare&quot;&gt;
  &lt;javac srcdir=&quot;${src}&quot; destdir=&quot;${classes}&quot; debug=&quot;on&quot;&gt;
    &lt;classpath refid=&quot;classpath&quot; /&gt;
  &lt;/javac&gt;
  &lt;javac srcdir=&quot;${test}&quot; destdir=&quot;${testclasses}&quot; debug=&quot;on&quot;&gt;
    &lt;classpath refid=&quot;classpath&quot; /&gt;
  &lt;/javac&gt;
&lt;/target&gt;

&lt;target name=&quot;coverage.instrument&quot; depends=&quot;compile&quot;&gt;
  &lt;emma enabled=&quot;yes&quot;&gt;
    &lt;instr instrpath=&quot;${classes}&quot; destdir=&quot;${instrumentedclasses}&quot;
        metadatafile=&quot;{coveragereports}/metadata.emma&quot; merge=&quot;true&quot;&gt;
    &lt;/instr&gt;
  &lt;/emma&gt;
&lt;/target&gt;

&lt;target name=&quot;junit&quot; depends=&quot;coverage.instrument&quot;&gt;
  &lt;junit printsummary=&quot;yes&quot; haltonfailure=&quot;no&quot; fork=&quot;true&quot;&gt;
    &lt;sysproperty key=&quot;emma.coverage.out.file&quot; value=&quot;${coveragereports}/coverage.emma&quot; /&gt;
    &lt;classpath refid=&quot;classpath&quot; /&gt;

    &lt;formatter type=&quot;xml&quot; /&gt;

    &lt;batchtest fork=&quot;yes&quot; todir=&quot;${junitreports}&quot;&gt;
      &lt;fileset dir=&quot;${test}&quot;&gt;
        &lt;include name=&quot;**/*Test*.java&quot; /&gt;
      &lt;/fileset&gt;
    &lt;/batchtest&gt;
  &lt;/junit&gt;
&lt;/target&gt;

&lt;target name=&quot;coverage.report&quot; depends=&quot;test&quot;&gt;
  &lt;emma enabled=&quot;yes&quot;&gt;
    &lt;report sourcepath=&quot;${src}&quot;&gt;
      &lt;fileset dir=&quot;${coveragereports}&quot;&gt;
        &lt;include name=&quot;*.emma&quot; /&gt;
      &lt;/fileset&gt;

      &lt;html outfile=&quot;${coveragereports}/coverage.html&quot; depth=&quot;method&quot; /&gt;
    &lt;/report&gt;
  &lt;/emma&gt;
&lt;/target&gt;
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ant系列之用JDepend生成包依赖性度量的问题]]></title>
    <link href="http://codemany.com/blog/ant-series-problem-using-jdepend-generate-package-dependency-metrics/"/>
    <updated>2005-12-29T18:04:59+08:00</updated>
    <id>http://codemany.com/blog/ant-series-problem-using-jdepend-generate-package-dependency-metrics</id>
    <content type="html"><![CDATA[<p>首先获取JDepend的最新jar文件jdepend-2.9.jar，把它添加到ANT_HOME/lib目录里。</p>

<p>在build.xml中添加：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;target name=&quot;jdepend&quot; description=&quot;Generate dependency metrics for each package&quot;&gt;
    &lt;jdepend format=&quot;xml&quot; outputfile=&quot;${jdepend.dir}/jdepend-report.xml&quot;&gt;
        &lt;classpath&gt;
            &lt;pathelement path=&quot;classes&quot; /&gt;
        &lt;/classpath&gt;
    &lt;/jdepend&gt;
&lt;/target&gt;
</code></pre></div>
<p>运行任务后出现如下的错误：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">BUILD FAILED
build.xml:59: Missing classespath required argument
    at org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.execute(JDependTask.java:397)
    at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)
    at org.apache.tools.ant.Task.perform(Task.java:364)
    at org.apache.tools.ant.Target.execute(Target.java:341)
    at org.apache.tools.ant.Target.performTasks(Target.java:369)
    at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)
    at org.apache.tools.ant.Project.executeTarget(Project.java:1185)
    at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)
    at org.eclipse.ant.internal.ui.antsupport.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:32)
    at org.apache.tools.ant.Project.executeTargets(Project.java:1068)
    at org.eclipse.ant.internal.ui.antsupport.InternalAntRunner.run(InternalAntRunner.java:423)
    at org.eclipse.ant.internal.ui.antsupport.InternalAntRunner.main(InternalAntRunner.java:137)
</code></pre></div>
<p>查看JDependTask.java文件的397行：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">if (getSourcespath() == null &amp;&amp; getClassespath() == null) {
    throw new BuildException(&quot;Missing classespath required argument&quot;);
} else if (getClassespath() == null) {
    String msg = &quot;sourcespath is deprecated in JDepend &gt;= 2.5 - please convert to classespath&quot;;
    log(msg);
}
</code></pre></div>
<p>发现是getClassespath() == null了，跳到221行：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">public Path getClassespath() {
    return classesPath;
}
</code></pre></div>
<p>不是写了classpath吗？怎么classesPath的值会等于null呢？结果发现在247行有：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">public void setClasspath(Path classpath) {
    if (compileClasspath == null) {
        compileClasspath = classpath;
    } else {
        compileClasspath.append(classpath);
    }
}
</code></pre></div>
<p>原来是在build.xml中把classespath错写成classpath了，那样当然有问题啦。改过来，再运行就可以了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ant系列之用Checkstyle检查代码规范的问题]]></title>
    <link href="http://codemany.com/blog/ant-series-problem-using-checkstyle-check-code-style/"/>
    <updated>2005-12-17T20:33:54+08:00</updated>
    <id>http://codemany.com/blog/ant-series-problem-using-checkstyle-check-code-style</id>
    <content type="html"><![CDATA[<p>首先将checkstyle-all-4.1.jar文件拷贝到项目的lib目录下，并建立CheckStyle配置文件。</p>

<p>然后在build.xml文件中声明CheckStyle任务:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;taskdef resource=&quot;checkstyletask.properties&quot; classpath=&quot;${lib.dir}/checkstyle-all-4.1.jar&quot; /&gt;
</code></pre></div>
<p>接着是建立CheckStyle任务：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;target name=&quot;checkstyle&quot; description=&quot;Generates a report of code convention violations.&quot;&gt;
    &lt;checkstyle config=&quot;${docs.dir}/checkstyle_checks.xml&quot; failOnViolation=&quot;false&quot;&gt;
        &lt;fileset dir=&quot;${src.dir}&quot; includes=&quot;**/*.java&quot; /&gt;
        &lt;formatter type=&quot;xml&quot; toFile=&quot;${checkstyle.dir}/checkstyle_report.xml&quot; /&gt;
    &lt;/checkstyle&gt;
    &lt;xslt basedir=&quot;${checkstyle.dir}&quot; destdir=&quot;${checkstyle.dir}/html&quot; extension=&quot;.html&quot;
            style=&quot;${docs.dir}/checkstyle-frames.xsl&quot;&gt;
        &lt;param name=&quot;output.dir&quot; expression=&quot;${checkstyle.dir}/html&quot; /&gt;
    &lt;/xslt&gt;
&lt;/target&gt;
</code></pre></div>
<p>其中output.dir是checkstyle-frames.xsl中的参数：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;xsl:param name=&quot;output.dir&quot; /&gt;
</code></pre></div>
<p>在运行任务时可能会出现如下异常：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">javax.xml.transform.TransformerException: java.lang.RuntimeException: Unrecognized XSLTC extension &#39;org.apache.xalan.xslt.extensions.Redirect:write&#39;
</code></pre></div>
<p>可以将checkstyle-frames.xsl中的：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">xmlns:redirect=&quot;org.apache.xalan.xslt.extensions.Redirect&quot;
</code></pre></div>
<p>改成下面的内容：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">xmlns:redirect=&quot;http://xml.apache.org/xalan/redirect&quot;
</code></pre></div>
<p>如果出现这样的异常：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">Got an exception - java.lang.RuntimeException: Unable to get class information for
</code></pre></div>
<p>可以修改对抛出异常的限制：允许抛出Unchecked异常和抛出另一个已声明异常的子类。</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;module name=&quot;RedundantThrows&quot;&gt;
    &lt;property name=&quot;allowUnchecked&quot; value=&quot;true&quot; /&gt;
    &lt;property name=&quot;allowSubclasses&quot; value=&quot;true&quot; /&gt;
&lt;/module&gt;
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse中Ant执行JUnit测试的问题（2）]]></title>
    <link href="http://codemany.com/blog/problem-running-junit-tests-with-ant-in-eclipse-part2/"/>
    <updated>2005-02-22T22:02:00+08:00</updated>
    <id>http://codemany.com/blog/problem-running-junit-tests-with-ant-in-eclipse-part2</id>
    <content type="html"><![CDATA[<p>Eclipse 3.0.3 + Ant 1.6.2 + JUnit 3.8.1</p>

<p>构建配置文件build.xml：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;target name=&quot;junit&quot;&gt;
    &lt;junit&gt;
        &lt;formatter type=&quot;xml&quot; /&gt;
        &lt;batchtest todir=&quot;${report.dir}&quot;&gt;
            &lt;fileset dir=&quot;${classes.dir}&quot; includes=&quot;**/*Test.class&quot; /&gt;
        &lt;/batchtest&gt;
    &lt;/junit&gt;
&lt;/target&gt;
</code></pre></div>
<p>执行任务的时候出现了异常：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">java.lang.ClassNotFoundException: com.example.learning.HelloTest
    at java.net.URLClassLoader$1.run(Unknown Source)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(Unknown Source)
    at java.lang.ClassLoader.loadClass(Unknown Source)
    at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
    at java.lang.ClassLoader.loadClass(Unknown Source)
    at java.lang.ClassLoader.loadClassInternal(Unknown Source)
    at java.lang.Class.forName0(Native Method)
    at java.lang.Class.forName(Unknown Source)
</code></pre></div>
<p>网上搜索没有找到答案，到Ant官网上发现 <a href="http://ant.apache.org/faq.html#delegating-classloader">http://ant.apache.org/faq.html#delegating-classloader</a> 这篇文章讲了该问题。只要在junit任务里加入classpath指出要加载类的路径就可以了。修改后的build.xml文件如下：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;target name=&quot;junit&quot;&gt;
    &lt;junit&gt;
        &lt;classpath&gt;
            &lt;pathelement location=&quot;${classes.dir}&quot; /&gt;
        &lt;/classpath&gt;
        &lt;formatter type=&quot;xml&quot; /&gt;
        &lt;batchtest todir=&quot;${report.dir}&quot;&gt;
            &lt;fileset dir=&quot;${classes.dir}&quot; includes=&quot;**/*Test.class&quot; /&gt;
        &lt;/batchtest&gt;
    &lt;/junit&gt;
&lt;/target&gt;
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse中Ant执行JUnit测试的问题（1）]]></title>
    <link href="http://codemany.com/blog/problem-running-junit-tests-with-ant-in-eclipse-part1/"/>
    <updated>2005-02-05T18:33:00+08:00</updated>
    <id>http://codemany.com/blog/problem-running-junit-tests-with-ant-in-eclipse-part1</id>
    <content type="html"><![CDATA[<p>Eclipse 3.0.3 + Ant 1.6.2 + JUnit 3.8.1</p>

<p>构建配置文件build.xml：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">&lt;target name=&quot;junit&quot;&gt;
    &lt;junit&gt;
        &lt;formatter type=&quot;xml&quot; /&gt;
        &lt;batchtest todir=&quot;${report.dir}&quot;&gt;
            &lt;fileset dir=&quot;${classes.dir}&quot; includes=&quot;**/*Test.class&quot; /&gt;
        &lt;/batchtest&gt;
    &lt;/junit&gt;
&lt;/target&gt;
</code></pre></div>
<p>在执行时出现了以下问题：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">BUILD FAILED: build.xml:44: Could not create task or type of type: junit.

Ant could not find the task or a class this task relies upon.

This is common and has a number of causes; the usual
solutions are to read the manual pages then download and
install needed JAR files, or fix the build file:
 - You have misspelt &#39;junit&#39;.
   Fix: check your spelling.
 - The task needs an external JAR file to execute
     and this is not found at the right place in the classpath.
   Fix: check the documentation for dependencies.
   Fix: declare the task.
 - The task is an Ant optional task and the JAR file and/or libraries
     implementing the functionality were not found at the time you
     yourself built your installation of Ant from the Ant sources.
   Fix: Look in the ANT_HOME/lib for the &#39;ant-&#39; JAR corresponding to the
     task and make sure it contains more than merely a META-INF/MANIFEST.MF.
     If all it contains is the manifest, then rebuild Ant with the needed
     libraries present in ${ant.home}/lib/optional/, or alternatively,
     download a pre-built release version from apache.org
 - The build file was written for a later version of Ant
   Fix: upgrade to at least the latest release version of Ant
 - The task is not an Ant core or optional task
     and needs to be declared using &lt;taskdef&gt;.
 - You are attempting to use a task defined using
    &lt;presetdef&gt; or &lt;macrodef&gt; but have spelt wrong or not
   defined it at the point of use

Remember that for JAR files to be visible to Ant tasks implemented
in ANT_HOME/lib, the files must be in the same directory or on the
classpath

Please neither file bug reports on this problem, nor email the
Ant mailing lists, until all of these causes have been explored,
as this is not an Ant bug.
</code></pre></div>
<p>产生上面错误的原因是Ant在执行junit任务时没有找到junit.jar这个文件。将junit.jar放到ANT_HOME/lib目录下，再次执行，这下该OK了吧！</p>

<p>有没有搞错，还产生同样的错误！到命令行下试试。打入命令ant junit，然后出现：</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">Buildfile: build.xml

junit:

BUILD SUCCESSFUL
Total time: 1 second
</code></pre></div>
<p>怎么会这样？命令行下可以，Eclipse中就不行了？</p>

<p>到Preferences -&gt; Ant -&gt; Runtime -&gt; Classpath下设置一下junit.jar的路径，再次执行junit任务，终于在Console视图中看到了成功的消息。</p>
]]></content>
  </entry>
  
</feed>
