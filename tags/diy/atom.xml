<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: DIY | 乐者为王]]></title>
  <link href="http://codemany.com/tags/diy/atom.xml" rel="self"/>
  <link href="http://codemany.com/"/>
  <updated>2014-09-20T14:13:51+08:00</updated>
  <id>http://codemany.com/</id>
  <author>
    <name><![CDATA[dohkoos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Raspberry Pi上使用无线网卡]]></title>
    <link href="http://codemany.com/blog/2014/07/06/using-wifi-on-raspberry-pi/"/>
    <updated>2014-07-06T20:25:08+08:00</updated>
    <id>http://codemany.com/blog/2014/07/06/using-wifi-on-raspberry-pi</id>
    <content type="html"><![CDATA[<p>使用的是EDUP EP-N1556这款无线网卡，体积小巧，支持300M速率，买回来插在RPi上直接就能识别了。</p>

<p>输入lsusb命令，可以见到设备列表中有RTL8192CU 802.11n WLAN Adapter字样，说明网卡已经被系统识别，芯片是RTL8192。</p>

<p>下面就给无线网卡设置静态IP地址：</p>

<p>修改/etc/wpa_supplicant/wpa_supplicant.conf</p>

<p>```
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1</p>

<p>network={
  ssid="NETGEAR"
  psk="12345678"
  proto=RSN #也可以写成WPA2
  key_mgmt=WPA-PSK #一定不要写成WPA2-PSK
  id_str="edup1556"
}
```</p>

<p>修改/etc/network/interfaces</p>

<p>```
auto lo</p>

<p>iface lo inet loopback</p>

<p>iface eth0 inet static
  address 192.168.0.100
  netmask 255.255.255.0
  gateway 192.168.0.1
  dns-nameservers 8.8.8.8</p>

<p>allow-hotplug wlan0
iface wlan0 inet manual
  wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
iface edup1556 inet static
  address 192.168.0.200
  netmask 255.255.255.0
  gateway 192.168.0.1
  dns-nameservers 8.8.8.8</p>

<p>iface default inet dhcp
```</p>

<p>然后用ifconfig命令列出所有的网络设备，可以看到wlan0的IP是192.168.0.200了。</p>

<p>你的树莓派自由了，不再需要网线拖着了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Raspberry Pi监控室内温湿度]]></title>
    <link href="http://codemany.com/blog/2014/06/24/using-raspberry-pi-to-monitor-home-humiture/"/>
    <updated>2014-06-24T14:19:44+08:00</updated>
    <id>http://codemany.com/blog/2014/06/24/using-raspberry-pi-to-monitor-home-humiture</id>
    <content type="html"><![CDATA[<p>机房没有温湿度监控系统，只有温湿度计，还不是数字的，只能得到个大概的读数，不是非常精确。怎么办？自己动手DIY个在线的温湿度监控系统吧！</p>

<p>物品清单：</p>

<ul>
<li>金士顿16G的SDHC卡1张</li>
<li>SDHC读卡器1个（可选）</li>
<li>网线1条</li>
<li>手机充电器（5V～1A）1个</li>
<li>MicroUSB数据线1条</li>
<li>电脑1台</li>
<li>1P-1P双头母杜邦线3条</li>
<li>10K电位器一个</li>
<li>DHT11或DHT22温湿度传感器一个（可以购买已经焊好电阻的传感器模块）</li>
</ul>


<p>1、让树莓派（Raspberry Pi）工作起来</p>

<p>从 <a href="http://www.raspberrypi.org/downloads">http://www.raspberrypi.org/downloads</a> 下载基于debian的wheezy镜像Raspbian。如果使用Windows系统，官方建议使用<a href="http://sourceforge.net/projects/win32diskimager/">Win32DiskImager</a>来复制image文件到SD卡（如果是Linux系统可以用工具dd）。写入系统后，把卡插到板子上，接上网线、电源，然后就启动了。等个20多秒，板上3个小灯都亮了，表明系统已经启动成功。</p>

<p>登录路由器后台找到raspberrypi设备分配到的IP。然后使用SSH或VNC（前者是命令行界面，后者是图形界面）连接刚才从路由器找到的IP地址。登录的默认账号是pi，密码是raspberry。登录RPi之后输入ping qq.com测试上网是否正常。</p>

<p>2、使用固定的IP访问RPi</p>

<p>默认情况下RPi使用的是自动分配的IP地址，每次登录都需要在路由器中查找对应IP，实在太麻烦，可以把它设置成静态的。</p>

<p><code>
sudo vi /etc/network/interfaces
</code></p>

<p>打开配置文件，看到如下内容</p>

<p>```
auto lo</p>

<p>iface lo inet loopback
iface eth0 inet dhcp</p>

<p>allow-hotplug wlan0
iface wlan0 inet manual
wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
iface default inet dhcp
```</p>

<p>将之修改成</p>

<p>```
auto lo</p>

<p>iface lo inet loopback</p>

<p>iface eth0 inet static
  address 192.168.0.100
  netmask 255.255.255.0
  gateway 192.168.0.1
  dns-nameservers 8.8.8.8</p>

<p>allow-hotplug wlan0
iface wlan0 inet manual
  wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf</p>

<p>iface default inet dhcp
```</p>

<p>然后存盘退出。以后就可以通过192.168.0.100来登录RPi了。</p>

<p>3、把温湿度传感器接到RPi上</p>

<p><img src="/uploads/rpi-dht22.png" title="rpi-dht22" ></p>

<p>DHT11/DHT22共有4根引脚：</p>

<p><code>
1 -&gt; 3.3v 接左边第1个GPIO针脚
2 -&gt; GPIO 数据接口，可随意连接1个GPIO针脚（第7个针脚对应的是GPIO Pin #4）
3 -&gt; NC 不接
4 -&gt; GND 接地（第14个针脚）
</code></p>

<p>注意：在1脚和2脚间还需要并联10K的电阻，以保持读数稳定。</p>

<p>安装好的样子：</p>

<p><img src="/uploads/rpi-actual.png" title="rpi-actual" ></p>

<p>4、用C读取当前的温度和湿度值</p>

<p>用的是树莓派2红色B型，它采用Broadcom BCM2835 (CPU, GPU, DSP, and SDRAM)芯片。所以读取GPIO口需要到 <a href="http://www.open.com.au/mikem/bcm2835/index.html">http://www.open.com.au/mikem/bcm2835/index.html</a> 获取最新的BCM2835 C语言库，然后下载，编译和安装。</p>

<p><code>
wget http://www.open.com.au/mikem/bcm2835/bcm2835-1.36.tar.gz
tar -zxvf bcm2835-1.36.tar.gz
cd bcm2835-1.36
./configure
make
sudo make install
</code></p>

<p>从Github库中获取DHT11/DHT22温湿度程序，编译测试。</p>

<p><code>
cd /home/pi
git clone https://github.com/dohkoos/Raspberry-Pi-Code.git
cd Raspberry-Pi-Code/DHT22
make
sudo ./dht 22 4 # 数据接口接在第7针脚，所以这里是4
</code></p>

<p>5、记录曲线图到云端</p>

<p>这里使用<a href="http://www.yeelink.net/">Yeelink</a>的服务，Yeelink是国内比较知名的免费物联网数据平台。根据它的API规则，提交的数据必须为JSON格式：</p>

<p><code>
{"timestamp": "2012-03-15 16:13:14", "value": 294.34}
</code></p>

<p>将温湿度值提交到Yeelink的Ruby代码：</p>

<p>```</p>

<h1>Capture temperature &amp; humidity value from the console</h1>

<p>output = <code>sudo ./dht 22 4</code>
mt = /Temp =\s+([0-9.]+)/.match(output)
temperature = mt[1]</p>

<p>mt = /Hum =\s+([0-9.]+)/.match(output)
humidity = mt[1]</p>

<h1>Combined temperature &amp; humidity value into json format</h1>

<p>json_temperature = %Q[{\"timestamp\": \"#{Time.now}\", \"value\": #{temperature}}]
json_humidity = %Q[{\"timestamp\": \"#{Time.now}\", \"value\": #{humidity}}]</p>

<h1>Post json data to Yeelink</h1>

<p><code>curl -X POST -d "#{json_temperature}" -H "Content-Type: application/json" -H "U-ApiKey:XXXXXXXXXXXXXXXX" http://api.yeelink.net/v1.0/device/&lt;device_id&gt;/sensor/&lt;sensor_id&gt;/datapoints</code>
<code>curl -X POST -d "#{json_humidity}" -H "Content-Type: application/json" -H "U-ApiKey:XXXXXXXXXXXXXXXX" http://api.yeelink.net/v1.0/device/&lt;device_id&gt;/sensor/&lt;sensor_id&gt;/datapoints</code>
```</p>

<p>将U-ApiKey:XXXXXXXXXXXXXXXX替换为自已账户的API Key，后面的URL也需要替换为自己申请的传感器URL。</p>

<p>6、添加到计划任务</p>

<p>使用crontab命令将以下内容添加到计划任务中：</p>

<p>```</p>

<h1>m h dom mon dow command</h1>

<p>*/10 * * * * cd /home/pi/Raspberry-Pi-Code/DHT22/ &amp;&amp; ruby yeelink.rb
```</p>

<p>重启计划任务，然后每隔10分钟就会上传一次数据到云端。</p>

<p><code>
sudo /etc/init.d/cron restart
</code></p>

<p>下面是我的曲线图：</p>

<p><img src="/uploads/rpi-yeelink.png" title="rpi-yeelink" ></p>
]]></content>
  </entry>
  
</feed>
